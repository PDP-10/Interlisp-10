(FILECREATED "11-SEP-74 16:52:26" LAP.;2 43540  

     changes to:  LAPCOMS

     previous date: "11-SEP-74 01:38:30" LAP.;1)


  (LISPXPRINT (QUOTE LAPCOMS)
	      T)
  [RPAQQ LAPCOMS
	 ((FNS * LAPFNS)
	  (PROP OPD BND BNDN SVN SVB ENTERF LQ LQ2 LQI LQ2I LDI LDI2 
		LDV STV LDV2 LDF STF LDF2 LDTN LDN LDN2 MOV21 FCLL CAR1 
		CDR1 CARQ CARQ2 CAR2 CDR2 CARV CDRV CAR2V CDR2V RPQ 
		ACLL CLL CLL2 CLLA LCLL LCLL2 RCLL BA* BN BNN LQTS LQNS 
		SKE SKNE SKEQ SKNEQ SKEI SKNEI SKEN SKNEN SKES SKNES 
		SKA SKNA SKNM SKNNM SKI SKNI STE STN LDTY J JR JL JGE 
		RET LPOPN LPUSHN POPNN PUSHP PUSHQ PUSHV POPP POPP2 
		UNCOV XWD)
	  (PROP OPD * OPCODES)
	  (PROP MACRO LAPPOP LAPRBIT LAPPUSH0 NSUBPAIR)
	  (BLOCKS * LAPBLOCKS)
	  [P (PUTD (QUOTE NSUBPAIR)
		   (GETD (QUOTE SUBPAIR]
	  (DECLARE: DOEVAL@COMPILE DONTCOPY (PROP MACRO OBOUT OSFBSZ))
	  (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
		    (ADDVARS (NLAMA)
			     (NLAML TREF GREF FREF VREF)))
	  (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS
		    (ADDVARS (NLAMA)
			     (NLAML MKLCL FREBND TREF GREF FREF VREF 
				    SETU]
  (RPAQQ LAPFNS
	 (LAP LAPMAP LAP1 LAPOUT LAPXR LAPAC LAPADR LAPNLIT LAPLIT 
	      NMEMB LAPUTGU LAPUTGG LAPUTG SETU SETP LAPDFT LAPDFT1 
	      LAPCKT LAPPW LAPPT LAPP1 VREF FREF FREF1 GREF TREF FREBND 
	      BIND BINDNIL BIND1 BLKBIND UNBIND UNBINDN MKLCL FASTCALL 
	      MKENTRY LAPERROR LAPST LAPFW LAPPUSH0 LAPRBIT LAPPOP 
	      NSUBPR NOUT))
(DEFINEQ

(LAP
  [LAMBDA (FN ARGS FREE CODE ARGTY OLDF)
    (PROG (LIT LITN LOC AST FST IUTAGS UTAGS GTAGS LFREE NARGS VPP VFF 
	       PLITORG A UDFTGS ETAGS REBFLGS)
          (SETQ LFREE (LENGTH FREE))
          (SETQ VPP (GETP (QUOTE PP)
			  (QUOTE COREVAL)))
          (SETQ VFF (GETP (QUOTE FF)
			  (QUOTE COREVAL)))
          [SETQ IUTAGS (SETQ UTAGS (LIST (CONS (QUOTE LITORG))
					 (CONS (QUOTE PLITORG]
          (SETQ A (IMINUS (IPLUS (SETQ NARGS (LENGTH ARGS))
				 LFREE)))
          [SETQ AST (MAPCAR ARGS
			    (FUNCTION (LAMBDA (E)
				[COND
				  ((OR (GETP E (QUOTE GLOBALVAR))
				       (FMEMB E GLOBALVARS))
				    (COMPEM (CONS E
						  (QUOTE (- IS GLOBAL]
				(CONS E (SETQ A (ADD1 A]
          [COND
	    ((AND BLKFLG LOCALFREEVARS)
	      (PROG ((B FREE)
		     A)
		L   (COND
		      (B [COND
			   ((NULL (FMEMB (CAR B)
					 LOCALFREEVARS))
			     (SETQ A (NCONC A (LIST (CAR B]
			 (SETQ B (CDR B))
			 (GO L)))
		    (SETQ LFREE (FLENGTH A))
		    (SETQ FREE A]               (* AST = ((ARG.STKPOS) 
                                                ...))
          [SETQ FST (MAPCAR (COND
			      (BLKFLG (APPEND FREE LOCALFREEVARS))
			      (T FREE))
			    (FUNCTION (LAMBDA (E)
				(CONS E (SETQ A (ADD1 A]
                                                (* DITTO FOR FREE 
                                                VARIABLES)
          [COND
	    (BLKFLG (SETQ GTAGS (MAPCAR CALLTAGS
					(FUNCTION (LAMBDA (E)
					    (CONS (CADR E]
          (SETQ LIT (APPEND ARGS (APPEND FREE)))
          (SETQ CODE (CONS (LIST (QUOTE ENTERF)
				 NARGS ARGTY LFREE)
			   CODE))
          (SETQ LOC 0)                          (* IF LISTING, PRINT 
                                                OUTPUT OF PASS 1)
          (PRINT (SETQ A (LIST FN ARGS FREE))
		 T T)
          (COND
	    ((AND LAPFLG (NEQ LSTFIL T))
	      (PRINT A LSTFIL FILERDTBL)))
          (SELECTQ LAPFLG
		   ((T 1)
		     (LAPP1 CODE))
		   NIL)
          (SELECTQ LAPFLG
		   ((T 2)
		     (TERPRI LSTFIL)
		     (PRINT FN LSTFIL FILERDTBL))
		   NIL)
          (SETQ CODE (LAPMAP CODE (CONS NIL NIL)))
          (LAPDFT (QUOTE LITORG))
          (LAPPT (QUOTE LITORG))
          [MAPC LITN (FUNCTION (LAMBDA (N)
		    (LAPPW N)
		    (SETQ LOC (ADD1 LOC))
		    (SETQ CODE (TCONC CODE N]
          (SETQ PLITORG LOC)
          (LAPDFT (QUOTE PLITORG))
          (LAPPT (QUOTE PLITORG))
          [MAPC LIT (FUNCTION (LAMBDA (N)
		    (LAPPW N)
		    (SETQ LOC (ADD1 LOC))
		    (SETQ CODE (TCONC CODE N]
          (LAPCKT)
          (COND
	    ((OR STRF LCFIL)
	      (LAPST FN (CAR CODE)
		     PLITORG LOC])

(LAPMAP
  (LAMBDA (CODE LL)

          (* GOES THRU CODE LIST FROM PASS1 ,DONT DO MAP SO 
          CODE CAN BE THROWN AWAY WHEN DONE)


    (PROG NIL
      A   (COND
	    ((NULL CODE)
	      (RETURN LL))
	    (T (LAP1 (CAR CODE))
	       (SETQ CODE (CDR CODE))
	       (GO A))))))

(LAP1
  (LAMBDA (CL P)
    (COND
      ((ATOM CL)                                (* TAG)
	(COND
	  (LAPFLG (LAPPT CL)))
	(LAPDFT CL))
      ((EQ (CAR CL)
	   (QUOTE PROG))                        (* PROG)
	(PROG ((AST AST)
	       (UTAGS IUTAGS)
	       UD ETAGS REBS PREBFLGS)
	      (LAPMAP (CDR CL)
		      LL)
	      (LAPCKT)))
      ((EQ (CAR CL)
	   (QUOTE SUBFN))
	(PROG ((GTAGS GTAGS)
	       REBS)                            (* REBIND TAGS IN FN 
                                                WITHIN BLOCK)
	      (LAPMAP (CDR CL)
		      LL)))
      ((EQ (CAR CL)
	   (QUOTE LAM))
	(PROG ((AST AST)
	       REBS)
	      (LAPMAP (CDR CL)
		      LL)))
      ((NUMBERP (CAR CL))                       (* NUMBER)
	(LAPOUT CL (IPLUS (CAR CL)))            (* COPY NUMBER)
	)
      ((NUMBERP (SETQ P (GETP (CAR CL)
			      (QUOTE OPD))))    (* NUMERIC OPD)
	(LAPOUT CL (LLSH P 18)))
      ((EQ (CAR P)
	   (QUOTE LAMBDA))                      (* FUNCTIONAL OPD)
	(LAPMAP (APPLY P (CDR CL))
		LL))
      (P                                        (* SUBSTITUTION OPD)
	 (COND
	   ((CAR P)
	     (PROG ((A P))
	       L   (COND
		     ((NULL (SETQ A (CDR A)))
		       (RETURN)))
	           (LAP1 (NSUBPAIR (CAR P)
				   (CDR CL)
				   (CAR A)))
	           (GO L)))
	   (T (LAPMAP (CDR P)
		      LL))))
      (T (LAPMAP (BLKAPPLY (CAR CL)
			   (CDR CL))
		 LL)))))

(LAPOUT
  (LAMBDA (WD P)                                (* EVALUATE AND OUTPUT 
                                                ONE WORD, P IS THE OPD 
                                                VALUE)
    (PROG ((WD1 WD)
	   S LNK AF R)

          (* S IS COREVAL NAME, LNK IS LINK IN UNDEFINED 
          SYMBOL CHAIN, AF IS T IF ADDRESS PART SEEN YET, R IS 
          T IF WORD IS RELOCATABLE)


      A   (SETQ WD (CDR WD))
      B   (COND
	    ((NULL WD)
	      (TCONC LL (COND
		       (LNK (FRPLACA LNK P))
		       (S (CONS P S))
		       (R (CONS P))
		       (T P)))
	      (SETQ LOC (ADD1 LOC))
	      (COND
		(LAPFLG (LAPPW WD1)))
	      (RETURN)))
          (COND
	    ((AND AF (LISTP (CAR WD)))
	      (LAPXR (CAAR WD)))
	    ((SELECTQ (CAR WD)
		      (@(SETN P (LOGOR P 4194304)))
		      (=(LAPNLIT (CAR (SETQ WD (CDR WD)))))
		      ('(LAPLIT (CAR (SETQ WD (CDR WD)))
				LIT
				(QUOTE PLITORG)))
		      (COND
			((EQ (CADR WD)
			     (QUOTE ,))
			  (LAPAC (CAR WD))
			  (SETQ WD (CDDR WD))
			  (GO B))
			(T (LAPADR (CAR WD)))))))
          (GO A))))

(LAPXR
  (LAMBDA (X)                                   (* PUT INDEX INTO VALUE)
    (COND
      ((LITATOM X)
	(SETQ X (GETP X (QUOTE COREVAL)))))
    (COND
      ((NUMBERP X)
	(SETN P (LOGOR P (LLSH (LOGAND X 15)
			       18))))
      (T (LAPERROR)))))

(LAPAC
  (LAMBDA (X)                                   (* PUT AC INTO VALUE)
    (COND
      ((LITATOM X)
	(SETQ X (OR (GETP X (QUOTE COREVAL))
		    (EVAL X)))))
    (COND
      ((NUMBERP X)
	(SETN P (LOGOR P (LLSH (LOGAND X 15)
			       23))))
      (T (LAPERROR)))))

(LAPADR
  (LAMBDA (X)                                   (* EVAL ELEMENT OF 
                                                ADDRESS FIELD AND ADD 
                                                INTO VALUE)
    (PROG NIL
          (SETQ AF T)                           (* FLAG ADDRESS SEEN)
          (COND
	    ((EQ X (QUOTE *))
	      (SETQ X LOC)
	      (SETQ R T))
	    ((IDP X)
	      (COND
		((GETP X (QUOTE COREVAL))
		  (SETQ S X)
		  (RETURN))
		((SETQ X (LAPUTGU X)))
		(T (RETURN))))
	    ((LISTP X)
	      (COND
		((NUMBERP (SETQ X
			    (SELECTQ
			      (CAR X)
			      (TREF (COND
				      ((FIXP (CADR X))
					(LAPUTGG (CADR X)))
				      (T (LAPUTGU (CADR X)))))
			      ((VREF FREF GREF MKLCL FREBND)
				(BLKAPPLY (CAR X)
					  (CDR X)))
			      (EVAL X)))))
		(T (RETURN (LAPERROR)))))
	    ((NUMBERP X))
	    (T (RETURN (LAPERROR))))
          (COND
	    ((SMALLP P)
	      (SETQ P (LOGAND 262143 (IPLUS P X))))
	    (T (FRPLACA P (VAG (IPLUS P X)))))
          (RETURN))))

(LAPNLIT
  (LAMBDA (N)                                   (* NUMERIC LITERALS CAN 
                                                BE RELOCATABLE OR 
                                                COREVALS, DENOTED BY 
                                                NON-ATOM IN LITN)
    (COND
      ((IDP N)
	(PROG (P S LNK AF R)
	      (SETQ P 0)
	      (LAPADR N)
	      (COND
		(LNK (SETQ N (FRPLACA LNK P)))
		(S (SETQ N (CONS 0 N)))
		(R (SETQ N (CONS P)))
		(T (SETQ N P))))))
    (LAPLIT N LITN (QUOTE LITORG))))

(LAPLIT
  (LAMBDA (X LITL TG)

          (* X IS THE LITERAL, LITL IS APPROPRIATE LIST, TG IS 
          LITERAL ORIGIN TAG)


    (SETQ AF T)
    (COND
      ((NULL X)
	(SETQ S (QUOTE KNIL)))
      ((EQ X T)
	(SETQ S (QUOTE KT)))
      (T (PROG (N)
	       (COND
		 ((LISTP X)
		   (COND
		     ((AND (EQ (CAR X)
			       (QUOTE VAG))
			   (EQ TG (QUOTE PLITORG))
			   (NUMBERP (CADR X)))
		       (RETURN (LAPNLIT (CADR X)))))))
	       (COND
		 ((AND (LISTP X)
		       (EQ TG (QUOTE PLITORG)))
		   (SETQ X (CONS X 0))))
	       (COND
		 ((NULL LITL)
		   (SETQ N 0)
		   (SETQ X (LIST X))
		   (SELECTQ TG
			    (PLITORG (SETQ LIT X))
			    (SETQ LITN X)))
		 (T (SETQ N (NMEMB X LITL (SELECTQ TG
						   (LITORG T)
						   NIL)))))
	       (COND
		 ((SMALLP P)
		   (SETQ P (LOGAND 262143 (IPLUS P N))))
		 (T (FRPLACA P (VAG (IPLUS P N)))))
	       (LAPUTGU TG)
	       (RETURN N))))))

(NMEMB
  (LAMBDA (X L FL)
    (PROG (N)
          (SETQ N 0)
      A   (COND
	    ((COND
		(FL (AND (TYPEP X (NTYP (CAR L)))
			 (EQP X (CAR L))))
		(T (EQ X (CAR L))))
	      (RETURN N))
	    (T (SETQ N (ADD1 N))
	       (COND
		 ((NULL (CDR L))
		   (FRPLACD L (LIST X))
		   (RETURN N)))
	       (SETQ L (CDR L))
	       (GO A))))))

(LAPUTGU
  (LAMBDA (TG)
    (COND
      ((LAPUTG TG UTAGS))
      ((LAPUTG TG ETAGS)                        (* EXTERNAL TAG ?)
	(PROG (V N)
	      (SETQ V (CDR (FASSOC TG UD)))
	      (LAP1 (LIST (QUOTE UNCOV)
			  (CADR V)))
	      (COND
		((NULL BLKFLG)
		  (RETURN 0)))
	      (SETQ N (CAR V))
	      (SETQ V PREBFLGS)
	  A   (COND
		((ZEROP N)
		  (RETURN 0)))
	      (COND
		((CAR V)
		  (LAP1 (QUOTE (JSP 7 , UNBIND)))))
	      (SETQ N (SUB1 N))
	      (SETQ V (CDR V))
	      (GO A)))
      (T (SETQ UTAGS (CONS (CONS TG (SETQ LNK (CONS 0 NIL)))
			   UTAGS))
	 0))))

(LAPUTGG
  (LAMBDA (TG)
    (COND
      ((LAPUTG TG GTAGS))
      (T (SETQ GTAGS (CONS (CONS TG (SETQ LNK (CONS 0 NIL)))
			   GTAGS))
	 0))))

(LAPUTG
  (LAMBDA (TG L)

          (* Use tag, returns value if defined,nil otherwise- 
          sets lnk and updates reference chain)


    (PROG (V)
          (SETQ R T)
          (COND
	    ((SETQ V (FASSOC TG L))
	      (COND
		((NUMBERP (CDR V))              (* Defined)
		  (RETURN (CDR V)))
		(T                              (* On list, not yet 
                                                defined)
		   (FRPLACD V (SETQ LNK (CONS 0 (CDR V))))
		   (RETURN 0))))
	    (T                                  (* Not on list)
	       (RETURN))))))

(SETU
  (NLAMBDA (L)

          (* PUT OUT BY PROG. UD IS LIST OF TAGS DEFINED 
          OUTSIDE OF PROG. ((TAG DLEV DSP) ...))


    (SETQ UD L)
    (SETQ ETAGS (MAPCAR UD (FUNCTION (LAMBDA (E)
			    (CONS (CAR E)
				  NIL)))))
    NIL))

(SETP
  (LAMBDA NIL
    (SETQ PREBFLGS REBFLGS)
    NIL))

(LAPDFT
  (LAMBDA (TG)
    (COND
      ((FIXP TG)
	(COND
	  ((LAPDFT1 TG GTAGS))
	  (T (SETQ GTAGS (CONS (CONS TG LOC)
			       GTAGS)))))
      ((LAPDFT1 TG UTAGS))
      (T (SETQ UTAGS (CONS (CONS TG LOC)
			   UTAGS))))))

(LAPDFT1
  (LAMBDA (X L LLOC)                            (* DEFINE TAG)
    (PROG (V)
          (COND
	    ((NULL LLOC)
	      (SETQ LLOC LOC)))
          (COND
	    ((NULL (SETQ V (FASSOC X L)))
	      (RETURN))
	    ((NUMBERP (CDR V))
	      (RETURN (COMPEM (CONS X
				    (QUOTE (- LAP MULTIPLY DEFINED TAG))
				    )))))
          (SETQ L (CDR V))
          (FRPLACD V LLOC)
      A   (OR L (RETURN))
          (COND
	    ((SMALLP (SETQ X (CAR L)))
	      (FRPLACA L (LOGAND (IPLUS X LLOC)
				 262143)))
	    (T (FRPLACA X (VAG (IPLUS X LLOC)))))
          (SETQ V (CDR L))
          (FRPLACD L NIL)
          (SETQ L V)
          (GO A))))

(LAPCKT
  (LAMBDA NIL
    (PROG ((L UTAGS))
          (SETQ UDFTGS (CONS ETAGS UDFTGS))
      A   (COND
	    ((OR (NULL L)
		 (EQ L IUTAGS))
	      (RETURN))
	    ((NUMBERP (CDAR L))
	      (PROG ((X UDFTGS)
		     V)                         (* LOOK FOR TAG IN ETAGS
                                                OF LOWER LEVELS)
		B   (COND
		      ((NULL (SETQ X (CDR X)))
			(RETURN)))
		    (COND
		      ((AND (SETQ V (FASSOC (CAAR L)
					    (CAR X)))
			    (NULL (NUMBERP (CDR V))))
			(LAPDFT1 (CAAR L)
				 (CAR X)
				 (CDAR L))))
		    (GO B)))
	    (T (COMPEM (CONS (CAAR L)
			     (QUOTE (LAP UNDEFINED TAG))))
	       (PROG (V W Q)                    (* MAKE BELIEVE COREVAL)
		     (SETQ W (CAAR L))
		     (SETQ Q (CDAR L))
		 B   (OR Q (RETURN))
		     (SETQ V (CDR Q))
		     (FRPLACD Q W)
		     (SETQ Q V)
		     (GO B))))
          (SETQ L (CDR L))
          (GO A))))

(LAPPW
  [LAMBDA (W)                                   (* PRINT ONE 
                                                INSTRUCTION)
    (SELECTQ LAPFLG
	     ((T 2)
	       (SPACES [COND
			 ((IGREATERP (POSITION)
				     5)
			   1)
			 (T (IDIFFERENCE 6 (POSITION]
		       LSTFIL)
	       (PRINT W LSTFIL FILERDTBL))
	     NIL])

(LAPPT
  [LAMBDA (A)                                   (* PRINT TAG)
    (SELECTQ LAPFLG
	     ((T 2)
	       (COND
		 ((NULL (EQ (POSITION)
			    0))
		   (TERPRI LSTFIL)))
	       (PRIN2 A LSTFIL FILERDTBL))
	     NIL])

(LAPP1
  [LAMBDA (C PD)                                (* PRINT PASS 1 OUTPUT)
    (PROG (OF Z)
          (OR PD (SETQ PD 0))
          (SETQ OF (OUTPUT LSTFIL))
      A   [COND
	    ((NULL C)
	      (TERPRI)
	      (OUTPUT OF)
	      (RETURN))
	    [(NULL (SETQ Z (CAR C]
	    ((ATOM Z)
	      [COND
		((IGREATERP (POSITION)
			    PD)
		  (TERPRI)
		  (OR (EQ PD 0)
		      (SPACES PD)))
		(T (SPACES (IDIFFERENCE PD (POSITION]
	      (PRIN2 Z NIL FILERDTBL)
	      (SPACES 1))
	    (T [SPACES (IPLUS 6 PD (IMINUS (POSITION]
	       (SELECTQ (CAR Z)
			((PROG SUBFN)
			  (PRIN1 (QUOTE %())
			  (PRINT (CAR Z)
				 NIL FILERDTBL)
			  (LAPP1 (CDR Z)
				 (IPLUS PD 3))
			  (PRIN1 (QUOTE %)))
			  (TERPRI))
			(PRINT Z NIL FILERDTBL]
          (SETQ C (CDR C))
          (GO A])

(VREF
  [NLAMBDA (V SP)                               (* VARIABLE REFERENCE -
                                                STACKPOS (PP))
    (PROG [(Q (CDR (FASSOC V AST]
          (RETURN (COND
		    (Q (LAPXR VPP)
		       (IDIFFERENCE Q SP))
		    (T (FREF1 V SP])

(FREF
  [NLAMBDA (V SP)
    (FREF1 V SP])

(FREF1
  [LAMBDA (V SP)                                (* Free variable 
                                                reference -
                                                @ stackpos (PP))
    (LAPXR (COND
	     (BLKFLG VFF)
	     (T VPP)))
    (SETN P (LOGOR P 4194304))
    (IDIFFERENCE (CDR (ASSOC V FST))
		 (COND
		   (BLKFLG 0)
		   (T SP])

(GREF
  (NLAMBDA (V)
    (SETN P (LOGOR P 4194304))
    (LAPLIT V LIT (QUOTE PLITORG))
    0))

(TREF
  (NLAMBDA (TG)
    (COND
      ((FIXP TG)
	(LAPUTGG TG))
      (T (LAPUTGU TG)))))

(FREBND
  (NLAMBDA (V)
    (COND
      ((NULL (SETQ V (FASSOC V FST)))
	(SETN P (LLSH (GETP (QUOTE JFCL)
			    (QUOTE OPD))
		      18))
	0)
      (T (LAPXR VFF)
	 (CDR V)))))

(BIND
  (LAMBDA (L N FLG)
    (SETQ AST (NCONC (BIND1 L N FLG)
		     AST))
    NIL))

(BINDNIL
  (LAMBDA (V P)
    (BIND V P T)))

(BIND1
  (LAMBDA (L N FLG)
    (COND
      ((NULL (CDR L))                           (* Only one, do open)
	(COND
	  (FLG (LAP1 (QUOTE (PUSH PP , KNIL)))))
	(LAP1 (LIST (QUOTE SVN)
		    (CAR L)
		    0))
	(COND
	  ((OR (GETP (CAR L)
		     (QUOTE GLOBALVAR))
	       (FMEMB (CAR L)
		      GLOBALVARS))
	    (COMPEM (CONS (CAR L)
			  (QUOTE (- IS GLOBAL))))))
	(LIST (CONS (CAR L)
		    (ADD1 N))))
      (T                                        (* Non BLOCK closed name
                                                binding.)
	 (LAP1 (LIST (COND
		       (FLG (QUOTE BNDN))
		       (T (QUOTE BND)))
		     (PROG ((LIT1 LIT)
			    (N 0)
			    LIT2 L1)            (* ALL THIS AVOIDS 
                                                MULTIPLE OCCURENCES OF 
                                                SAME SEQUENCE OF 
                                                VARIABLE NAMES)
		       A   (COND
			     ((NULL LIT1)
			       (SETQ LIT (NCONC LIT (COPY L)))
			       (RETURN N)))
		           (COND
			     ((EQ (CAR L)
				  (CAR LIT1))
			       (SETQ LIT2 (CDR LIT1))
			       (SETQ L1 L)
			       (GO B)))
		       C   (SETQ N (ADD1 N))
		           (SETQ LIT1 (CDR LIT1))
		           (GO A)
		       B   (COND
			     ((NULL (SETQ L1 (CDR L1)))
			       (RETURN N))
			     (T (COND
				  ((EQ (CAR L1)
				       (CAR LIT2))
				    (SETQ LIT2 (CDR LIT2))
				    (GO B))
				  (T (GO C))))))
		     (IMINUS (LENGTH L))))
	 (MAPCAR L (FUNCTION (LAMBDA (E)
		     (COND
		       ((OR (GETP E (QUOTE GLOBALVAR))
			    (FMEMB E GLOBALVARS))
			 (COMPEM (CONS E (QUOTE (- IS GLOBAL))))))
		     (CONS E (SETQ N (ADD1 N))))))))))

(BLKBIND
  (LAMBDA (V VNIL N)

          (* N IS SP OF FIRST ARG -1, AT ENTRY ARGS IN V ARE 
          STACKED, VNIL TO BE STACKED AS NIL)


    (PROG (L MV MVNIL X FLG)
          (SETQ MV (IMINUS (FLENGTH V)))
          (SETQ MVNIL (IMINUS (FLENGTH VNIL)))
      C   (COND
	    (V (SETQ X (CAR V))
	       (SETQ MV (ADD1 MV))
	       (GO A))
	    (VNIL (SETQ X (CAR VNIL))
		  (SETQ MVNIL (ADD1 MVNIL))
		  (GO A))
	    (T (GO B)))
      A   (SETQ N (ADD1 N))
          (COND
	    ((FMEMB X FREE)
	      (SETQ REBS (CONS (CONS (CDR (FASSOC X FST))
				     (IPLUS MV MVNIL))
			       REBS)))
	    ((OR (GETP X (QUOTE GLOBALVAR))
		 (FMEMB X GLOBALVARS))
	      (COMPEM (CONS X (QUOTE (- IS GLOBAL))))))
          (COND
	    ((TESTNM X SPECVARS)
	      (COND
		(V (LAP1 (LIST (QUOTE SVN)
			       X MV)))
		(T (COND
		     ((NULL FLG)
		       (SETQ FLG T)
		       (LAP1 (QUOTE (HRRZ 1 , KNIL)))))
		   (LAP1 (LIST (QUOTE SVB)
			       X)))))
	    (T (COND
		 ((NULL V)
		   (LAP1 (QUOTE (PUSH PP , KNIL)))))))
          (SETQ L (CONS (CONS X N)
			L))
          (COND
	    (V (SETQ V (CDR V)))
	    (T (SETQ VNIL (CDR VNIL))))
          (GO C)
      B   (SETQ AST (NCONC (DREVERSE L)
			   AST))
          (COND
	    (REBS (LAP1 (QUOTE (JSP 7 , REBIND)))
		  (MAPC REBS (FUNCTION (LAMBDA (E)
			    (LAP1 (LIST (QUOTE XWD)
					(IMINUS (CAR E))
					(CDR E))))))))
          (SETQ REBFLGS (CONS REBS REBFLGS))
          (RETURN))))

(UNBIND
  (LAMBDA NIL
    (SETQ REBFLGS (CDR REBFLGS))
    (COND
      (REBS (QUOTE ((JSP 7 , UNBIND))))
      (T NIL))))

(UNBINDN
  (LAMBDA (N)
    (PROG ((L REBFLGS))
      A   (COND
	    ((ZEROP N)
	      (RETURN)))
          (COND
	    ((CAR L)
	      (LAP1 (QUOTE (JSP 7 , UNBIND)))))
          (SETQ L (CDR L))
          (SETQ N (SUB1 N))
          (GO A))))

(MKLCL
  (NLAMBDA (NAM)
    (PROG ((A LIT)
	   (N 0)
	   B)
          (SETQ AF T)
      LP  (COND
	    ((NULL A)
	      (GO ON))
	    ((AND (LISTP (SETQ B (CAR A)))
		  (EQ (CAR B)
		      (QUOTE LINKED-FN-CALL))
		  (EQ (CDR B)
		      NAM)
		  (SETQ N (SUB1 N))
		  (GO OUT))))
          (SETQ A (CDR A))
          (SETQ N (ADD1 N))
          (GO LP)
      ON  (SETQ LIT (NCONC LIT (LIST (CONS)
				     (CONS (QUOTE LINKED-FN-CALL)
					   NAM))))
      OUT (LAPUTGU (QUOTE PLITORG))
          (RETURN N))))

(FASTCALL
  (LAMBDA (FN SP)
    (LAP1 (LIST (QUOTE FCLL)
		FN))
    (COND
      (BLKFLG (LAP1 (LIST (QUOTE MOVE)
			  (QUOTE FF)
			  (QUOTE ,)
			  (ADD1 (IMINUS SP))
			  (QUOTE (PP))))))
    NIL))

(MKENTRY
  (LAMBDA (ENTRIES LFR)
    (LAP1 (QUOTE (JSP 7 , BLKENT)))
    (LAP1 (LIST (LLSH (FLENGTH LFR)
		      18)
		(QUOTE PLITORG)
		(PROG1 (FLENGTH LIT)
		       (SETQ LIT (NCONC LIT (COPY LFR)))
		       (SETQ FREE (APPEND FREE LFR)))))
    (SETQ UTAGS (SETQ IUTAGS (CONS (CONS (QUOTE **BLKENT))
				   IUTAGS)))
    (LAP1 (QUOTE **BLKENT))
    (LAP1 (LIST (LLSH (IMINUS (FLENGTH ENTRIES))
		      18)
		(QUOTE PLITORG)
		(PROG1 (FLENGTH LIT)
		       (SETQ LIT (NCONC LIT (COPY ENTRIES))))))
    (MAPC ENTRIES (FUNCTION (LAMBDA (E)
	      (LAP1 (CONS 0 (CONS (LIST (QUOTE TREF)
					(CADR (FASSOC E CALLTAGS))))))))
	  )))

(LAPERROR
  (LAMBDA NIL
    (COMPEM (CONS CL (QUOTE (-LAPERROR))))))

(LAPST
  [LAMBDA (FN CODE PLITORG LEN)

          (* STORE IN CORE OR ON FILE OR BOTH IF BINCOMPFLG=T, 
          WRITES CODE IN 'BINARY FORMAT' USING PETER DEUTSCH'S 
          SCHEME.)


    (PROG ((BCFLG (AND (NEQ LCFIL T)
		       (NOT (STRPOS (QUOTE "NIL:")
				    LCFIL 1 NIL T))
		       BINCOMPFLG))
	   SLOC ELOC B BLST Z Z1 DF OLF LA JFN CLST RL D)
          (SETQ LA (IPLUS LEN (IQUOTIENT (IPLUS LEN 35)
					 36)))
          [SETQ SLOC (VAG (IPLUS 2 (LOC (SETQ DF (COND
					    (STRF (ARRAY LA PLITORG))
					    (T (VAG 0]
          [COND
	    (LCFIL [SETQ OLF (COND
		       ((OPENP LCFIL)
			 (OUTPUT LCFIL))
		       (T (OUTFILE LCFIL]
		   (TERPRI)
		   (COND
		     (BCFLG (PRIN2 FN NIL FILERDTBL)
			    (SPACES 1)
			    (PRINT (QUOTE BINARY)
				   NIL FILERDTBL)
			    [SETQ JFN (VAG (OPNJFN (OUTPUT]
			    (OSFBSZ JFN 36)
			    (OBOUT LA JFN)
			    (OBOUT PLITORG JFN)
			    (OBOUT LEN JFN))
		     (T (PRINT FN NIL FILERDTBL)
			(PRINT LA NIL FILERDTBL)
			(PRINT PLITORG NIL FILERDTBL)
			(PRINT LEN NIL FILERDTBL]
          (SETQ ELOC (VAG (IPLUS (LOC SLOC)
				 PLITORG)))
          (SETQ BLST (LIST NIL))
      A1  (LAPPUSH0)
          (SETQ B 35)
      A   [COND
	    [(LISTP (SETQ Z (CAR CODE)))
	      (COND
		((NULL (CDR Z))
		  (LAPRBIT B)))
	      [COND
		(LCFIL
		  (COND
		    [BCFLG (OBOUT (COND
				    ((FLOATP (SETQ Z1 (CAR Z)))
				      (OPENR (LOC Z1)))
				    (T Z1))
				  JFN)
			   (COND
			     ((CDR Z)
			       (SETQ RL (IDIFFERENCE (LOC SLOC)
						     (LOC DF)))
			       (COND
				 [(SETQ D (FASSOC (CDR Z)
						  CLST))
				   (FRPLACD D (CONS RL (CDR D]
				 (T (SETQ CLST
				      (CONS (LIST (CDR Z)
						  RL)
					    CLST]
		    (T (LAPFW (CAR Z))
		       (COND
			 ((CDR Z)
			   (PRIN1 (QUOTE % ))
			   (PRINT (CDR Z)
				  NIL FILERDTBL))
			 (T (TERPRI]
	      (COND
		(STRF
		  (CLOSER (LOC SLOC)
			  (CAR Z))
		  (COND
		    ((CDR Z)
		      (FRPLACA
			SLOC
			(VAG (IPLUS (CAR Z)
				    (OR (GETP (CDR Z)
					      (QUOTE COREVAL))
					(ERROR (QUOTE "NO COREVAL")
					       (CDR Z]
	    (T [COND
		 (LCFIL (COND
			  (BCFLG (OBOUT (COND
					  ((FLOATP Z)
					    (OPENR (LOC Z)))
					  (T Z))
					JFN))
			  (T (LAPFW Z)
			     (TERPRI]
	       (COND
		 (STRF (CLOSER (LOC SLOC)
			       Z]
          (SETQ CODE (CDR CODE))
          [SETQ SLOC (VAG (ADD1 (LOC SLOC]
          [COND
	    ((IGREATERP (LOC ELOC)
			(LOC SLOC))
	      (COND
		((ZEROP B)
		  (SETQ BLST (TCONC BLST (LAPPOP)))
		  (GO A1))
		(T (SUB1VAR B)
		   (GO A]
          (SETQ BLST (TCONC BLST (LAPPOP)))
          [SETQ B (IPLUS LA (IMINUS LEN)
			 (IMINUS (FLENGTH (CAR BLST]
                                                (* Make RELOC bits -- 
                                                all 0 -- for literals.)
      BLP (COND
	    ((IGREATERP (SETQ B (SUB1 B))
			-1)
	      (TCONC BLST 0)
	      (GO BLP)))
          (COND
	    ((AND LCFIL BCFLG)
	      [MAPC (CAR BLST)
		    (FUNCTION (LAMBDA (W)
			(OBOUT W JFN]
	      (OSFBSZ JFN 7)))
          [MAPC
	    CODE
	    (FUNCTION (LAMBDA (W)               (* Put out literals.
                                                Link if blockcompiled or
                                                LINKFNS set)
		[COND
		  (STRF [COND
			  [(LISTP W)
			    (COND
			      ((EQ (CAR W)
				   (QUOTE LINKED-FN-CALL))
				(DOLINK SLOC 0 (CDR W)
					FN T))
			      (T (FRPLACA SLOC (CAR W))
				 (FRPLACD SLOC (COND
					    ((EQ (CDR W)
						 0)
					      (VAG 0))
					    (T (CDR W]
			  (T (CLOSER (LOC SLOC)
				     (LOC W]
			(SETQ SLOC (VAG (ADD1 (LOC SLOC]
		(COND
		  (LCFIL (PRINT W NIL FILERDTBL]
          (COND
	    ((AND LCFIL BCFLG)                  (* Put out references to
                                                COREVALs.)
	      [COND
		(CLST (PRIN2 (MAPCAR CLST (FUNCTION CAR))
			     NIL FILERDTBL))
		(T (PRIN1 (QUOTE %(%)]
	      (OSFBSZ JFN 18)
	      [MAPC CLST (FUNCTION (LAMBDA (Z)
			[MAPC (CDR Z)
			      (FUNCTION (LAMBDA (R)
				  (OBOUT R JFN]
			(OBOUT 0 JFN]
	      (OSFBSZ JFN 7)
	      (TERPRI)))                        (* Put out relocation 
                                                words.)
          [MAPC (CAR BLST)
		(FUNCTION (LAMBDA (W)
		    [COND
		      (STRF (CLOSER (LOC SLOC)
				    W)
			    (SETQ SLOC (VAG (ADD1 (LOC SLOC]
		    (COND
		      ((AND LCFIL (NOT BCFLG))
			(LAPFW W)
			(TERPRI]
          [COND
	    (STRF (FRPLACD DF (VAG (IPLUS LEN 2)))
		  (RELOC DF (IPLUS 2 (LOC DF)))
		  (RESETVAR DFNFLG (NULL SVFLG)
		    (DEFC FN (VAG (IPLUS 2 (LOC DF]
          (COND
	    (LCFIL (OUTPUT OLF])

(LAPFW
  (LAMBDA (Z)
    (DECLARE (DEFLIST (QUOTE ((NOUT ((N)
				     (ASSEMBLE NIL
					       (CQ (VAG N))
					       (PUSH NP , 1)
					       (MOVE 2 , KNIL)
					       (PUSHJ CP , OFSET)
					       (HRRZ 1 , FILEN
						     (FX))
					       (POP NP , 2)
					       (MOVEI 3 , 12Q)
					       (JSYS 224Q)
					       (JFCL))))))
		      (QUOTE MACRO)))
    (COND
      ((FLOATP Z)
	(SETQ Z (OPENR (LOC Z)))))
    (NOUT Z)))

(LAPPUSH0
  (LAMBDA NIL
    (SETQ .QQ. 0)))

(LAPRBIT
  (LAMBDA NIL
    (SETQ .QQ. (LOGOR (LLSH 1 B)
		      .QQ.))))

(LAPPOP
  (LAMBDA NIL .QQ.))

(NSUBPR
  (LAMBDA (N V L)
    (PROG (A D)
          (COND
	    ((NLISTP L)
	      (COND
		((NUMBERP L)
		  (RETURN L))
		(T (GO A))))
	    ((SETQ D (CDR L))
	      (SETQ D (COND
		  (FLG (PROG (FLG)
			     (NSUBPR N V D)))
		  (T (NSUBPR N V D))))))
          (SETQ A (COND
	      (FLG (PROG (FLG)
		         (NSUBPR N V (CAR L))))
	      (T (NSUBPR N V (CAR L)))))
          (RETURN (COND
		    (FLG (CONS A D))
		    (T L)))
      A   (RETURN (ASSEMBLE NIL
			    (LDV2 (QUOTE L)
				  SP 2)
			    (MOVEI 4 , 0)
			    (LDV2 (QUOTE N)
				  SP 3)
			LP  (CAMN 3 , KNIL)
			    (JRST E)
			    (HRRZ 1 , 0 (3))
			    (CAIE 2 , 0 (1))
			    (JRST B)
			    (HRRZ 1 , KT)
			    (SETQ FLG)
			    (JRST C)
			B   (HLRZ 3 , 0 (3))
			    (AOJA 4 , LP)
			C   (LDV2 (QUOTE V)
				  SP 2)
			    (JUMPE 4 , D)
			    (HLRZ 2 , 0 (2))
			    (SOJG 4 , * -1)
			D   (HRRZ 1 , 0 (2))
			    (JRST END)
			E   (MOVEI 1 , 0 (2))
			END)))))

(NOUT
  (LAMBDA (N FILE MODE)
    (ASSEMBLE NIL
	      (CQ (VAG (OR MODE 120000000012Q)))
	      (PUSH NP , 1)
	      (CQ (VAG N))
	      (PUSH NP , 1)
	      (CQ (NOUTJFN FILE))
	      (POP NP , 2)
	      (POP NP , 3)
	      (JSYS 224Q)
	      (JFCL)
	      (CQ (NOUTEND N FILE)))))
)
(DEFLIST(QUOTE(
  (BND ((NAMA -N)
	(PBIND PLITORG NAMA)
	(XWD -N -N)))
  (BNDN ((NAMA -N)
	 (PBINDN PLITORG NAMA)
	 (XWD -N -N)))
  [SVN ((N P)
	(MOVE 1 , ' N)
	(HRLM 1 , P (PP]
  (SVB ((N)
	(HRL 1 , ' N)
	(PUSH PP , 1)))
  (ENTERF ((NA TY NF)
	   (JSP 7 , ENTERF)
	   (XWD NA TY)
	   (XWD NF PLITORG)))
  (LQ ((X)
       (HRRZ 1 , ' X)))
  (LQ2 ((X AC)
	(HRRZ AC , ' X)))
  (LQI ((X)
	(HRRZI 1 , ASZ X)))
  (LQ2I ((X AC)
	 (HRRZI AC , ASZ X)))
  (LDI ((N)
	(HRREI 1 , N)))
  (LDI2 ((N)
	 (HRREI 2 , N)))
  [LDV ((A SP)
	(HRRZ 1 , (VREF A SP]
  [STV ((A SP)
	(HRRM 1 , (VREF A SP]
  [LDV2 ((A SP AC)
	 (HRRZ AC , (VREF A SP]
  [LDF ((A SP)
	(HRRZ 1 , (FREF A SP]
  [STF ((A SP)
	(HRRM 1 , (FREF A SP]
  [LDF2 ((A SP)
	 (HRRZ 2 , (FREF A SP]
  [LDTN ((N)
	 (MOVE 1 , N (NP]
  (LDN ((N)
	(MOVE 1 , = N)))
  (LDN2 ((N)
	 (MOVE 2 , = N)))
  (MOV21 (NIL (MOVE 2 , 1)))
  (FCLL ((FN)
	 (PUSHJ CP , FN)))
  [CAR1 (NIL (HRRZ 1 , 0 (1]
  [CDR1 (NIL (HLRZ 1 , 0 (1]
  (CARQ ((V)
	 (HRRZ 1 , @ ' V)))
  (CARQ2 ((V AC)
	  (HRRZ AC , @ ' V)))
  [CAR2 ((AC)
	 (HRRZ AC , 0 (AC]
  [CDR2 ((AC)
	 (HLRZ AC , 0 (AC]
  [CARV ((V SP)
	 (HRRZ 1 , @ (VREF V SP]
  [CDRV ((V SP)
	 (HLRZ 1 , @ (VREF V SP]
  [CAR2V ((V SP AC)
	  (HRRZ AC , @ (VREF V SP]
  [CDR2V ((V SP AC)
	  (HLRZ AC , @ (VREF V SP]
  (RPQ ((V)
	(HRRM 1 , @ ' V)))
  (ACLL ((NAM N)
	 (ACCALL N , ' NAM)))
  (CLL ((NAM N)
	(CCALL N , ' NAM)))
  (CLL2 ((NAM N)
	 (MOVEI 1 , N)
	 (MOVE 2 , ' NAM)
	 (PUSHJ CP , EFNCAL)))
  (CLLA ((N)
	 (MOVEI 1 , N)
	 (PUSHJ CP , EVCC)))
  [LCLL ((NAM N)
	 (LNCALL N , (MKLCL NAM]
  [LCLL2 ((NAM N)
	  (MOVEI 1 , N)
	  (LNCAL2 (MKLCL NAM]
  (RCLL ((NAM NA F)
	 (MOVEI 1 , NA)
	 (HRRZ 2 , ' NAM)
	 (HRLI 2 , F)
	 (PUSHJ CP , RETCAL)))
  (BA* ((NA)
	(MOVEI 1 , NA)
	(MOVEI 2 , **BLKENT)
	(PUSHJ CP , BLKAP*)))
  (BN ((A)
       (CAMN 1 , KNIL)
       (J A)))
  (BNN ((A)
	(CAME 1 , KNIL)
	(J A)))
  (LQTS (NIL (SKIPA 1 , KT)))
  (LQNS (NIL (SKIPA 1 , KNIL)))
  (SKE ((A)
	(CAME 1 , A)))
  (SKNE ((A)
	 (CAMN 1 , A)))
  (SKEQ ((A)
	 (CAME 1 , ' A)))
  (SKNEQ ((A)
	  (CAMN 1 , ' A)))
  (SKEI ((A)
	 (CAIE 1 , A)))
  (SKNEI ((A)
	  (CAIN 1 , A)))
  (SKEN ((A)
	 (CAME 1 , = A)))
  (SKNEN ((A)
	  (CAMN 1 , = A)))
  (SKES ((A)
	 (CAIE 1 , ASZ A)))
  (SKNES ((A)
	  (CAIN 1 , ASZ A)))
  (SKA (NIL (PSTB ATOMT)))
  (SKNA (NIL (PSTNB ATOMT)))
  (SKNM (NIL (PSTB FLOATT)))
  (SKNNM (NIL (PSTNB FLOATT)))
  (SKI (NIL (PSTB FIXT)))
  (SKNI (NIL (PSTNB FIXT)))
  (STE ((TY)
	(PSTE1 TY)))
  (STN ((TY)
	(PSTN1 TY)))
  (LDTY ((A)
	 (HRRZ A , 1)
	 (LSH A , -9)
	 (HRRZ A , TYPTAB (A))
	 (ANDI A , 63)))
  [J ((A)
      (JRST (TREF A]
  [JR ((A)
       (JRST (TREF A]
  [JL ((A)
       (JUMPL 1 , (TREF A]
  [JGE ((A)
	(JUMPGE 1 , (TREF A]
  (RET (NIL (POPJ CP ,)))
  (LPOPN (NIL (POP NP , 1)))
  (LPUSHN (NIL (PUSH NP , 1)))
  (POPNN ((N)
	  (SUB NP , BHC N)))
  (PUSHP (NIL (PUSH PP , 1)))
  (PUSHQ ((X)
	  (PUSH PP , ' X)))
  [PUSHV ((X SP)
	  (PUSH PP , (VREF X SP]
  (POPP (NIL (POP PP , 1)))
  (POPP2 (NIL (POP PP , 2)))
  (UNCOV ((SP)
	  (SUB PP , BHC SP)))
  [XWD (LAMBDA (L R)
	       (CONS (LIST (LLSH L 18)
			   R]
))(QUOTE OPD))
  (RPAQQ OPCODES
	 (ADD ADDB ADDI ADDM AND ANDB ANDCA ANDCAB ANDCAI ANDCAM ANDCB 
	      ANDCBB ANDCBI ANDCBM ANDCM ANDCMB ANDCMI ANDCMM ANDI ANDM 
	      AOBJN AOBJP AOJ AOJA AOJE AOJG AOJGE AOJL AOJLE AOJN AOS 
	      AOSA AOSE AOSG AOSGE AOSL AOSLE AOSN ASH ASHC BLT CAI 
	      CAIA CAIE CAIG CAIGE CAIL CAILE CAIN CAM CAMA CAME CAMG 
	      CAMGE CAML CAMLE CAMN DFN DIV DIVB DIVI DIVM DPB EQV EQVB 
	      EQVI EQVM EXCH FAD FADB FADL FADM FADR FADRB FADRI FADRM 
	      FDV FDVB FDVL FDVM FDVR FDVRB FDVRI FDVRM FMP FMPB FMPL 
	      FMPM FMPR FMPRB FMPRI FMPRM FSB FSBB FSBL FSBM FSBR FSBRB 
	      FSBRI FSBRM FSC HLL HLLE HLLEI HLLEM HLLES HLLI HLLM HLLO 
	      HLLOI HLLOM HLLOS HLLS HLLZ HLLZI HLLZM HLLZS HLR HLRE 
	      HLREI HLREM HLRES HLRI HLRM HLRO HLROI HLROM HLROS HLRS 
	      HLRZ HLRZI HLRZM HLRZS HRL HRLE HRLEI HRLEM HRLES HRLI 
	      HRLM HRLO HRLOI HRLOM HRLOS HRLS HRLZ HRLZI HRLZM HRLZS 
	      HRR HRRE HRREI HRREM HRRES HRRI HRRM HRRO HRROI HRROM 
	      HRROS HRRS HRRZ HRRZI HRRZM HRRZS IBP IDIV IDIVB IDIVI 
	      IDIVM IDPB ILDB IMUL IMULB IMULI IMULM IOR IORB IORI IORM 
	      JFCL JFFO JRA JRST JSA JSP JSR JUMP JUMPA JUMPE JUMPG 
	      JUMPGE JUMPL JUMPLE JUMPN LDB LSH LSHC MOVE MOVEI MOVEM 
	      MOVES MOVM MOVMI MOVMM MOVMS MOVN MOVNI MOVNM MOVNS MOVS 
	      MOVSI MOVSM MOVSS MUL MULB MULI MULM ORCA ORCAB ORCAI 
	      ORCAM ORCB ORCBB ORCBI ORCBM ORCM ORCMB ORCMI ORCMM POP 
	      POPJ PUSH PUSHJ ROT ROTC SETA SETAB SETAI SETAM SETCA 
	      SETCAB SETCAI SETCAM SETCM SETCMB SETCMI SETCMM SETM 
	      SETMB SETMI SETMM SETO SETOB SETOI SETOM SETZ SETZB SETZI 
	      SETZM SKIP SKIPA SKIPE SKIPG SKIPGE SKIPL SKIPLE SKIPN 
	      SOJ SOJA SOJE SOJG SOJGE SOJL SOJLE SOJN SOS SOSA SOSE 
	      SOSG SOSGE SOSL SOSLE SOSN SUB SUBB SUBI SUBM TDC TDCA 
	      TDCE TDCN TDN TDNA TDNE TDNN TDO TDOA TDOE TDON TDZ TDZA 
	      TDZE TDZN TLC TLCA TLCE TLCN TLN TLNA TLNE TLNN TLO TLOA 
	      TLOE TLON TLZ TLZA TLZE TLZN TRC TRCA TRCE TRCN TRN TRNA 
	      TRNE TRNN TRO TROA TROE TRON TRZ TRZA TRZE TRZN TSC TSCA 
	      TSCE TSCN TSN TSNA TSNE TSNN TSO TSOA TSOE TSON TSZ TSZA 
	      TSZE TSZN UFA XCT XOR XORB XORI XORM PSETN PIUNBX PIBOX 
	      PSTNB PSTB PBINDN PBIND PSTN1 PSTE1 PSTN PSTE CKUDT PSTEI 
	      PSTNI JSYS ACCALL CCALL LNCALL LNCAL2 HCCAL EXCAL))
(DEFLIST(QUOTE(
  (ADD 94208)
  (ADDB 95744)
  (ADDI 94720)
  (ADDM 95232)
  (AND 133120)
  (ANDB 134656)
  (ANDCA 135168)
  (ANDCAB 136704)
  (ANDCAI 135680)
  (ANDCAM 136192)
  (ANDCB 147456)
  (ANDCBB 148992)
  (ANDCBI 147968)
  (ANDCBM 148480)
  (ANDCM 139264)
  (ANDCMB 140800)
  (ANDCMI 139776)
  (ANDCMM 140288)
  (ANDI 133632)
  (ANDM 134144)
  (AOBJN 87552)
  (AOBJP 87040)
  (AOJ 114688)
  (AOJA 116736)
  (AOJE 115712)
  (AOJG 118272)
  (AOJGE 117248)
  (AOJL 115200)
  (AOJLE 116224)
  (AOJN 117760)
  (AOS 118784)
  (AOSA 120832)
  (AOSE 119808)
  (AOSG 122368)
  (AOSGE 121344)
  (AOSL 119296)
  (AOSLE 120320)
  (AOSN 121856)
  (ASH 81920)
  (ASHC 83968)
  (BLT 86528)
  (CAI 98304)
  (CAIA 100352)
  (CAIE 99328)
  (CAIG 101888)
  (CAIGE 100864)
  (CAIL 98816)
  (CAILE 99840)
  (CAIN 101376)
  (CAM 102400)
  (CAMA 104448)
  (CAME 103424)
  (CAMG 105984)
  (CAMGE 104960)
  (CAML 102912)
  (CAMLE 103936)
  (CAMN 105472)
  (DFN 45568)
  (DIV 79872)
  (DIVB 81408)
  (DIVI 80384)
  (DIVM 80896)
  (DPB 48640)
  (EQV 149504)
  (EQVB 151040)
  (EQVI 150016)
  (EQVM 150528)
  (EXCH 86016)
  (FAD 49152)
  (FADB 50688)
  (FADL 49664)
  (FADM 50176)
  (FADR 51200)
  (FADRB 52736)
  (FADRI 51712)
  (FADRM 52224)
  (FDV 61440)
  (FDVB 62976)
  (FDVL 61952)
  (FDVM 62464)
  (FDVR 63488)
  (FDVRB 65024)
  (FDVRI 64000)
  (FDVRM 64512)
  (FMP 57344)
  (FMPB 58880)
  (FMPL 57856)
  (FMPM 58368)
  (FMPR 59392)
  (FMPRB 60928)
  (FMPRI 59904)
  (FMPRM 60416)
  (FSB 53248)
  (FSBB 54784)
  (FSBL 53760)
  (FSBM 54272)
  (FSBR 55296)
  (FSBRB 56832)
  (FSBRI 55808)
  (FSBRM 56320)
  (FSC 46080)
  (HLL 163840)
  (HLLE 176128)
  (HLLEI 176640)
  (HLLEM 177152)
  (HLLES 177664)
  (HLLI 164352)
  (HLLM 164864)
  (HLLO 172032)
  (HLLOI 172544)
  (HLLOM 173056)
  (HLLOS 173568)
  (HLLS 165376)
  (HLLZ 167936)
  (HLLZI 168448)
  (HLLZM 168960)
  (HLLZS 169472)
  (HLR 182272)
  (HLRE 194560)
  (HLREI 195072)
  (HLREM 195584)
  (HLRES 196096)
  (HLRI 182784)
  (HLRM 183296)
  (HLRO 190464)
  (HLROI 190976)
  (HLROM 191488)
  (HLROS 192000)
  (HLRS 183808)
  (HLRZ 186368)
  (HLRZI 186880)
  (HLRZM 187392)
  (HLRZS 187904)
  (HRL 165888)
  (HRLE 178176)
  (HRLEI 178688)
  (HRLEM 179200)
  (HRLES 179712)
  (HRLI 166400)
  (HRLM 166912)
  (HRLO 174080)
  (HRLOI 174592)
  (HRLOM 175104)
  (HRLOS 175616)
  (HRLS 167424)
  (HRLZ 169984)
  (HRLZI 170496)
  (HRLZM 171008)
  (HRLZS 171520)
  (HRR 180224)
  (HRRE 192512)
  (HRREI 193024)
  (HRREM 193536)
  (HRRES 194048)
  (HRRI 180736)
  (HRRM 181248)
  (HRRO 188416)
  (HRROI 188928)
  (HRROM 189440)
  (HRROS 189952)
  (HRRS 181760)
  (HRRZ 184320)
  (HRRZI 184832)
  (HRRZM 185344)
  (HRRZS 185856)
  (IBP 46592)
  (IDIV 77824)
  (IDIVB 79360)
  (IDIVI 78336)
  (IDIVM 78848)
  (IDPB 48128)
  (ILDB 47104)
  (IMUL 73728)
  (IMULB 75264)
  (IMULI 74240)
  (IMULM 74752)
  (IOR 145408)
  (IORB 146944)
  (IORI 145920)
  (IORM 146432)
  (JFCL 88576)
  (JFFO 83456)
  (JRA 93696)
  (JRST 88064)
  (JSA 93184)
  (JSP 92672)
  (JSR 92160)
  (JUMP 106496)
  (JUMPA 108544)
  (JUMPE 107520)
  (JUMPG 110080)
  (JUMPGE 109056)
  (JUMPL 107008)
  (JUMPLE 108032)
  (JUMPN 109568)
  (LDB 47616)
  (LSH 82944)
  (LSHC 84992)
  (MOVE 65536)
  (MOVEI 66048)
  (MOVEM 66560)
  (MOVES 67072)
  (MOVM 71680)
  (MOVMI 72192)
  (MOVMM 72704)
  (MOVMS 73216)
  (MOVN 69632)
  (MOVNI 70144)
  (MOVNM 70656)
  (MOVNS 71168)
  (MOVS 67584)
  (MOVSI 68096)
  (MOVSM 68608)
  (MOVSS 69120)
  (MUL 75776)
  (MULB 77312)
  (MULI 76288)
  (MULM 76800)
  (ORCA 153600)
  (ORCAB 155136)
  (ORCAI 154112)
  (ORCAM 154624)
  (ORCB 159744)
  (ORCBB 161280)
  (ORCBI 160256)
  (ORCBM 160768)
  (ORCM 157696)
  (ORCMB 159232)
  (ORCMI 158208)
  (ORCMM 158720)
  (POP 91136)
  (POPJ 91648)
  (PUSH 90624)
  (PUSHJ 90112)
  (ROT 82432)
  (ROTC 84480)
  (SETA 141312)
  (SETAB 142848)
  (SETAI 141824)
  (SETAM 142336)
  (SETCA 151552)
  (SETCAB 153088)
  (SETCAI 152064)
  (SETCAM 152576)
  (SETCM 155648)
  (SETCMB 157184)
  (SETCMI 156160)
  (SETCMM 156672)
  (SETM 137216)
  (SETMB 138752)
  (SETMI 137728)
  (SETMM 138240)
  (SETO 161792)
  (SETOB 163328)
  (SETOI 162304)
  (SETOM 162816)
  (SETZ 131072)
  (SETZB 132608)
  (SETZI 131584)
  (SETZM 132096)
  (SKIP 110592)
  (SKIPA 112640)
  (SKIPE 111616)
  (SKIPG 114176)
  (SKIPGE 113152)
  (SKIPL 111104)
  (SKIPLE 112128)
  (SKIPN 113664)
  (SOJ 122880)
  (SOJA 124928)
  (SOJE 123904)
  (SOJG 126464)
  (SOJGE 125440)
  (SOJL 123392)
  (SOJLE 124416)
  (SOJN 125952)
  (SOS 126976)
  (SOSA 129024)
  (SOSE 128000)
  (SOSG 130560)
  (SOSGE 129536)
  (SOSL 127488)
  (SOSLE 128512)
  (SOSN 130048)
  (SUB 96256)
  (SUBB 97792)
  (SUBI 96768)
  (SUBM 97280)
  (TDC 217088)
  (TDCA 219136)
  (TDCE 218112)
  (TDCN 220160)
  (TDN 200704)
  (TDNA 202752)
  (TDNE 201728)
  (TDNN 203776)
  (TDO 225280)
  (TDOA 227328)
  (TDOE 226304)
  (TDON 228352)
  (TDZ 208896)
  (TDZA 210944)
  (TDZE 209920)
  (TDZN 211968)
  (TLC 213504)
  (TLCA 215552)
  (TLCE 214528)
  (TLCN 216576)
  (TLN 197120)
  (TLNA 199168)
  (TLNE 198144)
  (TLNN 200192)
  (TLO 221696)
  (TLOA 223744)
  (TLOE 222720)
  (TLON 224768)
  (TLZ 205312)
  (TLZA 207360)
  (TLZE 206336)
  (TLZN 208384)
  (TRC 212992)
  (TRCA 215040)
  (TRCE 214016)
  (TRCN 216064)
  (TRN 196608)
  (TRNA 198656)
  (TRNE 197632)
  (TRNN 199680)
  (TRO 221184)
  (TROA 223232)
  (TROE 222208)
  (TRON 224256)
  (TRZ 204800)
  (TRZA 206848)
  (TRZE 205824)
  (TRZN 207872)
  (TSC 217600)
  (TSCA 219648)
  (TSCE 218624)
  (TSCN 220672)
  (TSN 201216)
  (TSNA 203264)
  (TSNE 202240)
  (TSNN 204288)
  (TSO 225792)
  (TSOA 227840)
  (TSOE 226816)
  (TSON 228864)
  (TSZ 209408)
  (TSZA 211456)
  (TSZE 210432)
  (TSZN 212480)
  (UFA 45056)
  (XCT 89088)
  (XOR 143360)
  (XORB 144896)
  (XORI 143872)
  (XORM 144384)
  (PSETN 8704)
  (PIUNBX 8192)
  (PIBOX 7680)
  (PSTNB 7168)
  (PSTB 6656)
  (PBINDN 6144)
  (PBIND 5632)
  (PSTN1 5120)
  (PSTE1 4608)
  (PSTN 2560)
  (PSTE 2048)
  (CKUDT 10752)
  (PSTEI 11264)
  (PSTNI 11776)
  (JSYS 34816)
  (ACCALL 12800)
  (CCALL 9216)
  (LNCALL 9728)
  (LNCAL2 10240)
  (HCCAL 3072)
  (EXCAL 3584)
))(QUOTE OPD))
(DEFLIST(QUOTE(
  [LAPPOP (NIL (LOC (ASSEMBLE NIL (POP NP , 1]
  [LAPRBIT ((B)
	    (ASSEMBLE NIL (LDV2 (QUOTE B)
				SP 2)
		      (SUBI 2 , ASZ)
		      (MOVEI 1 , 1)
		      (LSH 1 , 0 (2))
		      (IORM 1 , 0 (NP]
  [LAPPUSH0 (NIL (ASSEMBLE NIL (PUSH NP , = 0]
  [NSUBPAIR ((N V L)
	     (PROG (FLG)
		   (RETURN (NSUBPR N V L]
))(QUOTE MACRO))
  [RPAQQ LAPBLOCKS
	 ((LAPBLOCK LAP LAPMAP LAP1 LAPOUT LAPXR LAPAC LAPADR LAPNLIT 
		    LAPLIT NMEMB LAPUTGU LAPUTGG LAPUTG SETU SETP 
		    LAPDFT LAPDFT1 LAPCKT LAPPW LAPPT LAPP1 VREF GREF 
		    FREF FREF1 FREBND BIND BINDNIL BIND1 BLKBIND UNBIND 
		    UNBINDN MKLCL FASTCALL MKENTRY LAPERROR LAPST LAPFW 
		    NSUBPR (ENTRIES LAP VREF GREF FREF)
		    (BLKAPPLYFNS BIND BINDNIL BIND1 BLKBIND UNBIND 
				 UNBINDN MKLCL FASTCALL MKENTRY FREBND 
				 SETU SETP]
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
  (BLOCK: LAPBLOCK LAP LAPMAP LAP1 LAPOUT LAPXR LAPAC LAPADR LAPNLIT 
	  LAPLIT NMEMB LAPUTGU LAPUTGG LAPUTG SETU SETP LAPDFT LAPDFT1 
	  LAPCKT LAPPW LAPPT LAPP1 VREF GREF FREF FREF1 FREBND BIND 
	  BINDNIL BIND1 BLKBIND UNBIND UNBINDN MKLCL FASTCALL MKENTRY 
	  LAPERROR LAPST LAPFW NSUBPR (ENTRIES LAP VREF GREF FREF)
	  (BLKAPPLYFNS BIND BINDNIL BIND1 BLKBIND UNBIND UNBINDN MKLCL 
		       FASTCALL MKENTRY FREBND SETU SETP))
]
  (PUTD (QUOTE NSUBPAIR)
	(GETD (QUOTE SUBPAIR)))
[DECLARE: DOEVAL@COMPILE DONTCOPY 
(DEFLIST(QUOTE(
  [OBOUT ((BYTE JFN)
	  (ASSEMBLE NIL (CQ JFN)
		    [E (CEXP2 (QUOTE (VAG BYTE]
		    (JSYS 41]
  [OSFBSZ ((JFN N)
	   (ASSEMBLE NIL (CQ JFN)
		     [E (CEXP2 (QUOTE (VAG N]
		     (JSYS 38]
))(QUOTE MACRO))
]
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY 
  (ADDTOVAR NLAMA)
  (ADDTOVAR NLAML TREF GREF FREF VREF)
]
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 
  (ADDTOVAR NLAMA)
  (ADDTOVAR NLAML MKLCL FREBND TREF GREF FREF VREF SETU)
]
  (LISPXPRINT (QUOTE LAPCOMS)
	      T)
  [RPAQQ LAPCOMS
	 ((FNS * LAPFNS)
	  (PROP OPD BND BNDN SVN SVB ENTERF LQ LQ2 LQI LQ2I LDI LDI2 
		LDV STV LDV2 LDF STF LDF2 LDTN LDN LDN2 MOV21 FCLL CAR1 
		CDR1 CARQ CARQ2 CAR2 CDR2 CARV CDRV CAR2V CDR2V RPQ 
		ACLL CLL CLL2 CLLA LCLL LCLL2 RCLL BA* BN BNN LQTS LQNS 
		SKE SKNE SKEQ SKNEQ SKEI SKNEI SKEN SKNEN SKES SKNES 
		SKA SKNA SKNM SKNNM SKI SKNI STE STN LDTY J JR JL JGE 
		RET LPOPN LPUSHN POPNN PUSHP PUSHQ PUSHV POPP POPP2 
		UNCOV XWD)
	  (PROP OPD * OPCODES)
	  (PROP MACRO LAPPOP LAPRBIT LAPPUSH0 NSUBPAIR)
	  (BLOCKS * LAPBLOCKS)
	  [P (PUTD (QUOTE NSUBPAIR)
		   (GETD (QUOTE SUBPAIR]
	  (DECLARE: DOEVAL@COMPILE DONTCOPY (PROP MACRO OBOUT OSFBSZ))
	  (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
		    (ADDVARS (NLAMA)
			     (NLAML TREF GREF FREF VREF)))
	  (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS
		    (ADDVARS (NLAMA)
			     (NLAML TREF GREF FREF VREF MKLCL FREBND 
				    SETU]
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 
  (ADDTOVAR NLAMA)
  (ADDTOVAR NLAML TREF GREF FREF VREF MKLCL FREBND SETU)
]
(DECLARE: DONTCOPY
  (FILEMAP (NIL (1490 28383 (LAP 1502 . 4204) (LAPMAP 4208 . 4502) (LAP1
4506 . 5932) (LAPOUT 5936 . 7056) (LAPXR 7060 . 7322) (LAPAC 7326
. 7606) (LAPADR 7610 . 8649) (LAPNLIT 8653 . 9189) (LAPLIT 9193 .
10133) (NMEMB 10137 . 10488) (LAPUTGU 10492 . 11091) (LAPUTGG 11095
. 11243) (LAPUTG 11247 . 11820) (SETU 11824 . 12076) (SETP 12080 .
12140) (LAPDFT 12144 . 12379) (LAPDFT1 12383 . 13054) (LAPCKT 13058
. 13986) (LAPPW 13990 . 14332) (LAPPT 14336 . 14567) (LAPP1 14571
. 15386) (VREF 15390 . 15668) (FREF 15672 . 15715) (FREF1 15719 .
16085) (GREF 16089 . 16187) (TREF 16191 . 16285) (FREBND 16289 . 16474)
(BIND 16478 . 16567) (BINDNIL 16571 . 16616) (BIND1 16620 . 18330)
(BLKBIND 18334 . 19826) (UNBIND 19830 . 19956) (UNBINDN 19960 . 20213)
(MKLCL 20217 . 20750) (FASTCALL 20754 . 20963) (MKENTRY 20967 . 21616)
(LAPERROR 21620 . 21690) (LAPST 21694 . 26479) (LAPFW 26483 . 26936)
(LAPPUSH0 26940 . 26985) (LAPRBIT 26989 . 27064) (LAPPOP 27068 . 27097)
(NSUBPR 27101 . 28081) (NOUT 28085 . 28380)))))
STOP
