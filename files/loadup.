(FILECREATED "10-OCT-74 21:25:44" LOADUP.;11 13680  

     changes to:  LOADUPCOMS

     previous date: "28-SEP-74 15:08:56" LOADUP.;10)


  (LISPXPRINT (QUOTE LOADUPCOMS)
	      T T)
  [RPAQQ LOADUPCOMS
	 ((FNS * LOADUPFNS)
	  (VARS (BELLS (QUOTE ""))
		(COMPILE.EXT (QUOTE COM))
		(SYSFILES)
		(FNS/VARSFILE)
		(NOSWAPFLG))
	  [P (COND ((EQ (CAR (QUOTE LISPXHISTORY))
			(QUOTE NOBIND))
		    (AND (EQ (CAR (QUOTE SPAGHETTIFLG))
			     (QUOTE NOBIND))
			 (SETQ SPAGHETTIFLG (AND (GETD (QUOTE ENVEVAL))
						 T)))
		    [COND (SPAGHETTIFLG (REMPROP (QUOTE NEWFSTKARG)
						 (QUOTE MACRO))
					(REMPROP (QUOTE RELSTK)
						 (QUOTE MACRO))
					(REMPROP (QUOTE FSTKNAME)
						 (QUOTE MACRO]
		    [MAP2C (QUOTE (NEWSTKSCAN NEWSTKARG NEWFSTKARG NEWSTKARGNAME NEWSETSTKARG 
					      NEWCLEARSTK NEWRELSTK NEWSTACKP RETEVAL STKEVAL 
					      NEWEVALV NEWSETSTKARGNAME NEWBLIPEVAL STKPOS0 
					      NEWSTKPOS OLDSETN))
			   (QUOTE (STKSCAN STKARG STKARG STKARGNAME SETSTKARG CLEARSTK RELSTK 
					   STACKP NEWRETEVAL NEWSTKEVAL EVALV SETSTKARGNAME 
					   BLIPEVAL STKPOS STKPOS SETN))
			   (FUNCTION (LAMBDA (X Y)
					     (COND (SPAGHETTIFLG (MOVD Y X))
						   ((NOT (FNTYP Y))
						    (MOVD X Y]
		    (MOVD (QUOTE NEWSTKARG)
			  (QUOTE STKARGVAL))
		    (MOVD (QUOTE NEWSETSTKARG)
			  (QUOTE SETSTKARGVAL))
		    [MAPC GLOBALVARS (FUNCTION (LAMBDA (X)
						       (PUT X (QUOTE GLOBALVAR)
							    T]
		    (SETQ GLOBALVARS NIL)
		    (MINFS 10000 1)
		    (MINFS 4000 8)
		    (GCGAG T)
		    (PRINTLEVEL 1000)
		    (RADIX 10)
		    (NONAC T)
		    (SETQ CLEARSTKLST T]
	  (BLOCKS * LOADUPBLOCKS)
	  (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA DMPHASH 
										    LOADUP0)
										(NLAML]
  (RPAQQ LOADUPFNS
	 (LOADUP LOADUP0 LOADUP1 LOADUP2 ENDLOAD DMPHASH NEWSTKSCAN NEWSTKARG NEWSTKARGNAME 
		 NEWSETSTKARG NEWCLEARSTK NEWRELSTK NEWSTACKP NEWRETEVAL NEWSTKEVAL NEWEVALV 
		 NEWSETSTKARGNAME STKPOS0 NEWSTKPOS))
(DEFINEQ

(LOADUP
  [LAMBDA (X NOCOMPFLG CONTINUEFLG)
    (COND
      ((AND FNS/VARSFILE (NOT (OPENP FNS/VARSFILE)))

          (* FNS/VARSFILE should be set to FNS/VARS to enable WHOCALLS 
          and WHEREIS (contained in UTILITY) to work properly.
          This will cause FNS and VARS to be dumped before they are 
          reset.)


	(OUTPUT (OUTFILE FNS/VARSFILE))
	(PRIN1 (QUOTE "(SETQQ FNS/VARS (")
	       FNS/VARSFILE)))
    (SETQ DWIMFLG (SETQ BUILDMAPFLG (SETQ FILEPKGFLG NIL)))
    (AND (NULL NOSWAPFLG)
	 (EQ (SETSBSIZE)
	     0)
	 (SETSBSIZE 64))
    (LOADUP0 BOOTSTRAP BASIC MISC SWAP ASSEMBLE LOADUP
					    WTMISC)
    (SETQQ GLOBALVARSVARS NOBIND)
    [SELECTQ X
	     (COMP (LOADUP0 COMP LAP COMPILE))
	     [(SMALL TINY)
	       (LOADUP0 (EDIT WEDIT)
			HELPDL
			(PRETTY COMMENT)
			BREAK ADVISE MAC LOADFNS ARITH FILEPKG)
	       (AND (NULL CONTINUEFLG)
		    (SETQ BUILDMAPFLG (SETQ FILEPKGFLG T]
	     (WOODS (COND
		      ((NULL NOCOMPFLG)
			(MINFS 512 12)
			(MINFS 512 18)))
		    (LOADUP (QUOTE SMALL)
			    NOCOMPFLG T)
		    [COND
		      (SPAGHETTIFLG (LOADUP0 HIST UNDO DWIM WTFIX))
		      (T (LOADUP0 HIST UNDO (DWIMNOCLISP DWIM WTFIX]
		    (DWIM (QUOTE C))
		    (AND (NULL CONTINUEFLG)
			 (ENDLOAD T)))
	     ((NIL BIG)
	       (COND
		 ((NULL X)                      (* LOADUP NIL autoloads SMALL.
                                                and COMP)
		   (LOADUP (QUOTE COMP)
			   NOCOMPFLG T)
		   (LOADUP (QUOTE SMALL)
			   NOCOMPFLG T)))
	       (COND
		 ((NULL NOCOMPFLG)
		   (MINFS 512 12)
		   (MINFS 512 18)))
	       (LOADUP0 PRSTRUC HIST UNDO (DWIM WTFIX CLISP DWIMIFY)
			CLISPIFY)
	       (DWIM (QUOTE C))
	       (AND (NULL CONTINUEFLG)
		    (ENDLOAD T)))
	     (HUGE                              (* Also loads all its 
                                                prerequisites.)
		   [MAPC (QUOTE (COMP SMALL BIG
				      (BRKDWN CIRCL EDITA
					 MATCH RECORD HELPSYS DRIBBLE UTILITY 
					       INTERSCOPE)))
			 (FUNCTION (LAMBDA (X)
			     (LOADUP X NOCOMPFLG T]
		   (AND (NULL CONTINUEFLG)
			(ENDLOAD T)))
	     (COND
	       ((LISTP X)
		 (APPLY (QUOTE LOADUP0)
			X))
	       (T (PRINT (QUOTE ?)
			 T]
    X])

(LOADUP0
  [NLAMBDA X
    (MAPC X (FUNCTION (LAMBDA (X)
	      [COND
		((ATOM X)
		  (SETQ X (LIST X]
	      (COND
		[(OR NOCOMPFLG SPAGHETTIFLG)
		  (MAPC X (FUNCTION (LAMBDA (X)
			    (LOADUP1 (LIST X)
				     (NULL NOCOMPFLG]
		(T (LOADUP1 X T])

(LOADUP1
  [LAMBDA (FILES CFLG)
    (PROG (TEM CFILE CFL (FL (CAR FILES)))
          (COND
	    ((FMEMB FL SYSFILES)                (* Already processed.)
	      (RETURN))
	    ((NEQ [SETQ TEM (CAR (PACK (LIST FL (QUOTE FNS]
		  (QUOTE NOBIND))

          (* Already loaded, but may want to clobber its FNS, VARS, 
          and BLOCKS E.G. MISC, BASIC.)


	      [MAPC TEM (FUNCTION (LAMBDA (X)
			(AND (MKSWAPP X (GETD X))
			     (MKSWAP X]
	      (GO OUT)))
          (PRIN1 [SETQ CFL (SETQ CFILE (COND
		       (CFLG (PACK (LIST FL (QUOTE %.)
					 COMPILE.EXT)))
		       (T FL]
		 T)
          [SOME (QUOTE (NIL <NEWLISP> <LISP>))
		(FUNCTION (LAMBDA (DIR)
		    [AND DIR (SETQ CFL (PACK (LIST DIR CFILE]
		    (COND
		      ((SETQ TEM (INFILEP CFL))
			(COND
			  (DIR (PRIN1 (QUOTE "    (FROM ")
				      T)
			       (PRIN1 DIR T)
			       (PRIN1 (QUOTE ")
")
				      T))
			  (T (TERPRI T)))
			(SETQ CFL TEM]

          (* This allows you to LOAD with some files in your 
          directory, some in NEWLISP's, and the rest in LISP'S.)


          (LOAD CFL T)
          (TERPRI T)
          (INFILE CFL)
          (READ)                                (* SKIPS OVER FIRST DATE.)
      OUT (MAPC FILES (FUNCTION LOADUP2))
          (AND CFL (CLOSEF CFL])

(LOADUP2
  [LAMBDA (FILE)
    (PROG (TEM FNS VARS COMS)
          (COND
	    ([AND
		CFL
		(NULL
		  (SOME
		    (QUOTE (NIL <NEWLISP> <LISP>))
		    (FUNCTION (LAMBDA (DIR)
			(SETQ TEM (COND
			    (DIR (PACK (LIST DIR FILE)))
			    (T FILE)))
			(COND
			  ((SETQ TEM (INFILEP TEM))
			    (AND
			      (NOT (EQUAL (FILEDATE TEM)
					  (FILEDATE CFL)))
			      (PRIN1
				(QUOTE "*****date does not agree with that of ")
				T)
			      (PRINT TEM T)
			      (TERPRI T)
			      (TERPRI T))
			    T]
	      (PRIN1 (QUOTE *****)
		     T)
	      (PRIN1 FILE T)
	      (PRIN1 (QUOTE " not found.
")
		     T)))
          (SETQ SYSFILES (NCONC1 SYSFILES FILE))
          [SETQ FNS (PACK (LIST FILE (QUOTE FNS]
          [SETQ VARS (PACK (LIST FILE (QUOTE VARS]
          [SETQ COMS (PACK (LIST FILE (QUOTE COMS]
          [SETQ TEM (PACK (LIST FILE (QUOTE BLOCKS]
          (COND
	    ((EQ FNS/VARSFILE T)                (* Do not clobber them.)
	      (RETURN T))
	    ((NULL FNS/VARSFILE)                (* CLclobber but do not save.)
	      (GO OUT1)))
          (PRINT (CONS FNS (CAR FNS))
		 FNS/VARSFILE FILERDTBL)
          (PRINT (CONS VARS (CAR VARS))
		 FNS/VARSFILE FILERDTBL)
          (PRINT (CONS COMS (CAR COMS))
		 FNS/VARSFILE FILERDTBL)
          (PRINT (CONS TEM (CAR TEM))
		 FNS/VARSFILE FILERDTBL)
      OUT1(FRPLACA FNS (QUOTE NOBIND))
          (FRPLACA VARS (QUOTE NOBIND))
          (FRPLACA COMS (QUOTE NOBIND))
          (FRPLACA TEM (QUOTE NOBIND))
          (RETURN T])

(ENDLOAD
  [LAMBDA (FLG)
    (PUTD (QUOTE LOADUP))
    (PUTD (QUOTE LOADUP0))
    (PUTD (QUOTE LOADUP1))
    (PUTD (QUOTE LOADUP2))
    (PUTD (QUOTE ENDLOAD))
    (SETQ ADVISEDFNS NIL)
    (RELINK LINKEDFNS)
    (SETQ SYSLINKEDFNS LINKEDFNS)
    (SETQ LINKEDFNS NIL)
    (COND
      ((AND FNS/VARSFILE (NEQ FNS/VARSFILE T))
	(PRIN1 (QUOTE "))")
	       FNS/VARSFILE)
	(PRIN1 [QUOTE (MAPC FNS/VARS (FUNCTION (LAMBDA (X)
				(/RPLACA (CAR X)
					 (CDR X]
	       FNS/VARSFILE)
	(ENDFILE FNS/VARSFILE)))
    [AND FLG (SETQ BUILDMAPFLG (SETQ FILEPKGFLG (SETQ DWIMFLG T]
    (RECLAIM 1)
    (MINFS 10000 8)
    (MINFS 3000 18)
    (MINFS 1000 12])

(DMPHASH
  [NLAMBDA L
    (MAPC L (FUNCTION (LAMBDA (ARRAYNAME)
	      (ERSETQ (PROG ((A (EVALV ARRAYNAME (QUOTE DMPHASH)))
			     AP)
			    [PRINT (LIST (QUOTE RPAQ)
					 ARRAYNAME
					 (COND
					   ((LISTP A)
					     (SETQ AP (CAR A))
					     (LIST (QUOTE CONS)
						   (LIST (QUOTE HARRAY)
							 (ARRAYSIZE AP))
						   (CDR A)))
					   (T (LIST (QUOTE HARRAY)
						    (ARRAYSIZE A]
			    (MAPHASH (OR AP A)
				     (FUNCTION (LAMBDA (VAL ITEM)
					 (PRINT (LIST (QUOTE PUTHASH)
						      (KWOTE ITEM)
						      (KWOTE VAL)
						      ARRAYNAME])

(NEWSTKSCAN
  [LAMBDA (ATM POS)

          (* To load a non-spaghetti system, simply load this file 
          early in the loadup. To load a spaghetti system, first set 
          SPAGHETTIFLG to T and load this file.
          When SPAGHETTIFLG is NIL, this file will give appropriate 
          definitions to functions such as CLEARSTK, RELSTK, SETSTKARG 
          etc. which are not defined. Note that the system packages 
          call NEWSTKSCAN and NEWSTKARG since these are the only 
          functions which work DIFFERENTLY between teh systems.
          Functions such as STKARGNAME are called directly, since they 
          are not defined in non-spaghetti lisp and therefore there 
          can be noa mbiguity about how they are to work.
          They are however defined in this file as NEW functions so 
          that when the file is loaded into a spaghetti system, the 
          original definitions arent clobbered.)


    (PROG ((VAL (STKSCAN ATM POS)))
          (RETURN (AND (NEQ VAL ATM)
		       VAL])

(NEWSTKARG
  [LAMBDA (N POS)
    (CAR (STKARG N POS])

(NEWSTKARGNAME
  [LAMBDA (N POS)
    (CDR (STKARG N POS])

(NEWSETSTKARG
  [LAMBDA (NAME PTR VAL)

          (* In spaghetti system, PTR is the frame containing NAME's 
          binding. i.e. a value returned by STKSCAN.
          For regular lisp however, PTR is the slot on the stack -
          the value returned by regular STKSCAN.)


    (COND
      ((NEQ (CDR PTR)
	    NAME)
	(HELP))
      (T (FRPLACA PTR VAL])

(NEWCLEARSTK
  [LAMBDA NIL NIL])

(NEWRELSTK
  [LAMBDA (X)
    X])

(NEWSTACKP
  [LAMBDA (X)
    (TYPEP X 2])

(NEWRETEVAL
  [LAMBDA (POS FORM FLG)
    (ENVEVAL FORM POS (STKNTH -1 POS)
	     FLG T])

(NEWSTKEVAL
  [LAMBDA (POS FORM FLG)
    (ENVEVAL FORM POS 1 FLG])

(NEWEVALV
  [LAMBDA (VAR POS)
    (CAR (STKSCAN VAR POS])

(NEWSETSTKARGNAME
  [LAMBDA (N POS NAME)
    (RPLACD (STKARG N POS)
	    NAME])

(STKPOS0
  [LAMBDA (FN N POS)

          (* This function is the definition for STKPOS in rgular 
          lisp. NEWSTKPOS uses it. Note that STKPOS is a subr in 
          spaghetti lisp, and NEWSTKPOS is the same as STKPOS in 
          spaghetti lisp.)


    (PROG (P)
          (COND
	    ((AND POS (ATOM POS))
	      [COND
		((NULL (SETQ P (STKPOS1 POS 1)))
		  (ERRORX (LIST 19 POS]
	      (SETQ POS P)))
          (COND
	    ((OR (NULL N)
		 (NOT (ILESSP N 0)))
	      (RETURN (STKPOS1 FN N POS))       (* Machine language STKPOS)
	      )
	    (T (ERROR (QUOTE "forward search not implemented in spaghetti")
		      N])

(NEWSTKPOS
  [LAMBDA (FN N POS)

          (* In spaghetti, negatve numbers mea count backwards that 
          number of occurrences on control stack.
          this translates into a call to current STKPOS with positive 
          number.)


    (STKPOS FN (AND (NUMBERP N)
		    (IMINUS N))
	    POS])
)
  (RPAQQ BELLS "")
  (RPAQQ COMPILE.EXT COM)
  (RPAQ SYSFILES)
  (RPAQ FNS/VARSFILE)
  (RPAQ NOSWAPFLG)
  (COND ((EQ (CAR (QUOTE LISPXHISTORY))
	     (QUOTE NOBIND))
	 (AND (EQ (CAR (QUOTE SPAGHETTIFLG))
		  (QUOTE NOBIND))
	      (SETQ SPAGHETTIFLG (AND (GETD (QUOTE ENVEVAL))
				      T)))
	 [COND (SPAGHETTIFLG (REMPROP (QUOTE NEWFSTKARG)
				      (QUOTE MACRO))
			     (REMPROP (QUOTE RELSTK)
				      (QUOTE MACRO))
			     (REMPROP (QUOTE FSTKNAME)
				      (QUOTE MACRO]
	 [MAP2C (QUOTE (NEWSTKSCAN NEWSTKARG NEWFSTKARG NEWSTKARGNAME NEWSETSTKARG NEWCLEARSTK 
				   NEWRELSTK NEWSTACKP RETEVAL STKEVAL NEWEVALV 
				   NEWSETSTKARGNAME NEWBLIPEVAL STKPOS0 NEWSTKPOS OLDSETN))
		(QUOTE (STKSCAN STKARG STKARG STKARGNAME SETSTKARG CLEARSTK RELSTK STACKP 
				NEWRETEVAL NEWSTKEVAL EVALV SETSTKARGNAME BLIPEVAL STKPOS 
				STKPOS SETN))
		(FUNCTION (LAMBDA (X Y)
				  (COND (SPAGHETTIFLG (MOVD Y X))
					((NOT (FNTYP Y))
					 (MOVD X Y]
	 (MOVD (QUOTE NEWSTKARG)
	       (QUOTE STKARGVAL))
	 (MOVD (QUOTE NEWSETSTKARG)
	       (QUOTE SETSTKARGVAL))
	 [MAPC GLOBALVARS (FUNCTION (LAMBDA (X)
					    (PUT X (QUOTE GLOBALVAR)
						 T]
	 (SETQ GLOBALVARS NIL)
	 (MINFS 10000 1)
	 (MINFS 4000 8)
	 (GCGAG T)
	 (PRINTLEVEL 1000)
	 (RADIX 10)
	 (NONAC T)
	 (SETQ CLEARSTKLST T)))
  [RPAQQ LOADUPBLOCKS ((NIL NEWSTKSCAN NEWSTKARG NEWSTKARGNAME NEWSETSTKARG NEWCLEARSTK 
			    NEWRELSTK NEWSTACKP NEWRETEVAL NEWSTKEVAL NEWEVALV NEWSETSTKARGNAME 
			    STKPOS0 NEWSTKPOS (LINKFNS . T)
			    (NOLINKFNS ENVEVAL]
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
  (BLOCK: NIL NEWSTKSCAN NEWSTKARG NEWSTKARGNAME NEWSETSTKARG NEWCLEARSTK NEWRELSTK NEWSTACKP 
	  NEWRETEVAL NEWSTKEVAL NEWEVALV NEWSETSTKARGNAME STKPOS0 NEWSTKPOS (LINKFNS . T)
	  (NOLINKFNS ENVEVAL))
]
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 
  (ADDTOVAR NLAMA DMPHASH LOADUP0)
  (ADDTOVAR NLAML)
]
(DECLARE: DONTCOPY
  (FILEMAP (NIL (2045 11709 (LOADUP 2057 . 4319) (LOADUP0 4323 . 4584) (LOADUP1 4588 . 5905)
(LOADUP2 5909 . 7467) (ENDLOAD 7471 . 8138) (DMPHASH 8142 . 8736) (NEWSTKSCAN 8740 . 9795)
(NEWSTKARG 9799 . 9854) (NEWSTKARGNAME 9858 . 9917) (NEWSETSTKARG 9921 . 10295) (NEWCLEARSTK
10299 . 10332) (NEWRELSTK 10336 . 10370) (NEWSTACKP 10374 . 10417) (NEWRETEVAL 10421 . 10512)
(NEWSTKEVAL 10516 . 10584) (NEWEVALV 10588 . 10647) (NEWSETSTKARGNAME 10651 . 10733) (STKPOS0
10737 . 11387) (NEWSTKPOS 11391 . 11706)))))
STOP
