(FILECREATED "20-OCT-74 03:38:04" FILEPKG.;3 23027  

     changes to:  LISTFILES1

     previous date: " 1-OCT-74 17:02:28" <LISP>FILEPKG.;3)


  (LISPXPRINT (QUOTE FILEPKGCOMS)
	      T T)
  [RPAQQ FILEPKGCOMS ((FNS * FILEPKGFNS)
	  [VARS (FILELST)
		(LOADEDFILELST)
		(CFILELST)
		(NOTLISTEDFILES)
		(NOTCOMPILEDFILES)
		(EXECFORK)
		(FONTCHANGEFLG)
		(PARCFLG)
		(LISTFILESTR (QUOTE "
"))
		(FILELINELENGTH 72)
		(MAKEFILEREMAKEFLG T)
		(CLEANUPOPTIONS (QUOTE (LIST RC]
	  (BLOCKS * FILEPKGBLOCKS)
	  (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS
		    (ADDVARS (NLAMA CLEANUP COMPILEFILES LISTFILES)
			     (NLAML]
  (RPAQQ FILEPKGFNS (ADDFILE ADDFILE0 MAKEFILES MAKEFILE MAKEFILE1 LISTFILES LISTFILES1 TENEX 
			     COMPILEFILES COMPILEFILES0 FILES? FILES?1 CLEANUP CONTINUEDIT))
(DEFINEQ

(ADDFILE
  [LAMBDA (FL TYPE PRLST FCLST)

          (* ADDFILE is called from MAKEFILE, LOAD, and 
          LOADFNS. When called from MAKEFILE, TYPE=NIL, from 
          LOAD TYPE=T, and LOADFNS TYPE=LOADFNS.
          The form of the file property for LOADed files is 
          (COMS . T) unless the file is a compiled file, in 
          which case it is (COMS . file) where file is the 
          name ofthe symbolic. (Once the symbolic has been 
          loaded or loadfnsed, the compiled file's FILE 
          property is replaced by the atom COMPILED.) For 
          files loaded via LOADFNS, file property is 
          (COMS . loadfns) When user goes to 'dump' a compiled 
          file orLOADFNSed file, the operation goes through if 
          a 'remake' is taking place.
          Otherwise user gets a warning message.)



          (* filepackage currently tries to keep track of 
          (1) actual name of file as loaded 
          (on loadedfilelst) -
          (2) name of file as it was dumped, as obtained from 
          fillcreated expression, kept on FILEDATES property -
          (3) date file was made -
          (4) root name of file -
          (5) whether file was loaded fully or by loadfns -
          (6) in case of compiled file, 
          (2) thru (5) for each symbolic file that went to 
          make it upp.)


    (PROG (TEM FL1 FLST)
          [COND
	    (TYPE                               (* TYPE is NIL for calls
                                                from MAKEFILE.)
		  (AND (NOT (MEMB FL LOADEDFILELST))
		       (/RPLACA (QUOTE LOADEDFILELST)
				(CONS FL LOADEDFILELST]
          (SETQ FL1 (NAMEFIELD FL T))
          [SETQ TEM
	    (COND
	      ((NULL FCLST)

          (* FCLST is the list of all the FILECREATED 
          expressions found in the file, minus the atom 
          FILECREATED.)


		(ADDFILE0 FL1 TYPE FL))
	      ((NULL (CDR FCLST))
		(SETQ FCLST (CAR FCLST))
		(SETQ TEM (CADR FCLST))
		(ADDFILE0 (COND
			    ((AND (LITATOM TEM)
				  (NEQ (SETQ TEM (NAMEFIELD TEM T))
				       FL1))

          (* If CADDR of filecreated xpression specifies a 
          different root, use it instead since it indicates 
          the COMS the file was made under.
          However, use FL as the place where the functions are 
          to be obtained, since we KNOW thatthis FL is still 
          around. as it was just loaded or made.)


			      TEM)
			    (T FL1))
			  TYPE FL (CAR FCLST)))
	      (T                                (* compiled file.)
		 (MAPC (CDR FCLST)
		       (FUNCTION (LAMBDA (X)
			   [COND
			     ((LITATOM (CADR X))
			       (SETQ FLST (CONS (CADR X)
						FLST))
			       (ADDFILE0 (NAMEFIELD (CADR X)
						    T)
					 (SELECTQ TYPE
						  ((T LOADFNS)
                                                (* says everything 
                                                loaded but DECLARE:)
						    (QUOTE Compiled))
						  (loadfns
						    (QUOTE compiled))
						  (HELP))
					 (CADR X)
					 (CAR X]

          (* The reason for the AND is backward compatibility, 
          i.e. file that was made before FILECREATED 
          expression put out the file name)


			   ]
          (UPDATEFILES PRLST (OR FLST (LIST FL)))

          (* This updates files, treating those elements that 
          were changed as a result of this load or loafns 
          different than those on changedlst from before, i.e. 
          former are ignored with respect to this file.
          The UPdATEFILES is done after the file is loaded to 
          handle cases like, define FOO, then LOAD 
          (fl PROP) containing FOO. Want FOO to be marked as 
          changed.)


          [AND PRLST
	       (MAPC PRETTYTYPELST
		     (FUNCTION (LAMBDA (X Y)

          (* Used by LOAD and LOADFNS.
          The only things remaining on changedlst should be 
          those that were on before the LOAD or LOADFNS began, 
          and were also not taken care of by this file.
          Note that everything changed by this file and not 
          mentioned in another file would still be on 
          chagedlst, since the updatefiles operaton ignores 
          this file for things changed by this file.)


			 (/RPLACA (CAR X)
				  (INTERSECTION
				    (CDR (ASSOC (CAR X)
						PRLST))
				    (CAAR X]
          (RETURN TEM])

(ADDFILE0
  [LAMBDA (FL TYPE FULLNAME DAT)
    (PROG (COMS X Y FLG TEM)
      TOP (COND
	    ((SETQ X (GETP FL (QUOTE FILE)))
	      (AND [FMEMB TYPE
			  (CDR (FMEMB (CDAR X)
				      (QUOTE (NIL loadfns compiled Compiled 
						  LOADFNS COMPILED T]
		   (/RPLACD (CAR X)
			    TYPE))

          (* This call to aDDFILE reflects a 'higher' degree of 
          loading, so upgrade property. 'loadfns' means just some 
          information from file, if go to do makefile, must do 
          loadfrom, 'compiled' is like 'loadfns' but for compiled 
          files e.g. user does LOADFNS on compiled file.
          'Compiled' means all but DECLARE: expressions are in.
          e.g. user does LOAD of a compiled file.
          COMPILED means everything is in, e.g. user does LOADDFROM a 
          compiled file. LOADFNS means everything in, e.g. user des 
          LOADFROM symbolic file. COMPILED and LOADFNS are equivaeltn 
          in that means dont have to do any more loading when go to do 
          a makefile but makefile NEW isnt permitted.
          T is full load of symbolic file.)


	      (GO OUT)))
          [COND
	    ([NLISTP (CAR (SETQ COMS (FILECOMS FL (QUOTE COMS]
                                                (* File has not been converted 
                                                to COMS format yet.)
	      (SETQ X (FILECOMS FL (QUOTE FNS)))
	      (SETQ Y (FILECOMS FL (QUOTE VARS)))
	      (/RPLACA COMS (COND
			 [(LISTP (CAR X))
			   (SETQ Y (CONS (LIST (QUOTE FNS)
					       (QUOTE *)
					       X)
					 (LISTP (CAR Y]
			 (T (SETQ Y (CAR Y]
          (COND
	    [(LISTP (CAR COMS))
	      (/PUT FL (QUOTE FILE)
		    (SETQ X (LIST (CONS COMS TYPE]
	    (TYPE 

          (* Called from LOAD or LOADFNS since both fns and VARS are 
          nobind, don't give it a FILE property, because the FILE 
          can't be dumped by MAKEFILE.)


		  (RETURN NIL))
	    (FLG (GO ERROR))
	    ((SETQ X (INFILEP FULLNAME))        (* E.g. User types MAKEFILE 
                                                (FOO .TEM))
	      (SETQ FILE (SETQ FL (NAMEFIELD X T)))
                                                (* FILE is bound in MAKEFILE.)
	      (SETQ FLG T)
	      (GO TOP))
	    ((AND DWIMFLG (SETQ FL (MISSPELLED? FL 70 FILELST)))
	      (SETQ FILE (SETQ FULLNAME FL))
	      (SETQ FLG T)
	      (GO TOP))
	    (T (GO ERROR)))
      OUT [COND
	    ((NOT (FMEMB FL FILELST))
	      (/RPLACA (QUOTE FILELST)
		       (CONS FL FILELST]
          (COND
	    ((EQ TYPE T)
	      (/RPLACD X NIL)))
          [AND TYPE DAT (/PUT FL (QUOTE FILEDATES)
			      (LIST (CONS DAT FULLNAME]
          (RETURN X)
      ERROR
          (ERROR FULLNAME (QUOTE "not file name.")
		 T])

(MAKEFILES
  [LAMBDA (OPTIONS FILES)
    (RESETVAR #UNDOSAVES NIL
      (PROG (TEM)
	    (UPDATEFILES)
	    [COND
	      ((NULL FILES)
		(SETQQ
		  TEM 
	      "****NOTE: the following are not contained on any file:
    ")
		(MAPC PRETTYTYPELST (FUNCTION (LAMBDA (TYPE)
			  (AND (FILES?1 TYPE TEM)
			       (SETQQ TEM "    "]
	    (AND (ATOM OPTIONS)
		 OPTIONS
		 (SETQ OPTIONS (LIST OPTIONS)))
	    (MAPCONC (COND
		       ((NULL FILES)
			 FILELST)
		       ((ATOM FILES)
			 (LIST FILES))
		       (T FILES))
		     (FUNCTION (LAMBDA (FL)
			 (PROG (PROP)
			       (COND
				 ((OR [NLISTP (SETQ PROP (GETP FL (QUOTE FILE]
				      (NULL (CDR PROP)))
				   (RETURN NIL)))
			       (LISPXPRIN2 FL T T)
			       (LISPXPRIN1 (QUOTE ...)
					   T)
			       (SETQ Y (MAKEFILE FL OPTIONS))
			       (LISPXTERPRI T)
			       (RETURN (LIST Y])

(MAKEFILE
  [LAMBDA (FILE OPTIONS REPRINTFNS SOURCEFILE)

          (* OPTIONS: FAST means dump with PRETTYFLG set to NIL;
          LIST means list the FILE; RC means RECOMPILE, uses BRECOMPILE if 
          FILEblocks is NOBIND, OTHERWISE RECOMPILE;
          -
          C means COMPILE, uses BCOMPL if FILEblocks is NOBIND, otherwise 
          TCOMPL; -
          for C AND RC assume ST unless next option is F.)


    (PROG ((Z (ADDFILE FILE))
	   X FL CHANGES DATES TEM)
          (UPDATEFILES)

          (* Want updating done after file is added to filelst, so any functions 
          that are being dumped are marked as having been dumped.)


          [COND
	    ((AND (ATOM OPTIONS)
		  OPTIONS)
	      (SETQ OPTIONS (LIST OPTIONS]
          (SETQ CHANGES (CDR Z))
          [SETQ DATES (LISTP (GETP FILE (QUOTE FILEDATES]
      LP0 (COND
	    ((AND (NULL (CDAR Z))
		  (NULL DATES))

          (* File has never been loaded and never dumped i.e. user just set up 
          COMS in core)


	      )
	    ([OR (MEMB (QUOTE NEW)
		       OPTIONS)
		 (AND (NULL MAKEFILEREMAKEFLG)
		      (NOT (MEMB (QUOTE REMAKE)
				 OPTIONS]
	      [COND
		((AND (CDAR Z)
		      (NEQ (CDAR Z)
			   T))
		  (LISPXPRIN2 FILE T T)
		  (LISPXPRIN1
		    (SELECTQ
		      (CDAR Z)
		      ((compiled Compiled COMPILED)
			(QUOTE " -- can't dump:  only the compiled file has been loaded
"))
		      ((loadfns LOADFNS)
			(QUOTE
			  " -- can't dump:  only some of its symbolics have been loaded
"))
		      (HELP))
		    T)
		  (RETURN (CONS FILE (QUOTE (not dumped]
	      (SETQ SOURCEFILE NIL)
	      (SETQ REPRINTFNS NIL))
	    (SOURCEFILE)
	    ((NULL DATES)

          (* for some reason, no FILEDATES, but user wants a REMAKE, so pass the 
          bck to prettydef and let it INFILE for the file.)


	      (SETQ SOURCEFILE T)
	      (OR REPRINTFNS (SETQ REPRINTFNS CHANGES)))
	    ((STREQUAL (FILEDATE (CDAR DATES))
		       (CAAR DATES))

          (* Since this call to prettydef is goin to specify only rewriting the 
          changed functions, better check that the earlier file is still 
          around.)


	      (SETQ SOURCEFILE (CDAR DATES))
	      (OR REPRINTFNS (SETQ REPRINTFNS CHANGES)))
	    [(STREQUAL (FILEDATE (CDADR DATES))
		       (CAADR DATES))

          (* prevous version file is gone, drop back to original daddy file and 
          dump everything that has been changed.)


	      (SETQ SOURCEFILE (CDADR DATES))
	      (SETQ CHANGES (SETQ REPRINTFNS (UNION (CDR Z)
						    (GETP FILE (QUOTE FILECHANGES]
	    (T
	      (LISPXPRIN1
		(QUOTE
		  "can't find either the previous version or the original version of 
")
		T)
	      (LISPXPRIN2 FILE T T)
	      (LISPXPRIN1 (QUOTE ", so it will have to be written anew
")
			  T)
	      (SETQ SOURCEFILE NIL)
	      (SETQ REPRINTFNS NIL)
	      (SETQ OPTIONS (CONS (QUOTE NEW)
				  OPTIONS))
	      (SETQ CHANGES (GETP FILE (QUOTE FILECHANGES)))
	      (GO LP0)))
          (AND (OR SOURCEFILE REPRINTFNS)
	       (SELECTQ (CDAR Z)
			(Compiled 

          (* This is going to be a remake. If it was originally loaded as a 
          compiled file, must first do a LOADFROM in order to get the properties 
          set up by declare: etc.)


				  (LOADVARS (QUOTE ((DECLARE: -- DONTCOPY --)))
					    (OR (CDAR DATES)
						FILE))
				  (/RPLACD (CAR Z)
					   (QUOTE COMPILED))
                                                (* So wont have to be done again.)

          (* These are the only DECLARE:'s that are not also on the copiled 
          file. Note that a DECLARE: DONTEVAL@LOAD will be found and evaluated, 
          but the corresponding expressions wont be evaluated from within the 
          DECLARE: Not worthwhile to bother setting up a complicated edit 
          pattern to screen these out, especially if you consider expressions 
          like (DECLARE: -- DONTEVAL@LOAD -- DOEVAL@LOAD --))


				  )
			((loadfns compiled)

          (* This is going to be a remake, but the original call to LOADFNS 
          didnt specify all the VARS, so some expressions may not have been 
          loaded.)


			  (LOADVARS T (OR (CDAR DATES)
					  FILE)))
			NIL))
          (RESETLST (RESETSAVE PRETTYTRANFLG (COND
				 ((MEMB (QUOTE NOCLISP)
					OPTIONS)
				   T)
				 ((MEMB (QUOTE CLISP% )
					OPTIONS)
				   (QUOTE BOTH))
				 (T PRETTYTRANFLG)))
		    (AND (MEMB (QUOTE FAST)
			       OPTIONS)
			 (RESETSAVE PRETTYFLG NIL))
		    [COND
		      ((AND (MEMB (QUOTE CLISPIFY)
				  OPTIONS)
			    (MEMB (QUOTE CLISP)
				  OPTIONS))
			(RESETSAVE CLISPIFYPRETTYFLG T))
		      ((EQ (GETP FILE (QUOTE FILETYPE))
			   (QUOTE CLISP))
			(RESETSAVE CLISPIFYPRETTYFLG (QUOTE CHANGES]
		    (RESETSAVE #UNDOSAVES NIL)
		    (AND (NEQ (LINELENGTH)
			      FILELINELENGTH)
			 (RESETSAVE (LINELENGTH FILELINELENGTH)))
		    (SETQ FILE (PRETTYDEF NIL FILE (CAAR Z)
					  REPRINTFNS SOURCEFILE CHANGES)))
          (/RPLACD Z NIL)
          [COND
	    ((NOT (MEMB (SETQ FL (NAMEFIELD FILE T))
			NOTLISTEDFILES))
	      (SETQ NOTLISTEDFILES (CONS FL NOTLISTEDFILES]
          [COND
	    ([OR (EQ (GETP FL (QUOTE FILETYPE))
		     (QUOTE DON'TCOMPILE))
		 (NULL (NEWFILE2 T (CAAAR Z)
				 (QUOTE FNS]    (* No functions in the file.)
	      (SETQ FL NIL))
	    ((NOT (MEMB FL NOTCOMPILEDFILES))
	      (SETQ NOTCOMPILEDFILES (CONS FL NOTCOMPILEDFILES]
      LP1 (COND
	    ((NULL OPTIONS)
	      (RETURN FILE)))
          (SETQ X (CAR OPTIONS))
          (SETQ OPTIONS (CDR OPTIONS))
          [SELECTQ X
		   ((RC REC BREC)
		     (AND FL (MAKEFILE1 FILE T)))
		   ((C TC BC TCOMPL BCOMPL)
		     (AND FL (MAKEFILE1 FILE)))
		   (LIST (APPLY (QUOTE LISTFILES)
				(LIST FILE)))
		   ((FAST CLISP CL CLISPIFY NIL REMAKE NEW NOCLISP CLISP% )
                                                (* These options affect the prettydefing 
                                                and have alredy been carried out.)
		     NIL)
		   (RETURN (CONS X (QUOTE (- MAKEFILE CONFUSED]
          (GO LP1])

(MAKEFILE1
  [LAMBDA (FILE RECOMPFLG LST)
    (PROG (TEM (FL (NAMEFIELD FILE)))
          (COND
	    ([AND (NULL SPAGHETTIFLG)
		  (SETQ TEM (GETP FL (QUOTE FILEGROUP)))
		  (SOME TEM (FUNCTION (LAMBDA (X)
			    (AND (NEQ X FL)
				 (OR (CDR (GETP X (QUOTE FILE)))
				     (MEMB X LST]

          (* The file in question must be recompiled with other files, 
          and one of the remaining files still needs to be dumped, or 
          else one of the other file is further down the list of files 
          being compiled. Wait..)


	      (RETURN)))
          (LISPXPRIN1 (QUOTE "
compiling ")
		      T)
          (LISPXPRINT (OR TEM FILE)
		      T T)
          [COND
	    ([AND OPTIONS (MEMB (CAR OPTIONS)
				(QUOTE (ST F S STF]
	      (LISPXUNREAD (LIST (CAR OPTIONS)))
	      (SETQ OPTIONS (CDR OPTIONS]
          (LISPXPRINT (COND
			[TEM                    (* File contaied in FILEGROUP.
                                                Therefore must be 
                                                blockcompiled.)
			     (COND
			       ((NULL RECOMPFLG)
				 (BCOMPL TEM))
			       (T (BRECOMPILE TEM]
			[(AND (NULL SPAGHETTIFLG)
			      (NEWFILE2 T [CAR (PACK (LIST FL (QUOTE COMS]
					(QUOTE BLOCKS)))
			  (COND
			    ((NULL RECOMPFLG)
			      (BCOMPL (LIST FILE)))
			    (T (BRECOMPILE FILE]
			((NULL RECOMPFLG)
			  (TCOMPL (LIST FILE)))
			(T (RECOMPILE FILE)))
		      T T])

(LISTFILES
  [NLAMBDA FILES
    (COND
      ([SETQ FILES (MAPCONC (OR FILES (SETQ FILES NOTLISTEDFILES))
			    (FUNCTION (LAMBDA (FILE)
				(COND
				  ((XNLSETQ (CLOSEF (INPUT (INFILE FILE)))
					    NOBREAK))
				  (T (PRIN2 FILE T T)
				     (PRIN1 (QUOTE " not found.
")
					    T]
	(COND
	  ((TENEX (APPLY (QUOTE CONCAT)
			 (LISTFILES1 FILES)))

          (* If NIL, says control-ced and then reentered manually, 
          e.g. lpt busy or off line.)


	    (MAPCAR FILES (FUNCTION (LAMBDA (FL)
			(SETQ NOTLISTEDFILES (REMOVE (NAMEFIELD FL T)
						     NOTLISTEDFILES))
			FL])
(LISTFILES1
  [LAMBDA (FILES)

          (* computes string for listing files.
          separate functin to permit different sites to redefine or 
          advise it.)


    (MAPCONC FILES (FUNCTION (LAMBDA (X)

          (* Note thatnormally LISTFILESTR is a string, but it can be 
          a form. e.g. FONTCHANGE uses this feture.)


		 (LIST (QUOTE "LIST")
		       X
		       (EVAL LISTFILESTR])

(TENEX
  [LAMBDA (STR)
    [COND
      ((OR (NULL EXECFORK)
	   (NEQ (CAR (RFSTS EXECFORK))
		2))                             (* Initialize the EXECFORK.)
	(SETQ EXECFORK (SUBSYS (QUOTE EXEC)
			       (QUOTE "QUIT
")
			       (QUOTE NIL:]
    (PROG (BUFS BUFS1 VAL)
          (SETQ BUFS (CLBUFS NIL T READBUF))
          (BKSYSBUF (MKSTRING STR))

          (* By implementing TENEX with BKSYSBUF instead of giving the 
          inputs as the second rgument to SUBSYS<, we can tell if the 
          commands were actually executed, or the user control-C'ed 
          and thQUIT manually (by the appearance of the carriage 
          return in the buffer).)


          (BKSYSBUF (QUOTE "
QUIT

"))
          (TERPRI T)
          (SETQ EXECFORK (SUBSYS (AND EXECFORK (EQ (CAR (RFSTS EXECFORK))
						   2)
				      EXECFORK)
				 NIL NIL (QUOTE CONTINUE)))
          (COND
	    ((AND (READP T)
		  (EQ (PEEKC T)
		      (QUOTE %
)))
	      (SETQ VAL T)
	      (READC T)))
          (BKBUFS BUFS)
          (RETURN VAL])

(COMPILEFILES
  [NLAMBDA FILES
    (COND
      ((LISTP (CAR FILES))
	(COMPILEFILES0 (CDR FILES)
		       (CAR FILES)))
      (T (COMPILEFILES0 FILES])

(COMPILEFILES0
  [LAMBDA (FILES OPTIONS)
    (MAP (OR FILES NOTCOMPILEDFILES)
	 (FUNCTION (LAMBDA (X)
	     (PROG ((OPTIONS OPTIONS))
	           (MAKEFILE1 (CAR X)
			      T X])

(FILES?
  [LAMBDA NIL
    (UPDATEFILES)
    (PROG (X)
          (COND
	    ([SETQ X (MAPCONC FILELST (FUNCTION (LAMBDA (X)
				  (AND (CDR (GETP X (QUOTE FILE)))
				       (LIST X]
	      (MAPRINT X T NIL (QUOTE "...to be dumped.
")
		       (QUOTE ,)
		       NIL T)))
          [MAPC PRETTYTYPELST (FUNCTION (LAMBDA (TYPE)
		    (FILES?1 TYPE (AND X (QUOTE "    plus "))
			     (AND (NULL X)
				  (QUOTE "...to be dumped."]
          (AND (SETQ X NOTLISTEDFILES)
	       (MAPRINT X T NIL (QUOTE "...to be listed.
")
			(QUOTE ,)
			NIL T))
          (AND (SETQ X NOTCOMPILEDFILES)
	       (MAPRINT X T NIL (QUOTE "...to be compiled.
")
			(QUOTE ,)
			NIL T))
          (RETURN])

(FILES?1
  [LAMBDA (TYPE X Y)
    (PROG (STR LST)
          (COND
	    ((NOT (AND (SETQ STR (CADDR TYPE))
		       (SETQ LST (CAAR TYPE))
		       (LISTP LST)))
	      (RETURN NIL)))
          (AND X (LISPXPRIN1 X T))
          (LISPXPRIN1 (QUOTE "the ")
		      T)
          (LISPXPRIN1 STR T)
          (COND
	    ((IGREATERP (LENGTH LST)
			6)
	      (LISPXPRIN1 (QUOTE " on ")
			  T)
	      (LISPXPRIN2 (CAR TYPE)
			  T T))
	    (T (MAPRINT LST T (QUOTE ": ")
			NIL
			(QUOTE ,)
			NIL T)))
          (AND Y (LISPXPRIN1 Y T))
          (LISPXTERPRI T)
          (RETURN T])

(CLEANUP
  [NLAMBDA FILES
    (PROG (TEM1 TEM2 OPTIONS)
          (COND
	    ((LISTP (CAR FILES))
	      (SETQ OPTIONS (CAR FILES))
	      (SETQ FILES (CDR FILES)))
	    (T (SETQ OPTIONS CLEANUPOPTIONS)))
          (RETURN (APPEND (MAKEFILES OPTIONS FILES)
			  (COND
			    ((NOT (MEMB (QUOTE LIST)
					OPTIONS)))
			    ((NULL FILES)
			      (LISTFILES))
			    ((SETQ TEM1 (INTERSECTION FILES 
						     NOTLISTEDFILES))
                                                (* Intersection check 
                                                because LISTFILES 
                                                applied to NIL means 
                                                list all of 
                                                NOTLISTEDFILES.)
			      (APPLY (QUOTE LISTFILES)
				     TEM1)))
			  (COND
			    [(NULL (SETQ TEM1 (MEMB (QUOTE RC)
						    OPTIONS]
			    ((NULL FILES)
			      (COMPILEFILES0 NIL (CDR TEM1)))
			    ((SETQ TEM2 (INTERSECTION FILES 
						   NOTCOMPILEDFILES))
			      (COMPILEFILES0 TEM2 (CDR TEM1])

(CONTINUEDIT
  [LAMBDA (FILE)
    (PROG (FL TEM X)
          (SETQ FILE (INPUT (INFILE FILE)))
          (SFPTR FILE 0)
          (SETQ X (READ FILE FILERDTBL))
          (CLOSEF FILE)
          (COND
	    ((NOT (GETP (SETQ FL (NAMEFIELD FILE T))
			(QUOTE FILE)))
	      (LOADFROM FILE)                   (* also calls addfile to notice 
                                                the file.)
	      ))
          [/PUT FL (QUOTE FILECHANGES)
		(LDIFF (SETQ TEM (CDR (MEMB (QUOTE to:)
					    X)))
		       (SETQ TEM (MEMB (QUOTE previous)
				       TEM]
          [/PUT FL (QUOTE FILEDATES)
		(LIST (CONS (CADR X)
			    FILE)
		      (CONS [CAR (SETQ TEM (CDR (MEMB (QUOTE date:)
						      X]
			    (CADR TEM]
          (RETURN FILE])
)
  (RPAQ FILELST)
  (RPAQ LOADEDFILELST)
  (RPAQ CFILELST)
  (RPAQ NOTLISTEDFILES)
  (RPAQ NOTCOMPILEDFILES)
  (RPAQ EXECFORK)
  (RPAQ FONTCHANGEFLG)
  (RPAQ PARCFLG)
  (RPAQQ LISTFILESTR "
")
  (RPAQ FILELINELENGTH 72)
  (RPAQ MAKEFILEREMAKEFLG T)
  (RPAQQ CLEANUPOPTIONS (LIST RC))
  [RPAQQ FILEPKGBLOCKS ((NIL LISTFILES TENEX (GLOBALVARS EXECFORK PARCFLG FONTCHANGEFLG 
							 PRINTERSTRING]
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
  (BLOCK: NIL LISTFILES TENEX (GLOBALVARS EXECFORK PARCFLG FONTCHANGEFLG PRINTERSTRING))
]
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 
  (ADDTOVAR NLAMA CLEANUP COMPILEFILES LISTFILES)
  (ADDTOVAR NLAML)
]
(DECLARE: DONTCOPY
  (FILEMAP (NIL (832 22314 (ADDFILE 844 . 5317) (ADDFILE0 5321 . 8121) (MAKEFILES 8125 . 9008)
(MAKEFILE 9012 . 15207) (MAKEFILE1 15211 . 16669) (LISTFILES 16673 . 17286) (LISTFILES1 17290
. 17712) (TENEX 17716 . 18778) (COMPILEFILES 18782 . 18938) (COMPILEFILES0 18942 . 19127)
(FILES? 19131 . 19841) (FILES?1 19845 . 20450) (CLEANUP 20454 . 21538) (CONTINUEDIT 21542
. 22311)))))
STOP
