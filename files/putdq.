(PROGN
  (PRIN1 (QUOTE " 7-OCT-74 18:14:07"))(TERPRI)
  (PUTD (QUOTE PUTDQ)
	(QUOTE [NLAMBDA (X Y)
			(PUTD X Y)
			X]))
  (PRINT (QUOTE (Functions: LOAD MAKEPDQ GETP MAPC PUT DEFINEQ DEFINE 
			    NEQ SELECTQ SELECTQ1 CAAR CADR CDDR CAADR 
			    LAPRD NIN BINRD FIXP RPAQQ ADD1 IDIFFERENCE 
			    FILECREATED SETCV HELP VIRGINFN DEFC 
			    MKSWAPP FILEMAP DEFLIST OSFBSZ OBIN OSIN 
			    LOADUP)))
(PUTDQ LOAD
  [LAMBDA (LOADF SVFLG LOADFLG)
    (PROG (OLDI LOADA)
          (COND
	    ((OPENP LOADF)
	      (CLOSEF LOADF)))
          [SETQ OLDI (COND
	      ((INFILE LOADF))
	      (T (RETURN (PRINT (CONS LOADF (QUOTE (NOT FOUND)))
				T]
      LC  (COND
	    ((OR (NULL (SETQ LOADA (READ)))
		 (EQ LOADA (QUOTE STOP)))
	      (CLOSEF LOADF)
	      (INPUT OLDI)
	      (RETURN)))
          (COND
	    ((NOT (ATOM LOADA))
	      [SETQ LOADA (COND
		  ((AND (EQ SVFLG (QUOTE PROP))
			(EQ (CAR LOADA)
			    (QUOTE DEFINEQ)))
		    [MAPC (CDR LOADA)
			  (FUNCTION (LAMBDA (XD)
			      (PUT (CAR XD)
				   (QUOTE EXPR)
				   (CADR XD]
		    (QUOTE (DEFS SAVED)))
		  (T (EVAL LOADA]
	      (COND
		(LOADFLG (PRINT LOADA)))
	      (GO LC)))
          (LAPRD (COND
		   (LOADFLG (PRINT LOADA))
		   (T LOADA)))
          (COND
	    ((EQ SVFLG (QUOTE PROP))
	      (UNSAVEDEF LOADA)))
          (GO LC])

(PUTDQ MAKEPDQ
  [LAMBDA (F)
    (PROG (V)
          (OUTFILE F)
          (PRIN1 (QUOTE "(PROGN"))
          (TERPRI)
          [PRINTDEF (LIST (QUOTE PRIN1)
			  (LIST (QUOTE QUOTE)
				(DATE]
          (PRINT (QUOTE (TERPRI)))
          [PRINTDEF (QUOTE (PUTD (QUOTE PUTDQ)
				 (QUOTE (NLAMBDA (X Y)
					  (PUTD X Y)
					  X]
          [PRINTDEF (LIST (QUOTE PRINT)
			  (LIST (QUOTE QUOTE)
				(CONS (QUOTE Functions:)
				      (SETQ V
					(QUOTE (LOAD MAKEPDQ GETP MAPC 
						     PUT DEFINEQ DEFINE 
						     NEQ SELECTQ 
						     SELECTQ1 CAAR CADR 
						     CDDR CAADR LAPRD 
						     NIN BINRD FIXP 
						     RPAQQ ADD1 
						     IDIFFERENCE 
						     FILECREATED SETCV 
						     HELP VIRGINFN DEFC 
						     MKSWAPP FILEMAP 
						     DEFLIST OSFBSZ 
						     OBIN OSIN LOADUP]

          (* To add a new function to PUTDQ, add its name to 
          this list.)


          (TERPRI)
          [MAPC V (FUNCTION (LAMBDA (V1)
		    (PRIN1 (QUOTE "(PUTDQ "))
		    (PRINT V1)
		    (PRINTDEF [OR (LISTP (GETP V1 (QUOTE EXPR)))
				  (LISTP (GETD V1))
				  (ERROR (CONS V1 (QUOTE (- UNDEFINED]
			      NIL T)
		    (PRIN1 (QUOTE %)))
		    (TERPRI)
		    (TERPRI]
          [SETQ V
	    (QUOTE ((OCOREVALS OCOREVALS)
		    (SCOREVALS SCOREVALS)
		    (COREVALA COREVALA)
		    (PRETTYHEADER "FILE CREATED ")
		    (LINKEDFNS)
		    (NOSWAPFNS (QUOTE (LAPRD BINRD FNTYP NOLINKDEF 
					     LISPXPRINT LISPXPRIN1 
					     LISPXPRIN2 LISPXSPACES 
					     LISPXTERPRI ADDSPELLBLOCK 
					     SAVESET /PUT DCHCONBLOCK 
					     MKSWAP2BLOCK)))
		    (MKSWAPSIZE 128]

          (* To add a new global variable to PUTDQ, add it to 
          the list here. Each item is 
          (Varname Form) where Form evaluates, AT MAKEPDQ 
          TIME, to the desired value for initializing the 
          variable.)


          [MAPC V (FUNCTION (LAMBDA (V1)
		    (PRINTDEF (LIST (QUOTE SETQ)
				    (CAR V1)
				    (LIST (QUOTE QUOTE)
					  (EVAL (CADR V1]
          [SETQ V (QUOTE ((GETP FGETP)
			  (QUOTE *)
			  (QUOTE DECLARE)
			  (RPLACA FRPLACA)
			  (RPLACD FRPLACD)
			  (PUTD /PUTD)
			  (PRINT LISPXPRINT]    (* Here is where all the
                                                MOVD equivalents go.)
          [MAPC V (FUNCTION (LAMBDA (V1)
		    (PRINTDEF (LIST (QUOTE PUTD)
				    (LIST (QUOTE QUOTE)
					  (CADR V1))
				    (LIST (QUOTE GETD)
					  (LIST (QUOTE QUOTE)
						(CAR V1]

          (* Finally, here IS the place for miscellaneous 
          quoted expressions (other than PUTDQ, MOVD, or SETQ 
          type things handled above))


          [PRINTDEF
	    (QUOTE
	      (PROGN                            (* TEMPORARY WHILE 
                                                PHASING OUT HANDLEP AND 
                                                PHASING SWPARRAYP IN.)
		(COND
		  [[AND (SUBRP (QUOTE HANDLEP))
			(NULL (GETD (QUOTE SWPARRAYP]
                                                (* Old way.)
		    (PUTD (QUOTE SWPARRAYP)
			  (GETD (QUOTE HANDLEP]
		  [[AND (SUBRP (QUOTE SWPARRAYP))
			(NULL (GETD (QUOTE HANDLEP]
                                                (* New assembly.
                                                Keep HANDLEP though for 
                                                late changers.)
		    (PUTD (QUOTE HANDLEP)
			  (GETD (QUOTE SWPARRAYP]
		  (T
		    (PRIN1
		      (QUOTE
			

"
I CAN'T FIGURE OUT WHAT'S GOING ON WITH SWPARRAY/HANDLEP, SO I
AM DOING NOTHING.
	TAKE THAT!
")
		      T)))                      (* First reference to 
                                                spaghettiflg! used in 
                                                SETCV and below in the 
                                                put's.)
		(SETQ SPAGHETTIFLG (COND
		    ((GETD (QUOTE ENVEVAL))
		      T)))
		(SETCV)
		(NONAC T)
		(CLOSEF)
		(PUT (QUOTE PUSHJ)
		     (QUOTE OPD)
		     90112)
		(PUT (QUOTE EXCAL)
		     (QUOTE OPD)
		     (COND
		       (SPAGHETTIFLG 6144)
		       (T 3584)))
		(PUT (QUOTE SBCAL)
		     (QUOTE OPD)
		     (COND
		       (SPAGHETTIFLG 12800)
		       (T 12288)))

          (* When i started putting comments in PUTDQ it 
          brought to light a problem we'd had all along: the 
          MOVD's which define star and DECLARE from QUOTE, 
          although fine in the actual bootstrapping, were 
          moving warrens cexpr when we were loading PUTDQ for 
          editing. When i ran MAKEPDQ i then got a parenthesis 
          error message. Ever helpful, sydney.
          Herewith a special un-messer-upper for QUOTE, which 
          IS A SUBR, vive la france. If warren should decide 
          to put back in that STKPOS check in his QUOTE, which 
          avoids the error if the definition isn't on QUOTE 
          any more, then this COND may be flushed:)


		(COND
		  ((CCODEP (QUOTE QUOTE))
		    (PRIN1 (QUOTE "
FIXING QUOTE.
")
			   T)
		    (PUTD (QUOTE QUOTE)
			  [OR (GETP (QUOTE QUOTE)
				    (QUOTE SUBR))
			      (QUOTE (NLAMBDA X
				       (CAR X]
			  (PUTD (QUOTE *)
				(GETD (QUOTE QUOTE)))
			  (PUTD (QUOTE DECLARE)
				(GETD (QUOTE QUOTE]
                                                (* Close the big progn 
                                                on output file.)
          (PRIN1 (QUOTE %)))
          (TERPRI)
          (PRINT (QUOTE STOP))

          (* Supposed to make the thing LOAD right but doesn't 
          so must still use "_EVAL((EVAL(READ]")


          (TERPRI)
          (RETURN (CLOSEF F])

(PUTDQ GETP
  [LAMBDA (X Y)
    (PROG (Z)
          (SETQ Z (CDR X))
      LOOP[COND
	    ((NULL Z)
	      (RETURN NIL))
	    ((EQ (CAR Z)
		 Y)
	      (RETURN (CADR Z]
          (SETQ Z (CDDR Z))
          (GO LOOP])

(PUTDQ MAPC
  [LAMBDA (MAPX MAPFN1 MAPFN2)
    (PROG NIL
      LP  (COND
	    ((NULL MAPX)
	      (RETURN)))
          (APPLY* MAPFN1 (CAR MAPX))
          [SETQ MAPX (COND
	      (MAPFN2 (APPLY* MAPFN2 MAPX))
	      (T (CDR MAPX]
          (GO LP])

(PUTDQ PUT
  [LAMBDA (X Y Z)
    (PROG (XX)
          (SETQ XX X)
      LOOP[COND
	    ((NULL (CDR X))
	      (RPLACD X (LIST Y Z)))
	    ((EQ (CADR X)
		 Y)
	      (RPLACA (CDDR X)
		      Z))
	    ((SETQ X (CDDR X))
	      (GO LOOP))
	    (T (RPLACD XX (CONS Y (CONS Z (CDR XX]
          (RETURN Z])

(PUTDQ DEFINEQ
  [NLAMBDA X
    (DEFINE X])

(PUTDQ DEFINE
  [LAMBDA (X)
    (COND
      ((NULL X)
	NIL)
      (T
	(CONS
	  ([LAMBDA (Y CY)
	      [COND
		[(ATOM Y)
		  (HELP (CONS Y (QUOTE (- INCORRECT DEFINING FORM]
		(T (COND
		     ((GETD CY)
		       (VIRGINFN CY T)))
		   (PUTD CY (COND
			   [(NULL (CDDR Y))
			     (COND
			       [(EQ (CAADR Y)
				    (QUOTE NLAMDA))
				 (CONS (QUOTE NLAMBDA)
				       (CONS (CAADR (CADR Y))
					     (CDDADR Y]
			       (T (CADR Y]
			   (T (CONS (QUOTE LAMBDA)
				    (CDR Y]
	      (CAR Y]
	    (CAR X)
	    (CAAR X))
	  (DEFINE (CDR X])

(PUTDQ NEQ
  [LAMBDA (X Y)
    (NOT (EQ X Y])

(PUTDQ SELECTQ
  [NLAMBDA SELCQ
    (APPLY (QUOTE PROGN)
	   (SELECTQ1 (EVAL (CAR SELCQ)
			   (QUOTE SELECTQ))
		     (CDR SELCQ))
	   (QUOTE SELECTQ])

(PUTDQ SELECTQ1
  [LAMBDA (M L)
    (PROG (C)
      LP  (SETQ C L)
          [COND
	    ((NULL (SETQ L (CDR L)))
	      (RETURN C))
	    ([OR (EQ (CAR (SETQ C (CAR C)))
		     M)
		 (AND (LISTP (CAR C))
		      (FMEMB M (CAR C]
	      (RETURN (CDR C]
          (GO LP])

(PUTDQ CAAR
  [LAMBDA (X)
    (CAR (CAR X])

(PUTDQ CADR
  [LAMBDA (X)
    (CAR (CDR X])

(PUTDQ CDDR
  [LAMBDA (X)
    (CDR (CDR X])

(PUTDQ CAADR
  [LAMBDA (X)
    (CAR (CADR X])

(PUTDQ LAPRD
  [LAMBDA (FN)

          (* A note on bootstrap: LAPRD must appear first in 
          cbasic, therefore it is the first 'BLOCK' on 
          BASICBLOCKS. However, it is compiled in the normal 
          fashion. DOLINK must be defined before any functions 
          with linked calls can be loaded.
          Therefore it appears second, also compiled in the 
          normal fashion. (Later declarations redefine DOLINK 
          as part of LINKBLOCK.) next, CGETD, FNTYP, ARGLIST, 
          NARGS, and NCONC1 are compiled using linked calls to 
          facilitate breaking. Note that they must appear in 
          cbasic before RELINK, which uses them.
          also, CGETD must appear before FNTYP and FNTYP 
          before ARGLIST. Next appears LINKBLOCK containing 
          RELINK and DOLINK, finally equal as a block.)


    (DECLARE
      (DEFLIST [QUOTE ((NIN (NIL (LOC (ASSEMBLE NIL
					        (MOVE 1 , KNIL)
					        (PUSHJ CP , IFSET)
					        (HRRZ 2 , FCHAR
						      (FX))
					        (HLLZS FCHAR (FX))
					        (HRRZ 1 , FILEN
						      (FX))
					        (SETZ 4 ,)
					        (SETZ 5 ,)
					        (JUMPN 2 , * 2)
					    C   (JSYS 50Q)
					        (CAIN 2 , 55Q)
					        (JRST E)
					        (CAIL 2 , 60Q)
					        (CAILE 2 , 71Q)
					        (JRST C)
					    B   (SUBI 2 , 60Q)
					        (MOVE 3 , 4)
					        (LSH 3 , 2)
					        (ADDB 3 , 4)
					        (ADDM 3 , 4)
					        (ADDM 2 , 4)
					        (JSYS 50Q)
					        (CAIL 2 , 60Q)
					        (CAILE 2 , 71Q)
					        (JRST A)
					        (JRST B)
					    E   (SETO 5 ,)
					        (JRST C)
					    A   (CAIE 2 , 15Q)
					        (JRST * 3)
					        (JSYS 50Q)
					        (MOVEI 2 , 37Q)
					        (HRRM 2 , FCHAR
						      (FX))
					        (MOVE 1 , 4)
					        (SKIPGE 5)
					        (MOVN 1 , 4]
	       (QUOTE MACRO)))
    (PROG (SLOC LEN PLITORG LA DF Z)
          [COND
	    ((EQ (PEEKC)
		 (QUOTE % ))
	      (COND
		((NEQ (READ)
		      (QUOTE BINARY))
		  (ERROR (QUOTE "Bad compiled function")
			 FN)))
	      (RETURN (BINRD FN]
          (SETQ LA (READ))                      (* ARRAY length)
          (SETQ PLITORG (READ))
          [COND
	    ((MINUSP PLITORG)
	      (ERROR (QUOTE "INCOMPATIBLE COMPILED FILE")
		     (EVQ FILE]
          (SETQ LEN (READ))                     (* Length of code plus 
                                                pointers, and relative 
                                                addr of relocation bits)
          [SETQ SLOC (VAG (IPLUS 2 (LOC (SETQ DF (ARRAY LA PLITORG]
          (SETQ PLITORG (VAG (IPLUS (LOC SLOC)
				    PLITORG)))
          (SETQ LA (VAG (IPLUS (LOC SLOC)
			       LA)))
      A   (CLOSER (LOC SLOC)
		  (NIN))
      X   [COND
	    ((NEQ (SETQ Z (RATOM))
		  (QUOTE %
))
	      (FRPLACA
		SLOC
		(VAG
		  (IPLUS
		    (OPENR (LOC SLOC))
		    (OR
		      (GETP Z (QUOTE COREVAL))
		      (SELECTQ
			Z
			((MHC FNCALL)
			  (ERROR (QUOTE "INCOMPATIBLE COMPILED FILE")
				 (EVQ FILE)))
			(ERROR (QUOTE "NO COREVAL")
			       Z]
          [SETQ SLOC (VAG (ADD1 (LOC SLOC]
          (COND
	    ((IGREATERP (LOC PLITORG)
			(LOC SLOC))
	      (GO A)))
          (SETQ PLITORG (VAG (IPLUS (LOC DF)
				    LEN 2)))
      C   (COND
	    ((IGREATERP (LOC PLITORG)
			(LOC SLOC))
	      (SETQ Z (READ))
	      [COND
		[(LISTP Z)
		  (COND
		    [(EQ (CAR Z)
			 (QUOTE LINKED-FN-CALL))
		      (DOLINK SLOC 0 (CDR Z)
			      FN T)
		      (COND
			((NULL (FMEMB FN LINKEDFNS))
			  (SETQ LINKEDFNS (CONS FN LINKEDFNS]
		    (T (FRPLACA SLOC (CAR Z))
		       (FRPLACD SLOC (COND
				  ((EQ (CDR Z)
				       0)
				    (VAG 0))
				  (T (CDR Z]
		(T (CLOSER (LOC SLOC)
			   (LOC Z]
	      [SETQ SLOC (VAG (ADD1 (LOC SLOC]
	      (GO C)))
      B   (COND
	    ((IGREATERP (LOC LA)
			(LOC SLOC))
	      (CLOSER (LOC SLOC)
		      (NIN))
	      (RATOM)
	      [SETQ SLOC (VAG (ADD1 (LOC SLOC]
	      (GO B)))
          (FRPLACD DF (VAG (IPLUS LEN 2)))
          (RELOC DF (IPLUS 2 (LOC DF)))
          (DEFC FN (VAG (IPLUS 2 (LOC DF])

(PUTDQ NIN
  [LAMBDA NIL
    (PROG (Z)
      A   (COND
	    ((OR (NUMBERP (SETQ Z (PEEKC)))
		 (EQ Z (QUOTE -)))
	      (RATOM))
	    (T (READC)
	       (GO A])

(PUTDQ BINRD
  [LAMBDA (FN FILE)
    (PROG ([JFN (VAG (OPNJFN (OR FILE (INPUT]
	   LA PLITORG LEN DF ENTRY CVALS VAL PTR)
          (READC FILE)
          (OSFBSZ JFN 36)
          (SETQ LA (OBIN JFN))
          (SETQ PLITORG (OBIN JFN))
          (SETQ LEN (OBIN JFN))
          (SETQ DF (ARRAY LA PLITORG))
          (SETQ ENTRY (VAG (IPLUS (LOC DF)
				  2)))          (* Read the code.)
          (OSIN ENTRY PLITORG JFN)              (* Read the relocation 
                                                data.)
          (OSIN (VAG (IPLUS (LOC ENTRY)
			    LEN))
		(IDIFFERENCE LA LEN)
		JFN)
          (FRPLACD DF (VAG (IPLUS 2 LEN)))      (* Store relocation 
                                                origin.)
          (RELOC DF (LOC ENTRY))
          (OSFBSZ JFN 7)                        (* Now read the literals
                                                and take care of linked 
                                                calls.)
          [PROG ((SLOC (VAG (IPLUS (LOC ENTRY)
				   PLITORG)))
		 (PLIT (VAG (IPLUS (LOC ENTRY)
				   LEN)))
		 Z)
	    C   (COND
		  ((IGREATERP (LOC PLIT)
			      (LOC SLOC))
		    (SETQ Z (READ FILE))
		    [COND
		      [(LISTP Z)
			(COND
			  [(EQ (CAR Z)
			       (QUOTE LINKED-FN-CALL))
			    (DOLINK SLOC 0 (CDR Z)
				    FN T)
			    (COND
			      ((NULL (FMEMB FN LINKEDFNS))
				(SETQ LINKEDFNS (CONS FN LINKEDFNS]
			  (T (FRPLACA SLOC (CAR Z))
			     (FRPLACD SLOC (COND
					((EQ (CDR Z)
					     0)
					  (VAG 0))
					(T (CDR Z]
		      (T (CLOSER (LOC SLOC)
				 (LOC Z]
		    [SETQ SLOC (VAG (ADD1 (LOC SLOC]
		    (GO C]
          (SETQ CVALS (READ FILE))

          (* CVALS is always a list, so there cannot be a c/r 
          hanging in anyone's input buffer at this point.)


          (OSFBSZ JFN 18)
      L1  (OR CVALS (GO OUT))
          (OR (SETQ VAL (FGETP (CAR CVALS)
			       (QUOTE COREVAL)))
	      (ERROR (QUOTE "No COREVAL")
		     (CAR CVALS)))
          (SETQ VAL (VAG (LOGAND VAL 262143)))
      L2  [SETQ PTR (VAG (IPLUS (LOC DF)
				(OBIN JFN]
          (COND
	    ((EQ PTR DF)                        (* I.E. WAS 0 READ)
	      (SETQ CVALS (CDR CVALS))
	      (GO L1)))
          [FRPLACA PTR (VAG (IPLUS (OPENR (LOC PTR))
				   (LOC VAL]
          (GO L2)
      OUT (OSFBSZ JFN 7)
          (DEFC FN ENTRY])

(PUTDQ FIXP
  [LAMBDA (X)
    (AND (NUMBERP X)
	 (NOT (FLOATP X))
	 X])

(PUTDQ RPAQQ
  [NLAMBDA (X Y)
    (RPLACA X Y])

(PUTDQ ADD1
  [LAMBDA (X)
    (IPLUS X 1])

(PUTDQ IDIFFERENCE
  [LAMBDA (A B)
    (IPLUS A (MINUS B])

(PUTDQ FILECREATED
  [NLAMBDA (X)
    (PRIN1 PRETTYHEADER T)
    (PRIN1 X T)
    (TERPRI T])

(PUTDQ SETCV
  [LAMBDA NIL
    (PROG (Z)
          (SETQ Z 0)
          (SETQ COREVALS (COND
	      (SPAGHETTIFLG SCOREVALS)
	      (T OCOREVALS)))
          (MAPC COREVALS (FUNCTION (LAMBDA (E)
		    (PUT E (QUOTE COREVAL)
			 (OPENR (IPLUS COREVALA Z)))
		    (SETQ Z (ADD1 Z])

(PUTDQ HELP
  [LAMBDA (HELPX HELPY)
    (PROG NIL
          (PRIN1 (QUOTE "
HELP:
")
		 T)
          (PRIN1 HELPX T)
          (TERPRI T)
          (PRIN1 HELPY T)
      LOOP(NLSETQ (PROGN (PRIN1 (QUOTE "
:")
				T)
			 (PRINT (EVAL (READ T))
				T)))
          (GO LOOP])

(PUTDQ VIRGINFN
  [LAMBDA (FN)
    (GETD FN])

(PUTDQ DEFC
  [LAMBDA (NM DF)
    (PUTD NM DF])

(PUTDQ MKSWAPP
  [LAMBDA NIL NIL])

(PUTDQ FILEMAP
  [NLAMBDA NIL])

(PUTDQ DEFLIST
  [LAMBDA NIL NIL])

(PUTDQ OSFBSZ
  [LAMBDA (JFN N)
    (JSYS 38 (LOC JFN)
	  N])

(PUTDQ OBIN
  [LAMBDA (JFN)
    (JSYS 40 (LOC JFN)
	  0 0 2])

(PUTDQ OSIN
  [LAMBDA (ORG N JFN)
    (COND
      ((IGREATERP N 0)
	(JSYS 42 (LOC JFN)
	      (LOGOR (LOC ORG)
		     -29460791296)
	      (MINUS N])

(PUTDQ LOADUP
  [LAMBDA NIL
    (SETQ NOSWAPFLG T)

          (* Do NOT make anything swapped yet.
          However reset NOSWAPFLG to normal setting 
          (NIL) when done. Should be no other references to 
          NOSWAPFLG in any place in the bootstrap, including 
          the file SWAP. JWG 9/74)


    (MINFS 10000 1)
    [MAPC
      (QUOTE ((GLOBALVARSVARS GLOBALVARS <NEWLISP>GLOBALVARS 
			      <LISP>GLOBALVARS)
	      (BOOTSTRAPCOMS BOOTSTRAP.COM <NEWLISP>BOOTSTRAP.COM 
			     <LISP>BOOTSTRAP.COM)
	      (BASICCOMS BASIC.COM <NEWLISP>BASIC.COM <LISP>BASIC.COM)
	      (MISCCOMS MISC.COM <NEWLISP>MISC.COM <LISP>MISC.COM)
	      (SWAPCOMS SWAP.COM <NEWLISP>SWAP.COM <LISP>SWAP.COM)
	      (ASSEMBLECOMS ASSEMBLE.COM <NEWLISP>ASSEMBLE.COM 
			    <LISP>ASSEMBLE.COM)
	      (LOADUPCOMS LOADUP.COM <NEWLISP>LOADUP.COM 
			  <LISP>LOADUP.COM)))
      (FUNCTION (LAMBDA (FL)
	  (PROG NIL
	        (COND
		  ((LISTP (CAAR FL))            (* CAR of FL is the 
                                                fileCOMS atom.)
		    (TERPRI T)
		    (PRIN2 (CAR FL)
			   T)
		    (PRIN1 (QUOTE " is already a list, so not loading ")
			   T)
		    (PRINT (CADR FL)
			   T)
		    (RETURN)))
	        (MAPC (CDR FL)
		      (FUNCTION [LAMBDA NIL NIL])
		      (FUNCTION (LAMBDA (FL1)   (* In lieu of SOME being
                                                defined...)
			  (COND
			    ((INFILEP (CAR FL1))
			      (PRIN1 (QUOTE "
Loading ")
				     T)
			      (PRINT (LOAD (PRINT (CAR FL1)
						  T)
					   T)
				     T))
			    ((CDR FL1))
			    ((ERROR (CONS (CADR FL)
					  (QUOTE (- NOT FOUND!]
    (SETQ NOSWAPFLG)
    (PRIN1 (QUOTE "
Relinking world...")
	   T)
    (RELINK (QUOTE WORLD))
    (TERPRI T)
    (SETSBSIZE 64)
    (QUOTE "LOADUP in PUTDQ finished."])

  (SETQ OCOREVALS
	(QUOTE (NP CP PP FF BR ENTERF XXXFNCALL BHC UUARG1 UUARG2 
		   UUARG3 KT KNIL ARRAYT BLOCKT CCODET BTABT LISTT 
		   ATOMT FLOATT FIXT SMALLT STPTT CHART PNAMT STRNGT 
		   CONS IUNBOX MKN FUNBOX MKFN GUNBOX GBOX FXFLT FLTFX 
		   ASZ TYPTAB LIST EVCC UPATM IPRE IPRE2 FILEN IFSET 
		   OFSET FX FIN FOUT XXXMHC HCRET ERRSET ICPC SETINT 
		   CTCTP IPPC INPC MKSP UNP1 MKSTR1 MKSTRS FILEA FCHAR 
		   CNSCNT CTRLU SETMOD REBIND UNBIND EFNCAL RETCAL 
		   BLKENT BLKAPP BLKAP* HCCALQ EXCALQ CCALC FMEMB 
		   PPLOOK STKARC STKNTC LINBF3 IOFN GETHSH PUTHSH GCTIM 
		   IBOXCN FBOXCN ENTERB SBLKNT SBCALQ ORGRDT SWAPIN 
		   HANDLT FFNOPR FFNOPA FFNOPD FFNCLR FFNCLA FFNCLD 
		   POPTAB)))
  (SETQ SCOREVALS
	(QUOTE (CP PP VP FF BR ENTERF XXXFNCALL BHC UUARG1 UUARG2 
		   UUARG3 KT KNIL ARRAYT BLOCKT CCODET BTABT LISTT 
		   ATOMT FLOATT FIXT SMALLT STPTT CHART PNAMT STRNGT 
		   CONS IUNBOX MKN FUNBOX MKFN GUNBOX GBOX FXFLT FLTFX 
		   ASZ TYPTAB LIST EVCC UPATM IPRE IPRE2 FILEN IFSET 
		   OFSET FX FIN FOUT XXXMHC HCRET ERRSET ICPC SETINT 
		   CTCTP IPPC MKSP UNP1 MKSTR1 MKSTRS FILEA FCHAR 
		   CNSCNT CTRLU SETMOD REBIND UNBIND EFNCAL RETCAL 
		   BLKENT BLKAPP BLKAP* HCCALQ EXCALQ CCALC FMEMB 
		   PPLOOK LINBF3 IOFN GETHSH PUTHSH GCTIM CFRAM NLGO 
		   NLRET CF CFARP IBOXCN FBOXCN ENTERB SBLKNT SBCALQ 
		   ORGRDT SWAPIN HANDLT FFNOPR FFNOPA FFNOPD FFNCLR 
		   FFNCLA FFNCLD POPTAB)))
  (SETQ COREVALA (QUOTE 512))
  (SETQ PRETTYHEADER (QUOTE "FILE CREATED "))
  (SETQ LINKEDFNS (QUOTE NIL))
  (SETQ NOSWAPFNS
	(QUOTE (LAPRD BINRD FNTYP NOLINKDEF LISPXPRINT LISPXPRIN1 
		      LISPXPRIN2 LISPXSPACES LISPXTERPRI ADDSPELLBLOCK 
		      SAVESET /PUT DCHCONBLOCK MKSWAP2BLOCK)))
  (SETQ MKSWAPSIZE (QUOTE 128))
  (PUTD (QUOTE FGETP)
	(GETD (QUOTE GETP)))
  (PUTD (QUOTE *)
	(GETD (QUOTE QUOTE)))
  (PUTD (QUOTE DECLARE)
	(GETD (QUOTE QUOTE)))
  (PUTD (QUOTE FRPLACA)
	(GETD (QUOTE RPLACA)))
  (PUTD (QUOTE FRPLACD)
	(GETD (QUOTE RPLACD)))
  (PUTD (QUOTE /PUTD)
	(GETD (QUOTE PUTD)))
  (PUTD (QUOTE LISPXPRINT)
	(GETD (QUOTE PRINT)))
  [PROGN
    (* TEMPORARY WHILE PHASING OUT HANDLEP AND PHASING SWPARRAYP IN.)
    (COND
      [[AND (SUBRP (QUOTE HANDLEP))
	    (NULL (GETD (QUOTE SWPARRAYP]
       (* Old way.)
       (PUTD (QUOTE SWPARRAYP)
	     (GETD (QUOTE HANDLEP]
      [[AND (SUBRP (QUOTE SWPARRAYP))
	    (NULL (GETD (QUOTE HANDLEP]
       (* New assembly. Keep HANDLEP though for late changers.)
       (PUTD (QUOTE HANDLEP)
	     (GETD (QUOTE SWPARRAYP]
      (T
	(PRIN1
	  (QUOTE
	    

"
I CAN'T FIGURE OUT WHAT'S GOING ON WITH SWPARRAY/HANDLEP, SO I
AM DOING NOTHING.
	TAKE THAT!
")
	  T)))
    (* First reference to spaghettiflg! used in SETCV and below in the 
       put's.)
    (SETQ SPAGHETTIFLG (COND ((GETD (QUOTE ENVEVAL))
			      T)))
    (SETCV)
    (NONAC T)
    (CLOSEF)
    (PUT (QUOTE PUSHJ)
	 (QUOTE OPD)
	 90112)
    (PUT (QUOTE EXCAL)
	 (QUOTE OPD)
	 (COND (SPAGHETTIFLG 6144)
	       (T 3584)))
    (PUT (QUOTE SBCAL)
	 (QUOTE OPD)
	 (COND (SPAGHETTIFLG 12800)
	       (T 12288)))
    (* When i started putting comments in PUTDQ it brought to light a 
       problem we'd had all along: the MOVD's which define star and 
       DECLARE from QUOTE, although fine in the actual bootstrapping, 
       were moving warrens cexpr when we were loading PUTDQ for 
       editing. When i ran MAKEPDQ i then got a parenthesis error 
       message. Ever helpful, sydney. Herewith a special 
       un-messer-upper for QUOTE, which IS A SUBR, vive la france. If 
       warren should decide to put back in that STKPOS check in his 
       QUOTE, which avoids the error if the definition isn't on QUOTE 
       any more, then this COND may be flushed:)
    (COND ((CCODEP (QUOTE QUOTE))
	   (PRIN1 (QUOTE "
FIXING QUOTE.
")
		  T)
	   (PUTD (QUOTE QUOTE)
		 [OR (GETP (QUOTE QUOTE)
			   (QUOTE SUBR))
		     (QUOTE (NLAMBDA X (CAR X]
		 (PUTD (QUOTE *)
		       (GETD (QUOTE QUOTE)))
		 (PUTD (QUOTE DECLARE)
		       (GETD (QUOTE QUOTE])
STOP

