(FILECREATED "28-SEP-74 18:24:23" PRSTRUC.;1 25503  

     changes to:  CALLS

     previous date: "11-JUL-74 13:59:50" <LISP>PRSTRUC.;1)


  (LISPXPRINT (QUOTE PRSTRUCCOMS)
	      T T)
  (RPAQQ PRSTRUCCOMS ((FNS * PRSTRUCFNS)
	  (VARS (LAST-PRINTSTRUCTURE)
		(YESFNS)
		(NOFNS)
		(NOTRACEFNS)
		(PRDEPTH 7)
		INVISIBLEVARS)
	  (P (FIRSTFN)
	     (LASTFN))
	  (BLOCKS * PRSTRUCBLOCKS)))
  (RPAQQ PRSTRUCFNS
	 (PRINTSTRUCTURE TREEPRINT TREEPRINT1 VARPRINT VARPRINT1 VARPRINT1A 
			 VARPRINT2 PROGSTRUC PRGSTRC PRGSTRC1 PRNCONC NOTFN 
			 CALLS CALLS1 CALLS2 MAKELIST VARS FREEVARS FIRSTFN 
			 LASTFN PRGETD ALLCALLS ALLCALLS1))
(DEFINEQ

(PRINTSTRUCTURE
  [LAMBDA (X EXPRFLG FILE)

          (* X can be a list of functions, or an atom 
          evaluating to a list of functions, otherwise same as 
          (X) If X is (FOO FIE) and FOO calls FIE, one tree 
          will be produced, if FIE calls FOO, or neither calls 
          the other, two trees will be produced.
          -
          -
          If a function is listed on X, e.g. 
          (FOO FIE (FUM)), it will have its own tree 
          regardless of whether or not it is called by an 
          earlier (on X) function. note that this can be 
          utilized to prevent wraparound, e.g. when doing a 
          PRINTSTRUCTURE of the compiler, make CEXP have its 
          own tree, etc.)


    (PROG (DONELST (N PRDEPTH)
                   TREELST TREEFNS L TEM)
          [COND
            ((NULL X)
              (SETQ DONELST (CAR LAST-PRINTSTRUCTURE))
              (SETQ TREELST (CDR LAST-PRINTSTRUCTURE))
              (GO PRINT))
            ((LISTP X)
              (SETQ L X))
            ((PRGETD X)
              (SETQ L (LIST X))
              (GO MAP))
            ((LISTP (CAR X))                    (* E.g. PRINTSTRUCTURE 
                                                (FOOFNS))
              (SETQ L (CAR X)))
            (T                                  (* May spelling correct 
                                                below.)
               (SETQ L (LIST X]
          [MAP L (FUNCTION (LAMBDA (X)
                   (PROG (Y Z)
                         [COND
                           ((LISTP (SETQ Z (CAR X)))
                             (SETQ Y (SETQ X Z]
                         (RPLACA X (FNCHECK (CAR X)
                                            NIL T T))
                         (COND
                           (Y (SETQ TREEFNS (CONS (CAR X)
                                                  TREEFNS]
      MAP [MAPC L (FUNCTION (LAMBDA (FN)
                    (COND
                      ((AND (NOT (FMEMB FN DONELST))
                            (SETQ TEM (PRGETD FN)))
                        (SETQ TREELST (NCONC1 TREELST
                                              (CAR (PROGSTRUC FN TEM]
          (SETQ DONELST (DREVERSE DONELST))
          (SETQ LAST-PRINTSTRUCTURE (CONS DONELST TREELST))
          (COND
            ((EQ FILE (QUOTE NIL:))
              (RETURN X)))
      PRINT
          (SETQ TEM NIL)
          [COND
            ((NULL FILE))
            ((OPENP FILE)
              (SETQ TEM (OUTPUT FILE)))
            ((NULL (SETQ TEM (OUTFILE FILE)))
              (ERROR FILE (QUOTE "CAN'T BE OPENED"]
          (TERPRI)
          [MAPC
            TREELST
            (FUNCTION (LAMBDA (TREE)
                (TREEPRINT TREE)
                (PRIN1
                  (QUOTE
                    
"
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"]
          (TERPRI)
          (VARPRINT DONELST TREELST)
          (AND FILE (CLOSEF (OUTPUT)))

          (* So that if FILE is LPT:, the right thing is given 
          to CLOSEF.)


          (OUTPUT TEM)
          (RETURN X])

(TREEPRINT
  [LAMBDA (X N)
    (COND
      ((NULL N)
        (SETQ N 0)))
    (SPACES (IDIFFERENCE N (POSITION)))
    (COND
      ((ATOM X)
        (PRINT X))
      ((NULL (CDR X))
        (PRINT (CAR X)))
      (T (TREEPRINT1 (CAR X)
                     10)
         (COND
           ((EQ (CADR X)
                (QUOTE **CUTOFF**))
             (PRINT (QUOTE **CUTOFF**)))
           (T (SETQ N (POSITION))
              (MAPC (CDR X)
                    (FUNCTION (LAMBDA (Z)
                        (TREEPRINT Z N])

(TREEPRINT1
  [LAMBDA (X N)
    (PRIN1 X)
    (SPACES (COND
              ((IGREATERP (SETQ N (IDIFFERENCE N (NCHARS X)))
                          0)
                N)
              (T 2])

(VARPRINT
  [LAMBDA (DONELST TREELST)
    (PROG (FN VARS)
          [COND
            ((NULL DONELST)
              (SETQ DONELST (CAR LAST-PRINTSTRUCTURE))
              (SETQ TREELST (CDR LAST-PRINTSTRUCTURE]
      LP  (COND
            ((NULL DONELST)
              (RETURN)))
          (SETQ FN (CAR DONELST))
          (SETQ VARS (CADR DONELST))
          [COND
            ((NOT (ATOM FN))
              (MAPRINT (LIST (QUOTE "P.P.E. IN")
                             VARS
                             (QUOTE -)
                             FN))
              (TERPRI)
              (TERPRI)
              (GO LP1))
            (VARS (VARPRINT1 FN VARS)
                  (VARPRINT2 FN TREELST))
            ((AND (EQ (NTHCHAR FN 1)
                      (QUOTE ;))
                  (EQ (NTHCHAR FN -1)
                      (QUOTE ;)))
              (PRINT FN)
              (VARPRINT2 FN TREELST))
            ((NOT (FNTYP FN))
              (TREEPRINT1 FN 10)
              (PRIN1 (QUOTE "is not defined.

"]
      LP1 (SETQ DONELST (CDDR DONELST))
          (GO LP])

(VARPRINT1
  [LAMBDA (FN VARS)                             (* Prints function name,
                                                arguments, local and 
                                                free variables.)
    (TREEPRINT1 FN 10)
    [COND
      ((AND (SETQ FN (ARGLIST FN))
            (ATOM FN))
        (SETQ FN (LIST FN]
    (MAPRINT FN NIL (QUOTE %[)
             (QUOTE "; ")
             (QUOTE ,))
    (MAPRINT [VARPRINT1A (CDR (NTH (CAR VARS)
                                   (LENGTH FN]
             NIL NIL (QUOTE "; ")
             (QUOTE ,))
    (MAPRINT (CDR VARS)
             NIL NIL (QUOTE %])
             (QUOTE ,))
    (TERPRI])

(VARPRINT1A
  [LAMBDA (VARS)                                (* Eliminates CLISP 
                                                variables such as 
                                                $$TEM.)
    (MAPCONC VARS (FUNCTION (LAMBDA (X)
                 (AND (NOT (FMEMB X INVISIBLEVARS))
                      (LIST X])

(VARPRINT2
  [LAMBDA (FN TREELST)                          (* Prints "fn CALLED BY:"
                                                followed by ALLCALLS.)
    (SETQ FN (ALLCALLS FN TREELST))
    (PRIN1 (QUOTE "   called by:  "))
    (MAPRINT FN NIL NIL (QUOTE %
)
             (QUOTE ,))
    (TERPRI])

(PROGSTRUC
  [LAMBDA (FN DEF)
    (PROG ((N (SUB1 N))
           Y
           (Z (SETQ DONELST (CONS FN DONELST)))
           CALLSFLG VARSFLG VARS1 VARS2 D)

          (* Analyzes DEF, the definition of function FN.
          D is a list of fns already appearing in the subtree 
          for FN, since each function called by FN appears 
          only once. DONELST is a global variable that is a 
          list of functions already analyzed by PROGSTRUC, 
          since a full expanded tree-structure appears only 
          once for each function in the tree produced by 
          PRINTSTRUCTURE.)


          [COND
            ((EXPRP DEF)
              (SETQ Y (PRGSTRC DEF)))
            ((CCODEP DEF)
              [SETQ Y (MAPCONC (CALLS1 DEF)
                               (FUNCTION (LAMBDA (X)
                                   (PRGSTRC X NIL T]

          (* CALLS1 returns a list of functions called by FN 
          and sets VARS1 and VARS2.)


              )
            (T                                  (* Subr.)
               (ATTACH NIL Z)
               (RETURN (LIST (LIST FN]
          (ATTACH (CONS VARS1 VARS2)
                  Z)

          (* Attaches variable list to correct spot in 
          DONELST. Other functions may have been added to 
          DONELST in front of Z before finishing the analysis 
          of this function so must use ATTACH.)


          (RETURN (LIST (CONS FN Y])

(PRGSTRC
  [LAMBDA (X HEAD FLG)

          (* The value of PRGSTRC and PRGSTRC1 are trees, they also 
          change the free variables DONELST, VARS1, and VARS2.
          FLG=T when called from PROGSTRUC on compiled function: X has 
          already passed the NOTFN check, so no need to do it again.)


    (PROG (Y TEM)                               (* Analyzes structure of 
                                                s-expression.)
          [COND
	    ((NLISTP X)
	      (AND (NULL VARSFLG)
		   (SETQ TEM (PRGETD X)))
	      (RETURN (COND
			((AND (NULL FLG)
			      (OR VARSFLG (GETP X (QUOTE CLISPWORD))
				  (AND TEM (NOTFN X TEM))
				  (FMEMB X D)
				  (FMEMB X NOFNS)))

          (* Undefined functions are to be added to D 
          (in next clause), unless they are specifically listed on 
          NOFNS.)


			  NIL)
			(T (SETQ D (CONS X D))
			   (COND
			     (CALLSFLG NIL)
			     ((ILESSP N 1)
			       (LIST (QUOTE **CUTOFF**)))
			     ((FMEMB X DONELST)
			       (LIST X))
			     ((FMEMB X TREEFNS)
                                                (* Will have own tree.)
			       (LIST X))
			     ((OR (NULL TEM)
				  (FMEMB X NOTRACEFNS))
			       (SETQ DONELST (CONS NIL (CONS X DONELST)))
			       (LIST X))
			     (T (PROGSTRUC X TEM]
          (AND CLISPFLG CLISPARRAY [COND
		 [(NLISTP (CAR X))
		   (NULL (FGETD (CAR X]
		 (T (NULL (FNTYP (CAR X]
	       (SETQ TEM (GETHASH X CLISPARRAY))
	       (SETQ X TEM))
          (SETQ Y (CAR X))
          [COND
	    ((EQ HEAD (QUOTE COND))

          (* X is a COND clause. CAR is not a function name.
          Analyze the clause with PRGSTRC1.)


	      (RETURN (PRGSTRC1 X Y T)))
	    [(AND (NULL VARSFLG)
		  (NOT (ATOM Y))
		  (NEQ (CAR Y)
		       (QUOTE LAMBDA)))         (* Possible parentheses error)
	      (SETQ DONELST (CONS FN (CONS X DONELST)))
	      (SETQ D (CONS X D))
	      (RETURN (PRNCONC (PRGSTRC Y)
			       (PRGSTRC1 X Y]
	    ((OR (EQ Y (QUOTE LAMBDA))
		 (EQ Y (QUOTE NLAMBDA)))
	      [SETQ VARS1 (NCONC VARS1 (COND
				   ((NULL (SETQ TEM (CADR X)))
				     NIL)
				   ((ATOM TEM)
				     (LIST TEM))
				   (T (APPEND TEM]
	      (RETURN (PRGSTRC1 (CDR X)
				Y]
          (RETURN
	    (PRNCONC
	      (PRGSTRC Y)
	      (SELECTQ
		Y
		(PROG (SETQ TEM NIL)
		      [SETQ VARS1
			(NCONC VARS1 (MAPCAR
				 (CADR X)
				 (FUNCTION (LAMBDA (X)
				     (COND
				       ((ATOM X)
					 X)
				       (T (SETQ TEM (PRNCONC TEM (PRGSTRC1
							       X)))
					  (CAR X]
		      (PRNCONC TEM (PRGSTRC1 (CDR X)
					     Y)))
		(COND
		  (PRGSTRC1 X Y))
		(FUNCTION (PRGSTRC (CADR X)))
		((QUOTE GO * ASSEMBLE)
		  NIL)
		(SELECTQ (PRNCONC [COND
				    ((NOT (ATOM (CADR X)))
				      (PRGSTRC (CADR X]
				  (PRGSTRC1 (CDR X)
					    Y)))
		((ERSETQ NLSETQ OR AND PROG1 PROGN SETQ UNDONLSETQ RESETVAR 
				       RESETFORM)

          (* These are the most common NLAMBDA-EVAL functions.
          So a special check is made for them.)


		  (PRGSTRC1 X Y))
		(COND
		  ((EQ Y CLISPTRANFLG)
		    (PRGSTRC (CADR X)))
		  ((AND (NULL (FGETD Y))
			(GETP Y (QUOTE CLISPWORD)))
                                                (* E.g. IF, FOR, etc.)
		    (DWIMIFY0 X FN VARS1)
		    (AND (SETQ TEM (COND
			     ((AND CLISPARRAY (GETHASH X CLISPARRAY)))
			     ((NULL (GETP (CAR X)
					  (QUOTE CLISPWORD)))
			       X)))
			 (PRGSTRC TEM)))
		  ((AND (OR (EQ (SETQ TEM (ARGTYPE Y))
				1)
			    (EQ TEM 3))
			(NEQ (GETP Y (QUOTE INFO))
			     (QUOTE EVAL)))     (* Do not analyze 
                                                (CDR X))
		    NIL)
		  (T (PRGSTRC1 X Y])

(PRGSTRC1
  [LAMBDA (L HEAD FLG)
    (PROG (A B)                                 (* HEAD is CAR of form 
                                                presently being analyzed
                                                by PRGSTRC.)
          (OR FLG (SETQ L (CDR L)))
      LP  [COND
            ((NULL L)
              (RETURN A))
            [(LISTP (SETQ B (CAR L)))
              (SETQ A (PRNCONC A (COND
                                 ((AND (EQ HEAD (QUOTE SELECTQ))
                                       (CDR L))
                                   (PRGSTRC1 B))
                                 (T (PRGSTRC B HEAD]
            ([AND (LITATOM B)
                  (NOT (OR (EQ HEAD (QUOTE PROG))
                           (NULL B)
                           (EQ B T)
                           (NUMBERP B)
                           (ARRAYP B)
                           (GETP B (QUOTE CLISPWORD))
                           (FMEMB B VARS1)
                           (FMEMB B VARS2]      (* B is a new free 
                                                variable.)
              (SETQ VARS2 (NCONC1 VARS2 B]
          (SETQ L (CDR L))
          (GO LP])

(PRNCONC
  [LAMBDA (X Y)

          (* CALLSFLG is T when called from CALLS -
          i.e. just want list of calls not structure)


    (COND
      ((NULL CALLSFLG)
        (NCONC X Y])

(NOTFN
  [LAMBDA (FN DEF)                              (* Value is T if not to 
                                                be analyzed.)
    (PROG NIL
          (OR DEF (SETQ DEF (PRGETD FN)))
          (RETURN (COND
                    ((NULL DEF)
                      T)
                    ((FMEMB FN NOFNS)
                      T)
                    ((OR (EQ YESFNS T)
                         (FMEMB FN YESFNS))
                      NIL)
                    ((SELECTQ FN
                              ((COND
                                  PROG GO ASSEMBLE PROGN SELECTQ 
                                  FUNCTION QUOTE * OR
                                    AND NOT NULL EQ NEQ SETQ RETURN CAR 
                                        CDR CADR CDDR CADDR CDDDR ATOM 
                                        IPLUS ITIMES ILESSP IGREATERP 
                                        CONS LIST MAPC MAP UNDONLSETQ 
                                        RESETVAR RESETFORM)

          (* These functions go away on compilation anyway.
          If the user wants them included in analysis of 
          interpreted functions, he can put them on YESFNS.)


                                T)
                              NIL))
                    ([AND (LISTP DEF)
                          (OR (LISTP (CAR DEF))
                              (LISTP (CDR DEF]
                                                (* Open EXPRP.)
                      NIL)
                    (T [COND
                         ((NULL (CCODEP DEF))   (* Subr.)
                           (SETQ DEF (CDR DEF]

          (* FIRSTLOC=NIL IS EQUIVALENT TO END OF BINARY 
          PROGRAM SPACE, SIMILARLY FOR LASTLOC.
          THUS IF FIRSTLOC=NIL, NO COMPILED FUNCTIONS ARE 
          INTERESTING, I.E. NOTFN WILL ALWAYS BE T.
          IF LASTLOC=NIL, ALL ARE INTERESTING, SO NOTFN 
          RETURNS NIL.)


                       (OR (NULL FIRSTLOC)
                           (ILESSP (LOC DEF)
                                   (LOC FIRSTLOC))
                           (AND LASTLOC (IGREATERP (LOC DEF)
                                                   (LOC LASTLOC])

(CALLS
  [LAMBDA (FN EXPRFLG VARSFLG)
    (PROG ((CALLSFLG T)
	   D VARS1 VARS2 DONELST (DEF (COND
					((LITATOM FN)
					  (PRGETD (FNCHECK FN NIL NIL T)))
					(T FN)))
	   (FLOC FIRSTLOC)
	   (LLOC LASTLOC)
	   Z)

          (* When CALLSFLG is T, PRGSTRC and PRGSTRC1 do not descend 
          into function definition. when VARSFLG is T, just gets free 
          and bound variables.)


          (FIRSTFN T)
          (LASTFN)
          [SETQ Z (COND
	      ((NULL DEF)
		NIL)
	      ((SUBRP DEF)
		(QUOTE SUBR))
	      ((OR (CCODEP DEF)
		   (SWPARRAYP DEF))
		(LIST (CALLS1 DEF)
		      (VARPRINT1A VARS1)
		      VARS2))
	      ((EXPRP DEF)

          (* Note that FN can be a piece of a function definition, and 
          calls will still work.)


		(PRGSTRC DEF)
		(LIST (DREVERSE D)
		      (VARPRINT1A VARS1)
		      VARS2))
	      (T (QUOTE ?]
          (SETQ FIRSTLOC FLOC)

          (* FIRSTOC and LASTLOC are GLOBALVARS so they have to be 
          reset, they can't just be rebound for this call.)


          (SETQ LASTLOC LLOC)
          (RETURN Z])

(CALLS1
  [LAMBDA (HANDLE GENFLG D)

          (* CALLS1 is called from calls and PROGSTRUC with D=NIL.
          As in PROGSTRUC, D is a list of functions already 
          encountered. This is necessary to prevent the same function 
          from being included twice in the case where it is called 
          from the function being analyzed as well as from one of its 
          GENSYM subfunctions. D is supplied as an argument to CALLS1 
          instead of being used freely to prevent CALLS1 from 
          clobbering the binding of D in PROGSTRUC.)


    (PROG ((ADR 0)
	   (LIT (FIRSTLIT HANDLE))
	   (END (LASTLIT+1 HANDLE))
	   (V1 (NARGS HANDLE))
	   (V2 (NFRVARS HANDLE))
	   LEFT OPD X)

          (* LIT is the address of the first literal, END 1 PLUS the 
          address of the last literal, V1 the number of arguments, and 
          V2 the number of free variables.)


          (SETQ VARS1 (NCONC VARS1 (MAKELIST HANDLE LIT V1)))
          [COND
	    [GENFLG 

          (* Definition being analysed is a generated function.
          Therefore, some of its free variables may be bound, or 
          already listed as being free in the function to which it 
          belongs.)


		    (MAPC (MAKELIST HANDLE (IPLUS LIT V1)
				    V2)
			  (FUNCTION (LAMBDA (X)
			      (COND
				((AND (NOT (FMEMB X VARS1))
				      (NOT (FMEMB X VARS2)))
				  (SETQ VARS2 (NCONC1 VARS2 X]
	    (T (SETQ VARS2 (MAKELIST HANDLE (IPLUS LIT V1)
				     V2]
      LP  [COND
	    ((EQP (SETN ADR (ADD1 ADR))
		  LIT)
	      (SETQ ADR (IPLUS LIT V2))
	      (GO LP1))
	    ((AND (OR (EQ (SETQ OPD (RSH [LOC (SETQ LEFT
						(VAG (LRSH (FNOPENR HANDLE ADR)
							   18]
					 9))
			  11)
		      (EQ OPD 12))
		  (NOT (FMEMB (FNOPENRA HANDLE (SETQ X (FNOPENADR HANDLE ADR)))
			      INVISIBLEVARS)))

          (* LEFT is LEFT half of word, OPD the opcode.
          This checks for PBIND or PBINDN instruction.
          Says BIND next n variables, where -n is in the LEFT half of 
          the next word, starting from variable in right half of this 
          word. FNOPENADR returns address portion of corresponding 
          cell as a relative address, regardless of whether handle 
          corresponds to compiled or swapped function.)


	      [SETQ VARS1
		(NCONC VARS1 (MAKELIST
			 HANDLE X (ADD1 (RSH (IMINUS (FNOPENR HANDLE
							      (ADD1 ADR)))
					     18]
	      (SETN ADR (ADD1 ADR)))
	    ((AND [COND
		    [(AND (EQ OPD 326)
			  (EQ (LOGAND (LOC LEFT)
				      15)
			      14)
			  (EQ (LRSH (FNOPENR HANDLE (SUB1 ADR))
				    27)
			      128))

          (* HRLM (PP) instruction preceded by a MOVE instruction.
          Variable name is in address portion of MOVE instruction)


		      (SETQ X (FNOPENADR HANDLE (SUB1 ADR]
		    ((AND (EQ OPD 324)
			  (EQ (LRSH (FNOPENR HANDLE (ADD1 ADR))
				    27)
			      177))

          (* HRL instruction followed by a PUSH instruction.
          Variabe name is in address portion of HRL instruction.)


		      (SETQ X (FNOPENADR HANDLE ADR]
		  (NOT (ILESSP X LIT))
		  (ILESSP X END)
		  (NOT (FMEMB (SETQ X (FNOPENRA HANDLE X))
			      INVISIBLEVARS)))
	      (SETQ VARS1 (NCONC1 VARS1 X]
          (GO LP)
      LP1 [COND
	    ((EQP ADR END)
	      (RETURN D))
	    [(AND (NULL VARSFLG)
		  (NEQ (SETQ X (FNOPENRD HANDLE ADR))
		       (VAG 0))
		  (LITATOM X))

          (* Linked call. Therefore cannot be on D, nor on vars1, nor 
          a number.)


	      (OR (NOTFN X)
		  (SETQ D (NCONC1 D (PACK (LIST (QUOTE ;)
						X
						(QUOTE ;]
	    ((LISTP (SETQ X (FNOPENRA HANDLE ADR)))
                                                (* NECESSARY TO ANALYZE 
                                                GENERATED SUBFUNCTIONS EVEN WHEN
                                                JUST LOOKING FOR VARIABLES.)
	      (CALLS2 (CAR X)))
	    ([AND (NULL VARSFLG)
		  (ATOM X)
		  (NULL (OR (NUMBERP X)
			    (FMEMB X D)
			    (FMEMB X VARS1)
			    (NOTFN X)
			    (CALLS2 X]

          (* The (FMEMB X VARS1) takes care of the case where a PROG 
          variable happens to have the same name as a function.
          In this case it is not counted as a function.
          If user happens to use it both as a PROG variable and as a 
          function, T.S.)


	      (SETQ D (NCONC1 D X]
          (SETN ADR (ADD1 ADR))
          (GO LP1])

(CALLS2
  [LAMBDA (X)
    (COND
      ((AND (EQ (NTHCHAR X -5)
		(QUOTE A))
	    (EQ (NTHCHAR X -4)
		(QUOTE 0)))
	(SETQ D (CALLS1 (PRGETD X)
			T D))
	T])

(MAKELIST
  [LAMBDA (HANDLE ADR N)
    (PROG (L)

          (* Makes a list of N elements beinning at address ADR 
          relative to HANDLE.)


      LP  (COND
	    ((ZEROP N)
	      (RETURN L)))
          (SETQ L (CONS (FNOPENRA HANDLE (IPLUS ADR N -1))
			L))
          (SETQ N (SUB1 N))
          (GO LP])

(VARS
  [LAMBDA (FN EXPRFLG)
    (CDR (CALLS FN EXPRFLG T])

(FREEVARS
  [LAMBDA (FN EXPRFLG)
    (CADR (VARS FN EXPRFLG])

(FIRSTFN
  [LAMBDA (FN)
    (SETQ FIRSTLOC (COND
        ((EQ FN T)
          (VAG 0))
        (FN (GETD (OR (GETP (SETQ FN (FNCHECK FN))
                            (QUOTE ADVISED))
                      (GETP FN (QUOTE BROKEN))
                      FN])

(LASTFN
  [LAMBDA (FN)
    (SETQ LASTLOC (COND
        (FN (GETD (OR (GETP (SETQ FN (FNCHECK FN))
                            (QUOTE ADVISED))
                      (GETP FN (QUOTE BROKEN))
                      FN])

(PRGETD
  [LAMBDA (FN)

          (* If EXPRFLG is T, PRGETD will rturn an EXPR 
          property over a compiled code definition.
          In this case it will print a message.)


    (PROG (X Y)
          (SETQ X (GETD (OR (GETP FN (QUOTE BROKEN))
                            FN)))
          (RETURN (COND
                    ((AND X (OR (NULL EXPRFLG)
                                (EXPRP X)))
                      X)
                    ((SETQ Y (GETP FN (QUOTE EXPR)))
                      Y)
                    (T X)))
          (RETURN Y])

(ALLCALLS
  [LAMBDA (FN TREELST)
    (PROG (ALLCLLS)
          [MAPC (COND
                  ((ATOM TREELST)
                    (CDR LAST-PRINTSTRUCTURE))
                  (T TREELST))
                (FUNCTION (LAMBDA (TREE)
                    (ALLCALLS1 FN TREE]
          (RETURN (DREVERSE ALLCLLS])

(ALLCALLS1
  [LAMBDA (FN TR)
    (PROG (A B)
          (SETQ A (CAR TR))
      LP  [COND
            ((NULL (SETQ TR (CDR TR)))
              (RETURN ALLCLLS))
            ((EQ (SETQ B (CAR TR))
                 FN)
              (SETQ ALLCLLS (CONS A ALLCLLS))
              (GO LP))
            ((ATOM B)
              (GO LP))
            ((EQ (CAR B)
                 FN)
              (SETQ ALLCLLS (CONS A ALLCLLS]
          (ALLCALLS1 FN B)
          (GO LP])
)
  (RPAQ LAST-PRINTSTRUCTURE)
  (RPAQ YESFNS)
  (RPAQ NOFNS)
  (RPAQ NOTRACEFNS)
  (RPAQ PRDEPTH 7)
  (RPAQQ INVISIBLEVARS
	 ($$VAL $$TEM $$LST1 $$LST2 $$LST3 $$LST4 MACROX MACROY MACROZ MACROW 
		MACROF MACROF2))
  (FIRSTFN)
  (LASTFN)
  [RPAQQ PRSTRUCBLOCKS
	 ((ALLCALLS ALLCALLS ALLCALLS1 (LOCALFREEVARS ALLCLLS))
	  (TREEPRINTBLOCK TREEPRINT TREEPRINT1 VARPRINT VARPRINT1 VARPRINT1A 
			  VARPRINT2 (ENTRIES TREEPRINT VARPRINT VARPRINT1A)
			  (GLOBALVARS INVISIBLEVARS))
	  (PROGSTRUCBLOCK PRINTSTRUCTURE PROGSTRUC PRGSTRC PRGSTRC1 PRNCONC 
			  NOTFN CALLS CALLS1 CALLS2 MAKELIST PRGETD
			  (ENTRIES PRINTSTRUCTURE CALLS)
			  (LOCALFREEVARS N DONELST TREEFNS VARSFLG D CALLSFLG 
					 FN VARS1 VARS2 EXPRFLG)
			  (GLOBALVARS PRDEPTH INVISIBLEVARS)
			  (SPECVARS EXP FN ARGS)
			  (BLKLIBRARY GETP]
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
  (BLOCK: ALLCALLS ALLCALLS ALLCALLS1 (LOCALFREEVARS ALLCLLS))
  (BLOCK: TREEPRINTBLOCK TREEPRINT TREEPRINT1 VARPRINT VARPRINT1 VARPRINT1A 
	  VARPRINT2 (ENTRIES TREEPRINT VARPRINT VARPRINT1A)
	  (GLOBALVARS INVISIBLEVARS))
  (BLOCK: PROGSTRUCBLOCK PRINTSTRUCTURE PROGSTRUC PRGSTRC PRGSTRC1 PRNCONC 
	  NOTFN CALLS CALLS1 CALLS2 MAKELIST PRGETD (ENTRIES PRINTSTRUCTURE 
							     CALLS)
	  (LOCALFREEVARS N DONELST TREEFNS VARSFLG D CALLSFLG FN VARS1 VARS2 
			 EXPRFLG)
	  (GLOBALVARS PRDEPTH INVISIBLEVARS)
	  (SPECVARS EXP FN ARGS)
	  (BLKLIBRARY GETP))
]
(DECLARE: DONTCOPY
  (FILEMAP (NIL (652 24026 (PRINTSTRUCTURE 664 . 3849) (TREEPRINT 3853 . 4394)
(TREEPRINT1 4398 . 4595) (VARPRINT 4599 . 5711) (VARPRINT1 5715 . 6396) (
VARPRINT1A 6400 . 6733) (VARPRINT2 6737 . 7047) (PROGSTRUC 7051 . 8525) (PRGSTRC
8529 . 12269) (PRGSTRC1 12273 . 13472) (PRNCONC 13476 . 13672) (NOTFN 13676
. 15893) (CALLS 15897 . 17017) (CALLS1 17021 . 21518) (CALLS2 21522 . 21686)
(MAKELIST 21690 . 22016) (VARS 22020 . 22081) (FREEVARS 22085 . 22148) (FIRSTFN
22152 . 22416) (LASTFN 22420 . 22642) (PRGETD 22646 . 23218) (ALLCALLS 23222
. 23536) (ALLCALLS1 23540 . 24023)))))
STOP
