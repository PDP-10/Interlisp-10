(FILECREATED "28-SEP-74 18:26:06" UTILITY.;3 9890   

     changes to:  WHOCALLS1

     previous date: "13-SEP-74 04:22:10" UTILITY.;2)


  (LISPXPRINT (QUOTE UTILITYCOMS)
	      T T)
  (RPAQQ UTILITYCOMS ((FNS * UTILITYFNS)))
  (RPAQQ UTILITYFNS
	 (MAPLITERALS WHOCALLS WHOBINDS WHOUSESFREE WHOCALLS0 WHOCALLS1 CPLISTS 
		      CPLISTSM FILCPY HOSTEST COPYFILES COPYFILES1 DELFILES))
(DEFINEQ

(MAPLITERALS
  [LAMBDA (DEF MAPFN)
    [COND
      ((LITATOM DEF)
	(SETQ DEF (GETD (OR (GETP DEF (QUOTE BROKEN))
			    DEF]
    (SELECTQ (FNTYP DEF)
	     ((CEXPR CEXPR* CFEXPR CFEXPR* SEXPR SEXPR*)
	       (PROG ((ADR (FIRSTLIT DEF))
		      (END (LASTLIT+1 DEF))
		      LST)
		 LP  (COND
		       ((EQP ADR END)
			 (RETURN LST)))
		     (APPLY* MAPFN (FNOPENRA DEF ADR))
		     (SETQ ADR (ADD1 ADR))
		     (GO LP)))
	     (QUOTE (NOT ARRAY])

(WHOCALLS
  [LAMBDA (X FILES)

          (* Prints the names of any function that references FN, i.e. 
          for which FN appears in its literals.
          Thus FN can also be the name of a variable and WHOCALLS 
          functions like WHOREFERENCES. For more specific information 
          abut vriabes, see WHOBINDS or WHOUSESFREE.)


    (WHOCALLS0 X (QUOTE WHOCALLS1)
	       FILES])

(WHOBINDS
  [LAMBDA (X FILES)                             (* Prints names of all functions
                                                in system which bind X.)
    (WHOCALLS0 X [FUNCTION (LAMBDA (X DEF)
		   (MEMB X (CAR (VARS DEF]
	       FILES])

(WHOUSESFREE
  [LAMBDA (X FILES)

          (* Prints names of all functions in system which uses X 
          freely, either referencing or setting.)


    (WHOCALLS0 X [FUNCTION (LAMBDA (X DEF)
		   (FMEMB X (FREEVARS DEF]
	       FILES])

(WHOCALLS0
  [LAMBDA (X DOFN FILES)

          (* Prints the names of any function that references FN, i.e. 
          for which X appears in its literals.
          Thus X can also be the name of a variable and WHOCALLS 
          functions like WHOREFERENCES. For more specific information 
          abut vriabes, see WHOBINDS or WHOUSESFREE.)


    (PROG (FNS TEM)
          [MAPC (COND
		  ((NULL FILES)
		    FILELST)
		  ((EQ FILES T)
		    (APPEND FILELST SYSFILES))
		  (T FILES))
		(FUNCTION (LAMBDA (FILE)
		    [MAPC (SETQ FNS (FILEFNSLST FILE))
			  (FUNCTION (LAMBDA (FN)
			      (COND
				((AND (SETQ TEM (GETD FN))
				      (APPLY* DOFN X TEM FN))
				  (PRIN2 FN T T)
				  (PRIN1 (QUOTE ,)
					 T]
		    (MAPC [CAR (PACK (LIST FILE (QUOTE BLOCKS]
			  (FUNCTION (LAMBDA (FN)
			      (COND
				((AND (SETQ FN (CAR FN))
				      (NOT (FMEMB FN FNS))
				      (SETQ TEM (GETD FN))
				      (APPLY* DOFN X TEM FN))
				  (PRIN2 FN T T)
				  (PRIN1 (QUOTE ,)
					 T]
          (TERPRI T])

(WHOCALLS1
  [LAMBDA (X DEF)
    (COND
      ((NULL DEF))
      ((EXPRP DEF)
	(EDITFINDP DEF X))
      ((OR (CCODEP DEF)
	   (SWPARRAYP DEF))
	(PROG ((ADR (FIRSTLIT DEF))
	       (END (LASTLIT+1 DEF))
	       Y Z)
	  LP  (COND
		((EQP ADR END)
		  (RETURN))
		((OR (EQ X (SETQ Y (FNOPENRA DEF ADR)))
		     (EQ X (FNOPENRD DEF ADR)))
		  (RETURN T)))
	      (COND
		((AND [COND
			((LITATOM Y)
			  (GENSYM? Y))
			((LISTP Y)
			  (GENSYM? (SETQ Y (CAR Y]
		      (WHOCALLS1 X (GETD Y)))
		  (RETURN T)))
	      (SETQ ADR (ADD1 ADR))
	      (GO LP])

(CPLISTS
  [LAMBDA (X Y)                                 (* Compares two lists and prints
                                                differences)
    (RESETFORM (PRINTLEVEL 1)
	       (PROG (FIN)
		     (COND
		       ((EQUAL X Y)
			 (RETURN NIL)))
		     (COND
		       ((OR (NLISTP X)
			    (NLISTP Y))
			 (PRINT X T T)
			 (PRINT Y T T)
			 (GO FIN)))
		     (PRIN1 (QUOTE "(")
			    T)                  (* Print list X by comparison 
                                                with list Y)
		     (CPLISTSM X Y)
		     (PRIN1 (QUOTE ")")
			    T)
		     (TERPRI T)
		     (PRIN1 (QUOTE "(")
			    T)                  (* Do same for other list)
		     (CPLISTSM Y X)
		     (PRIN1 (QUOTE ")")
			    T)
		     (TERPRI T)
		 FIN (RETURN T])

(CPLISTSM
  [LAMBDA (A B)
    (PROG (X Y FLAG DOTFLAG L1 X1 Y1)
          (SETQ X1 A)
          (SETQ Y1 B)
      L1  (COND
	    ((NOT DOTFLAG)
	      (SETQ X (CAR X1))
	      (SETQ Y (CAR Y1)))
	    (T (SETQ X X1)
	       (SETQ Y Y1)))
          (COND
	    (FLAG (PRIN1 (COND
			   (DOTFLAG (QUOTE " . "))
			   (T (QUOTE " ")))
			 T)))
          (COND
	    ((EQUAL X Y)                        (* If two sublists are the same 
                                                just type "&")
	      (PRIN2 (COND
		       ((ATOM X)
			 X)
		       (T (QUOTE &)))
		     T T))
	    ((OR (NLISTP X)
		 (NLISTP Y))

          (* If they are unequal and one is not a list let PRIN2 type 
          out something (atom or list))


	      (PRIN2 X T T))
	    (T (PRIN1 (QUOTE "(")
		      T)                        (* Otherwise print "()" and 
                                                subanalyze)
	       (CPLISTSM X Y)
	       (PRIN1 (QUOTE ")")
		      T)))
          (SETQ FLAG T)                         (* Prints "--" if lists are of 
                                                different lengths;
                                                otherwise just CDR)
          (COND
	    (DOTFLAG (RETURN NIL)))
          (COND
	    ((NULL (CDR X1))
	      (RETURN NIL)))
          (SETQ DOTFLAG (NLISTP (CDR X1)))
          (COND
	    ((NULL (CDR Y1))                    (* If y-list runs out first 
                                                print tail of x-list 
                                                appropriately)
	      (COND
		(DOTFLAG (PRIN1 (QUOTE " . ")
				T)
			 (PRIN2 (COND
				  ((ATOM (CDR X1))
				    (CDR X1))
				  (T (QUOTE &)))
				T T))
		((NULL (CDDR X1))
		  (SPACES 1 T)
		  (PRIN2 (COND
			   ((ATOM (CADR X1))
			     (CADR X1))
			   (T (QUOTE &)))
			 T T))
		(T (PRIN1 (QUOTE " --")
			  T)))
	      (RETURN NIL)))
          (SETQ X1 (CDR X1))
          (SETQ Y1 (CDR Y1))
          (GO L1])

(FILCPY
  [LAMBDA (OP FROMFILES TOFILES LOGIN REMHOST)
    (PROG (A N DIR USER PASS ACCT)
          [COND
	    ((AND (NEQ OP (QUOTE GET))
		  (NEQ OP (QUOTE SEND)))
	      (RETURN NIL))
	    [[NULL (HOSTEST (OR REMHOST (SETQQ REMHOST BBNA]
	      (RETURN (CONS REMHOST (QUOTE (not up]
	    ((NULL LOGIN)
	      (PRIN1 "Enter LOGIN info:" T)
	      (TERPRI)
	      (PRIN1 " (USERNAME) " T)
	      (SETQ USER (RATOM T T))
	      (PRIN1 " (PASSWORD) " T)
	      (SETQ PASS (RATOM T T))
	      (PRIN1 " (ACCOUNT #) " T)
	      (SETQ ACCT (RATOM T T)))
	    (T (SETQ USER (CAR LOGIN))
	       (SETQ PASS (CADR LOGIN))
	       (SETQ ACCT (CADDR LOGIN]
          (SETQ LOGIN (CONCAT USER " " PASS " " ACCT))
          [COND
	    ((ATOM FROMFILES)
	      (SETQ FROMFILES (LIST FROMFILES]
          (COND
	    [(EQ (CHCON1 (SETQ A (CAR FROMFILES)))
		 60)
	      [SETQ DIR (SUBSTRING A 1 (SETQ N (STRPOS ">" A]
	      (SETQ FROMFILES (CONS (SUBSTRING A (ADD1 N))
				    (CDR FROMFILES]
	    (T (SETQQ DIR "")))
          (COND
	    ((NULL TOFILES)
	      (SETQ TOFILES FROMFILES)))
          [COND
	    ((ATOM TOFILES)
	      (SETQ TOFILES (LIST TOFILES]
          (SUBSYS (QUOTE FTP)
		  (CONCAT "CONN " REMHOST "
LOGIN " LOGIN "
TENEX
QUIT
"))
          [MAP2C FROMFILES TOFILES
		 (FUNCTION (LAMBDA (FROM TO)
		     (COND
		       ((EQ OP (QUOTE GET))
			 (SUBSYS T (CONCAT OP " " DIR FROM "
" TO "  QUIT
")))
		       (T (SUBSYS T (CONCAT OP " " DIR FROM "  " TO "
QUIT
"]
          (SUBSYS T "BYE
QUIT
"])

(HOSTEST
  [LAMBDA (H N)
    (PROG ((NAME (QUOTE (NET:. BBNB -1;T)))
	   (W (OR (NUMBERP N)
		  5))
	   JFN)
          (FRPLACA (CDR NAME)
		   H)
          (SETQ NAME (PACK NAME))
          (OR (NLSETQ (OPENF NAME -33957019648))
	      (RETURN NIL))
          (SETQ JFN (OPNJFN NAME))
      WAIT(RETURN (PROG1 (SELECTQ (LOC (ASSEMBLE NIL
					         (CQ (VAG JFN))
					         (JSYS 145Q)
                                                (* GDSTS)
					         (MOVE 1 , 2)
					         (LSH 1 , -40Q)))
				  [6 (COND
				       ((NEQ W 0)
					 (SETQ W (SUB1 W))
					 (DISMISS 1000)
					 (GO WAIT]
				  ((7 11 12)
				    T)
				  NIL)
			 (CLOSEF NAME])

(COPYFILES
  [LAMBDA (DIR)

          (* Copies highest version of all symbolic and compiled files 
          from DIR (or <NEWLISP>) that do not appear in connected 
          directory.)


    (OR DIR (SETQQ DIR <NEWLISP>))
    (MAPC [APPEND [FILDIR (PACK (LIST DIR (QUOTE *.;0]
		  (FILDIR (PACK (LIST DIR (QUOTE *.COM;0]
	  (FUNCTION (LAMBDA (FL)
	      (PROG (TEM)
		    (COND
		      ([NULL (INFILEP (SETQ TEM (NAMEFIELD FL T]
			(COPYFILES1 FL))
		      ((NOT (EQUAL (FILEDATE TEM)
				   (FILEDATE FL)))
			(COPYFILES1 FL T])

(COPYFILES1
  [LAMBDA (FILE FLG)
    (TENEX (CONCAT "COP" FILE "" (NAMEFIELD FILE T)
		   (COND
		     (FLG "")
		     (T "
"])

(DELFILES
  [LAMBDA (DIR)

          (* goes through connect directory and compaes filedates with 
          other directory, and deletes all ssmbolic and compiiled 
          versions if date of latest symbolic agress with that in 
          other directory)


    (MAPC
      (FILDIR (QUOTE *.;0))
      (FUNCTION (LAMBDA (X)
	  (PROG (TEM)
	        (AND (SETQ TEM (FILEDATE X))
		     [EQUAL TEM (FILEDATE (PACK (LIST (OR DIR (QUOTE <NEWLISP>))
						      (NAMEFIELD X T]
		     (SETQ TEM (NAMEFIELD X))
		     (MAPC (PRINT [NCONC [FILDIR (PACK (LIST TEM (QUOTE .;*]
					 (FILDIR (PACK (LIST TEM (QUOTE .COM;*]
				  T T)
			   (FUNCTION DELFILE])
)
(DECLARE: DONTCOPY
  (FILEMAP (NIL (398 9866 (MAPLITERALS 410 . 874) (WHOCALLS 878 . 1284) (WHOBINDS
1288 . 1544) (WHOUSESFREE 1548 . 1797) (WHOCALLS0 1801 . 2847) (WHOCALLS1
2851 . 3426) (CPLISTS 3430 . 4215) (CPLISTSM 4219 . 6235) (FILCPY 6239 . 7797)
(HOSTEST 7801 . 8492) (COPYFILES 8496 . 9047) (COPYFILES1 9051 . 9187) (DELFILES
9191 . 9863)))))
STOP
