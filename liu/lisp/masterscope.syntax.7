meta-phrases are in <angle brackets>; optional phrases in [square brackets]
noise words (i.e. can be omitted) are in lower case
*------------------------------------------------------------------*
|a <command> is:                                                   |
|                                                                  |
|  [RE]ANALYZE <functions>                                         |
|  ERASE <functions>                                               |
|  show PATHS <pathoptions>                                        |
|  <set> {<relation>!IS!ARE} <set>                                 |
|  EDIT where <functions> [<relation> <set>] [ - <edit commands>]  |
|  SHOW where <functions> <relation> <set>                         |
|  CHECK <files>						   |
|  FOR <variable> <set> <i.s. opr> <expression>			   |
|------------------------------------------------------------------|
|a <set> is (at least one of):                                     |
|a determiner  + a type           + a specification                |
|                                                                  |
| THE           FUNCTIONS           [']{atom!list}                 |
| ANY           VARIABLES           @ <pred>                       |
| WHICH         PROPERTIES          IN <expression>                |
| WHO           RECORDS             <relation>ING <set>            |
|               FIELDS              <relation>ED {BY!IN} <set>     |
|               FILES		    THAT <relation> <set>	   |
|				    LIKE <edit-pattern>            |
|				    ON <files>			   |
| 		FIELDS OF <records>				   |
|		<blockword> {ON <files>!OF <functions>} 	   |
| <functions>, <files>, etc. are <set>s whose type is implied.     |
|------------------------------------------------------------------|
|a <relation> is a verb and optional modifier:                     |
| verbs:                  modifiers (anywhere after the verb):     |
|  CALL            ...    SOMEHOW                                  |
|  BIND            ...    as an ARGUMENT!LOCALLY                   |
|  USE             ...    AS a {RECORD!PROPERTY!record FIELD} name |
|  USE		   ...	  AS a CLISP word		 	   |
|  USE             ...    FREELY!LOCALLY!GLOBALLY                  |
|  SET             ...    FREELY!LOCALLY!GLOBALLY                  |
|  SMASH           ...    FREELY!LOCALLY!GLOBALLY                  |
|  TEST            ...    FREELY!LOCALLY!GLOBALLY                  |
|  REFERENCE       ...    FREELY!LOCALLY!GLOBALLY                  |
|  FETCH							   |
|  REPLACE	*--------------------------------------------------|
|  CREATE	| <blockwords>: ENTRIES, GLOBALVARS, FREEVARS, 	   |
|  CONTAIN	|  SPECVARS, LOCALFREEVARS, BLKFNS or BLOCKFNS	   |
|------------------------------------------------------------------|
| <pathoptions>:          | abbreviations & synonyms:              |
|                         |                                        |
|   FROM <functions>      | FNS = FUNCTIONS  PROPS = PROPERTIES    |
|   TO <functions>        | VARS = VARIABLES                       |
|   AVOIDING <functions>  | (& singular FN, VARIABLE, etc)         |
|   NOTRACE <functions>   | FREE = FREELY    LOCAL = LOCALLY       |
|   SEPARATE <functions>  | GLOBAL = GLOBALLY                      |
|   LINELENGTH <number>   | AMONG = AVOIDING NOT                   |
|------------------------------------------------------------------|
|  <sets> may be joined by AND or OR or preceded by NOT.           |
|  Any command can be followed by OUTPUT <filename>.		   |
*------------------------------------------------------------------*
