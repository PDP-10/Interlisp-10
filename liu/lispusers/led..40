(FILECREATED "15-Jan-83 11:00:37" <DDYER>LED..37 32994  

      previous date: " 4-JAN-83 11:04:28" <DDYER>LED..36)


(PRETTYCOMPRINT LEDCOMS)

(RPAQQ LEDCOMS [(DECLARE: DONTCOPY (FILES (SYSLOAD COMPILED FROM VALUEOF (FILENAMEFIELD (INPUT)												     |
											(QUOTE 												     |
											DIRECTORY)))												     |
					  EDITHIST))												     |
	(FILES (SYSLOAD COMPILED FROM VALUEOF (FILENAMEFIELD (INFILE)
							     (QUOTE DIRECTORY)))
	       PRINTOPT SCREENOP)
	(FNS BRACIFY DOLEDDISP EQUALEV GETAIL HLPRINT MAKEDREK PPMLOBJ PRINTCT PRINTDC PRINTDREK 
	     PRINTROB REPRINTDREK SUBDIVIDE TAILPOS)
	(DECLARE: DONTCOPY (RECORDS DREK))
	(EDITHIST * LEDEDITHIST)
	(USERMACROS BKP CC CLR CT D DOF DON G LINES NXP OK PB PL PO RALL RT TRUNC PPLINES)
	(LISPXMACROS PB PL)
	(VARS (KILLRING)
	      (LBRACE (QUOTE {))
	      (RBRACE (QUOTE }))
	      (LEDTLEV 1)
	      (LEDLINES 20)
	      (LEDPPLINES 6)
	      (LEDRECALC)
	      (LEDLINELENGTH (IDIFFERENCE TTYLINELENGTH 8)))
	(IFPROP HELP PB PL RT CT DON DOF CC CLR)
	(ADDVARS (PROMPTCHARFORMS (DOLEDDISP))
		 (DISPON)
		 (DREKDB)
		 (REUSEDREK))
	(BLOCKS (LED PPMLOBJ SUBDIVIDE EQUALEV HLPRINT MAKEDREK PRINTCT PRINTDC PRINTDREK PRINTROB 
		     REPRINTDREK TAILPOS DOLEDDISP (ENTRIES DOLEDDISP PRINTCT)
		     (BLKAPPLYFNS HLPRINT))
		(BRACIFY BRACIFY GETAIL (ENTRIES BRACIFY)))
	(DECLARE: DONTCOPY EVAL@COMPILE
		  (GLOBALVARS DISPON DREKDB REUSEDREK LEDTLEV LEDRECALC LEDLINES CLINE DLINE MODIFIED 
			      LEDPPLINES DISPLAYTERMP CURRENTSCREEN LEDLINELENGTH SOMEPRINT)
		  (CONSTANTS LBRACE RBRACE)
		  (P (CHECKIMPORTS (PACKFILENAME (QUOTE NAME)
						 (QUOTE SCREENOP)
						 (QUOTE VERSION)
						 NIL
						 (QUOTE BODY)
						 (INPUT))
				   T])
(DECLARE: DONTCOPY 
(FILESLOAD (SYSLOAD COMPILED FROM VALUEOF (FILENAMEFIELD (INPUT)
							 (QUOTE DIRECTORY)))
	   EDITHIST)
)
(FILESLOAD (SYSLOAD COMPILED FROM VALUEOF (FILENAMEFIELD (INFILE)
							 (QUOTE DIRECTORY)))
	   PRINTOPT SCREENOP)
(DEFINEQ

(BRACIFY
  [LAMBDA (P)                                               (* DD: " 8-Jul-80 01:35")
                                                            (* Prints the structural tree down to here on the edit 
							    chain)
    (PROG (X L Y Z)
          (SETQ Z (CAR P))
          [SETQ L (COND
	      ((NULL (CDDR P))
		(CONS (CADR P)
		      NIL))
	      (T (BRACIFY (CDR P]
          (SETQ X (APPEND (CAR L)))
          (SETQ Y (FMEMB Z X))
          [COND
	    [(NEQ Y NIL)
	      (FRPLACA Y LBRACE)
	      (FRPLACD Y (CONS RBRACE (CDR Y]
	    (T (SETQ X (GETAIL X Z))
	       (SETQ Z (APPEND (LIST (QUOTE ...))
			       Z]
          (FRPLACA L X)
          (RETURN (CONS Z L])

(DOLEDDISP
  [LAMBDA NIL                                               (* DD: " 5-MAY-82 08:31")
    (COND
      ([AND DISPON (GETATOMVAL (QUOTE CURRENTSCREEN))
	    (COND
	      ((NEQ (GETATOMVAL (QUOTE DISPLAYTERMTYPE))
		    (QUOTE NOBIND))
		DISPLAYTERMTYPE)
	      (T (DISPLAYTERMP)))
	    (COND
	      ((EQ LISPXID (QUOTE *)))
	      (T (SETQ DREKDB NIL]
	(PRINTCT L)
	T)
      (T NIL])

(EQUALEV
  [LAMBDA (REC1 REC2 LEV)                                   (* DD: "21-DEC-81 12:23")
                                                            (* compares two lists down to LEV levels of CAR)
    (COND
      ((NLISTP REC1)
	(EQ REC1 REC2))
      ((NLISTP REC2)
	NIL)
      ((ZEROP LEV)
	T)
      ((EQUALEV (CAR REC1)
		(CAR REC2)
		(SUB1 LEV))                                 (* tail recursion)
	(EQUALEV (CDR REC1)
		 (CDR REC2)
		 LEV])

(GETAIL
  [LAMBDA (L B)                                             (* edited: "30-Dec-79 15:30")
    (PROG (A)
          (SETQ A (REVERSE L))
          (SETQ B (REVERSE B))
          (RETURN (do (COND
			[(NULL B)
			  (RETURN (APPEND (DREVERSE A)
					  (LIST LBRACE (QUOTE ...)
						RBRACE]
			((NEQ (CAR A)
			      (CAR B))
			  (RETURN L)))
		      (SETQ A (CDR A))
		      (SETQ B (CDR B])

(HLPRINT
  [LAMBDA (OB)                                              (* DD: "19-JUL-82 23:57")

          (* print a highlighted object, using the terminal's highlight capabilities and also substituting square brackets for
	  parens if the object is a list, and substituting @ for &)


    (SCREENOP (QUOTE SETHIGHLIGHT))
    [COND
      ((LISTP OB)
	(PRIN3 "[")
	(SETQ OB (SUBST (QUOTE @)
			(QUOTE &)
			OB)))
      ((EQ OB (QUOTE &))
	(SETQ OB (QUOTE @]
    [bind (X _ OB)
	  PT repeatwhile X do (SETQ PT (COND
				  ((LISTP X)
				    (CAR X))
				  (T X)))
			      (PRIN4 PT)
			      (SETQ X (COND
				  ((LISTP X)
				    (CDR X))
				  (T NIL)))
			      (COND
				((LISTP X)
				  (PRIN3 " "))
				((NULL X))
				(T (PRIN3 " . "]
    (AND (LISTP OB)
	 (PRIN3 "]"))
    (SCREENOP (QUOTE CLEARHIGHLIGHT])

(MAKEDREK
  [LAMBDA (OBJ ATTN PREVREC ISTAIL PLEV ACADR WIDTH)        (* DD: " 6-AUG-82 17:18")

          (* make a representation. PNCHARS is used to generate a representation in the style of things printed with 
	  PRINTLEVEL. If the result will not fit a line, various strategies are used to reduce its size)


    (OR WIDTH (SETQ WIDTH LEDLINELENGTH))
    (PROG (POS TRUNCPOS)
          (DECLARE (LOCALVARS POS ATPOS))
          (RETURN (COND
		    ((AND PREVREC (NULL LEDRECALC)
			  (NULL MODIFIED)
			  (EQUALEV OBJ (fetch (DREK OBJECT) of PREVREC)
				   (fetch (DREK PLEV) of PREVREC))
			  (SETQ ATPOS (TAILPOS ATTN OBJ))
			  (IGREATERP (SETQ POS (IDIFFERENCE ATPOS (fetch (DREK RESTPOS) of PREVREC)))
				     0)
			  (ILEQ ATPOS (fetch (DREK TRUNCPOS) of PREVREC)))
		      (create DREK using PREVREC ATTN _ ATTN POS _ POS NLINES _ 1))
		    (T (PROG ((POS (TAILPOS ATTN OBJ))
			      (THIS OBJ)
			      ITSIZE TRUNC (REST ISTAIL)
			      (FIRSTTIME T)
			      REALFORM CADRSIZE NEWCADRSIZE (OBJLEN (LENGTH OBJ)))
			     (OR PLEV (SETQ PLEV 3))

          (* CAUTION! this code does some destructive modifications to the list it is working on, which is YOUR PROGRAM.
	  "IT" is either your program or a copy. the flag FIRSTTIME indiates that it hasn't been copied yet.
	  SO is you tweak this, bewhere!)


			     (SETQ ITSIZE (PNCHARS THIS PLEV WIDTH NIL NIL WIDTH))
			     [COND
			       ((AND (IGREATERP ITSIZE WIDTH)
				     (ASSOC (QUOTE *)
					    THIS))          (* first attempt to shrink by removing comments)
				 (COND
				   (FIRSTTIME [SETQ THIS (APPEND THIS (CDR (LAST THIS]
                                                            (* this strange construct in case the list doesn't end 
							    with a list)
					      (SETQ FIRSTTIME NIL)))
				 (for (X SOMEPROGRESS) on THIS
				    when (EQ (CAR (LISTP (CAR X)))
					     (QUOTE *))
				    do (SETQ SOMEPROGRESS T)
				       (RPLACA X (QUOTE (*)))
				    finally (AND SOMEPROGRESS (SETQ ITSIZE
						   (PNCHARS THIS PLEV WIDTH NIL NIL WIDTH]
                                                            (* if necessary, shorten the representation be 
							    truncating the head or tail relative to the attention 
							    point)
			     [AND (ILEQ PLEV LEDTLEV)
				  (COND
				    (POS (for I from 4 by 4 as old POS by -4
					    while (AND (IGREATERP ITSIZE WIDTH)
						       (IGREATERP POS 4)
						       (LISTP (CDR THIS)))
					    do [RPTQ 4 (SETQ THIS (LISTP (CDR THIS]
					       (SETQ REST I)
					       (SETQ ITSIZE (PNCHARS THIS PLEV WIDTH NIL NIL WIDTH)))
					 (COND
					   ((IGREATERP ITSIZE WIDTH)
					     (for I from 1 first [SETQ THIS (COND
								     (FIRSTTIME (SETQ FIRSTTIME NIL)
										(REVERSE THIS))
								     (T (DREVERSE THIS]
								 (SETQ OBJLEN (IDIFFERENCE OBJLEN POS)
								   )
						while (AND (LISTP (CDR THIS))
							   (IGREATERP OBJLEN 1)
							   (IGREATERP (SETQ ITSIZE
									(PNCHARS THIS PLEV WIDTH NIL 
										 NIL WIDTH))
								      WIDTH))
						do (SETQ THIS (CDR THIS))
						   (SETQ TRUNC I)
						   (SETQ OBJLEN (SUB1 OBJLEN))
						finally (SETQ THIS (DREVERSE THIS]
			     [COND
			       ((IGREATERP ITSIZE WIDTH)    (* if still too large, start again with less deatailed 
							    representation)
				 (RETURN (MAKEDREK OBJ ATTN PREVREC ISTAIL (SUB1 PLEV)
						   (AND BINDPROP PLEV)
						   WIDTH]
			     (SETQ REALFORM (PNCHARS THIS PLEV WIDTH T))

          (* TEST FOR A BINDING FORM (PROG LAMBDA ..) WHICH IS BEING PRINTED AT A REDUCED SCALE, BUT WHICH HAS ROOM TO PRINT 
	  THE BINDINGS AT AN EXPANDED SCALE)


			     (AND FIRSTTIME BINDPROP ACADR (LISTP REALFORM)
				  (NEQ (SETQ CADRSIZE (PNCHARS (CADR REALFORM)
							       NIL NIL NIL T))
				       (SETQ NEWCADRSIZE (PNCHARS (CADR THIS)
								  ACADR WIDTH NIL NIL WIDTH)))
				  (ILEQ (IDIFFERENCE (IPLUS NEWCADRSIZE ITSIZE)
						     CADRSIZE)
					WIDTH)
				  (RPLACA (CDR REALFORM)
					  (PNCHARS (CADR THIS)
						   ACADR WIDTH T)))
			     (SETQ OBJLEN (LENGTH OBJ))
			     (RETURN (create DREK smashing (OR (PROG1 REUSEDREK (SETQ REUSEDREK NIL))
							       (create DREK))
							   OBJECT _ OBJ ATTN _ ATTN REP _ REALFORM 
							   POS _ POS RESTPOS _(COND
							     ((AND (NEQ REST ISTAIL)
								   (FIXP REST))
							       REST)
							     (T 0))
							   TRUNCPOS _(COND
							     ((FIXP TRUNC)
							       (IDIFFERENCE OBJLEN TRUNC))
							     (T OBJLEN))
							   TRUNC _(COND
							     ((FIXP TRUNC)
							       (CONCAT " -" TRUNC "-"))
							     (TRUNC "..")
							     ((LISTP OBJ)
							       ")")
							     (T " "))
							   REST _(COND
							     [(FIXP REST)
							       (COND
								 ((EQ REST ISTAIL)
								   (CONCAT "." REST ". "))
								 (T (CONCAT "-" REST "- "]
							     (REST "..")
							     ((LISTP OBJ)
							       " (")
							     (T "  "))
							   PLEV _ PLEV NLINES _ 1])

(PPMLOBJ
  [LAMBDA (DREK)                                            (* DD: " 7-JUN-82 15:40")
    (PROG ((REST (fetch (DREK REST) of DREK)))
          (DECLARE (LOCALVARS REST))
          (SCREENOP (QUOTE SETCURSOR)
		    0 DLINE)
          (SCREENOP (QUOTE CLEARREST))
          (COND
	    ((EQ (NTHCHARCODE REST 2)
		 (CHARCODE %())
	      (PRIN3 ">>")
	      (PRIN3 REST))
	    (T (PRIN3 (fetch (DREK REST) of DREK))
	       (PRIN3 "> ")))
          (PPOBJ (fetch (DREK REP) of DREK)
		 T
		 (IPLUS 2 (NCHARS REST))
		 NIL LEDLINELENGTH T (fetch (DREK SQUEEZE) of DREK)
		 T)
          (PRIN3 (fetch (DREK TRUNC) of DREK))
          (TERPRI])

(PRINTCT
  [LAMBDA (LL)                                              (* DD: " 4-JAN-83 11:03")

          (* printct prints a structured context display of the current edit envitornment. Each line of the display represents
	  the attention point of the editor, some number of CARS up the edit chain. The attention point of each line is 
	  highlighted, and expanded in greater detail on the line below.)


    (RESETLST (RESETSAVE (OUTPUT T))
	      (RESETSAVE LEDLINELENGTH (IDIFFERENCE TTYLINELENGTH 8))
	      [RESETSAVE (SETLINELENGTH (IMIN 126 (IPLUS LEDLINELENGTH LEDLINELENGTH]
	      (RESETSAVE CLINE 0)
	      (RESETSAVE DLINE 0)
	      [RESETSAVE MODIFIED (NEQ UNDOLST (CDR (FASSOC (QUOTE UndoAt)
							    DREKDB]
	      (RESETSAVE SOMEPRINT)
	      (PROG ((WHOLEOBJ (CAR (LAST LL)))
		     (LINES (IMAX (OR LEDLINES 4)
				  4))
		     (NLEVS (LENGTH LL))
		     REALDLINES)                            (* force a complete display if the context is clearly 
							    disjoint)
		    [COND
		      ((IGEQ NLEVS LINES)                   (* too many lines, so try to truncate the display 
							    semi-gracefully. We try to shorten the display in chunks
							    of LEDLINES/2)
			(SETQ LINES (IQUOTIENT LINES 2))
			(SETQ LINES (IPLUS LINES (IREMAINDER NLEVS LINES]
		    [OR (EQ (CDR (FASSOC (QUOTE WholeObject)
					 DREKDB))
			    WHOLEOBJ)
			(SETQ DREKDB (CONS (CONS (QUOTE WholeObject)
						 WHOLEOBJ]
		    (SETQ SOMEPRINT (COND
			((PRINTDC LL NIL LINES)
			  (QUOTE ALLPRINT))
			(T SOMEPRINT)))
		    [COND
		      (SOMEPRINT (SETQ CLINE (CDR (FASSOC (SUB1 DLINE)
							  DREKDB)))
				 [AND CLINE (SETQ REALDLINES (IPLUS DLINE (SUB1 (fetch (DREK NLINES)
										   of CLINE]
				 (OR (EQ SOMEPRINT (QUOTE ALLPRINT))
				     (SCREENOP (QUOTE SETCURSOR)
					       0 REALDLINES))
				 (SCREENOP (QUOTE CLEARREST))
				 (SCREENOP (QUOTE SETLOCK]
		    (for X on DREKDB when (AND (FIXP (CAAR X))
					       (IGEQ (CAAR X)
						     DLINE))
		       do (SETQ REUSEDREK (CDAR X))
			  (RPLACA X NIL))
		    (SETQ DREKDB (DREMOVE NIL DREKDB))
		    [COND
		      ((SETQ MODIFIED (FASSOC (QUOTE UndoAt)
					      DREKDB))
			(RPLACD MODIFIED UNDOLST))
		      (T (SETQ DREKDB (CONS (CONS (QUOTE UndoAt)
						  UNDOLST)
					    DREKDB]         (* remove extraneous lines from te data base)
		    (SCREENOP (QUOTE CLEARREST))            (* clear rest of screen)
		])

(PRINTDC
  [LAMBDA (LL LLP LEVEL)                                    (* DD: "18-JUL-82 21:15")
                                                            (* printdc ascends the edit chain and prints a 
							    representation of each point)
    (PROG ([ISTAIL (AND (TAILP (CAR LL)
			       (CADR LL))
			(IDIFFERENCE (LENGTH (CADR LL))
				     (LENGTH (CAR LL]
	   ALLPRINT)
          [COND
	    ((NULL LL)
	      NIL)
	    (T (PRINTDC (COND
			  [(AND (FIXP LEVEL)
				(ILEQ LEVEL 1)
				(IGREATERP (LENGTH LL)
					   1))
			    (CONS (CONS (LENGTH LL)
					(QUOTE (more cars above]
			  (T (CDR LL)))
			LL
			(AND LEVEL (SUB1 LEVEL)))
	       (PROG ((PREVREC (CDR (FASSOC DLINE DREKDB)))
		      [ATTN (COND
			      ((NLISTP LLP)
				NIL)
			      ((TAILP (CAR LLP)
				      (CAR LL))
				(CAR LLP))
			      ((LITATOM (CAR LLP))
				LASTAIL)
			      (T (AND (LISTP (CAR LL))
				      (FMEMB (CAR LLP)
					     (CAR LL]
		      PLEVVAL PLEV BINDPROP ACADR NEWREC)
		     (DECLARE (SPECVARS BINDPROP))
		     (SETQ BINDPROP (GETPROP (CAR (LISTP (CAR LL)))
					     (QUOTE INFO)))
		     [SETQ BINDPROP (OR (EQ BINDPROP (QUOTE BINDS))
					(FMEMB (QUOTE BINDS)
					       (LISTP BINDPROP]
		     (SETQ PLEV (fetch (DREK PLEV) of PREVREC))
		     (SETQ PLEVVAL (COND
			 ((AND (NULL LEDRECALC)
			       (NUMBERP PLEV)
			       (IGREATERP PLEV 1))
			   PLEV)
			 (T 3)))
		     (SETQ ACADR (AND BINDPROP (NUMBERP PLEV)
				      (ILESSP PLEV 3)
				      (ADD1 PLEV)))         (* save the time and expense of calling MAKEDREK if 
							    there is a previously painted line that is sure to be 
							    the same)
		     [COND
		       (LLP (SETQ ALLPRINT (PRINTDREK (SETQ NEWREC
							(MAKEDREK (CAR LL)
								  ATTN
								  (COND
								    ((EQ (fetch (DREK NLINES)
									    of PREVREC)
									 1)
								      PREVREC))
								  ISTAIL PLEVVAL ACADR LEDLINELENGTH))
						      DLINE DREKDB)))
		       (T                                   (* bottom display line)
			  (SETQ ALLPRINT (PRINTDREK (SETQ NEWREC
						      (SUBDIVIDE (IMIN (IDIFFERENCE LEDLINES DLINE)
								       LEDPPLINES)
								 (CAR LL)
								 NIL
								 (COND
								   ((NEQ (fetch (DREK NLINES)
									    of PREVREC)
									 1)
								     PREVREC))
								 ISTAIL PLEVVAL ACADR))
						    DLINE DREKDB]
		     (add DLINE 1]
          (RETURN ALLPRINT])

(PRINTDREK
  [LAMBDA (REC LINE DB)                                     (* DD: "18-JUL-82 21:23")
    (DECLARE (SPECVARS LINE REC))

          (* print a display reccord on the indicated line, and maintain a data base representing what is displayed.
	  If this line existed previously, attempt to incrementally update the display)


    (PROG (OLDREC ALLPRINT)
          [COND
	    ([AND (SETQ OLDREC (FASSOC LINE DB))
		  (EQUAL (fetch (DREK DERIVEDINFO) of REC)
			 (fetch (DREK DERIVEDINFO) of (CDR OLDREC]
	      (SETQ REUSEDREK REC))
	    (T (PROG (OB I (NLINES (fetch (DREK NLINES) of REC)))
		     (SETQ I (fetch (DREK POS) of REC))
		     (SETQ OB (fetch (DREK REP) of REC))
		     [COND
		       (LINE (OR DB (SCREENOP (QUOTE CLEAR)))
                                                            (* clear sreen if starting from scratch)
			     (SCREENOP (QUOTE SETCURSOR)
				       0 LINE)
			     (COND
			       (OLDREC                      (* incremental update)
				       (COND
					 [(EQ NLINES 1)
					   (COND
					     ((NEQ 1 (fetch (DREK NLINES) of (CDR OLDREC)))
					       (AND (SCREENOP (QUOTE OVERSTRIKEP))
						    (SCREENOP (QUOTE CLEARLINE)))
					       (PRIN3 (fetch (DREK REST) of REC))
					       (PRINTROB OB I)
					       (SETQ ALLPRINT T))
					     (T (SETQ ALLPRINT (REPRINTDREK (CDR OLDREC)
									    REC LINE]
					 (T (PPMLOBJ REC)))
				       (SETQ REUSEDREK (CDR OLDREC))
				       (RPLACD OLDREC REC))
			       (T (OR DB (NOT (SCREENOP (QUOTE OVERSTRIKEP)))
				      (SCREENOP (QUOTE CLEARLINE)))
				  (SETQ DREKDB (SETQ DB (CONS (CONS LINE REC)
							      DB)))
				  (COND
				    ((EQ NLINES 1)
				      (AND (SCREENOP (QUOTE OVERSTRIKEP))
					   (SCREENOP (QUOTE CLEARLINE)))
				      (PRIN3 (fetch (DREK REST) of REC))
				      (PRINTROB OB I)
				      (SETQ ALLPRINT T))
				    (T (PPMLOBJ REC]        (* print the rest of the OBJECT)
		 ]
          (RETURN ALLPRINT])

(PRINTROB
  [LAMBDA (OB I)                                            (* DD: "17-Sep-82 13:01")
    (DECLARE (USEDFREE REC))

          (* the cursor is positioned, the line is clear if required by overstrikep, we print the rest of the objects watching
	  only for the highlight position, marked by I)


    [repeatwhile OB do (BLKAPPLY* (COND												     |
				    ((AND I (EQ (SETQ I (SUB1 I))												     |
						0))												     |
				      (FUNCTION HLPRINT))												     |
				    (T (FUNCTION PRIN4)))												     |
				  (COND												     |
				    ((LISTP OB)												     |
				      (CAR OB))												     |
				    (T OB)))												     |
		       (COND
			 ((LISTP OB)
			   (COND
			     ((NULL (CDR OB)))
			     ((LISTP (CDR OB))
			       (PRIN3 " "))
			     (T (PRIN3 " . ")))
			   (SETQ OB (CDR OB)))
			 (T (SETQ OB]
    (OR (SCREENOP (QUOTE OVERSTRIKEP))
	(SCREENOP (QUOTE CLEARLINE)))
    (PRIN3 (fetch (DREK TRUNC) of REC))
    (TERPRI)
    (SETQ SOMEPRINT T])

(REPRINTDREK
  [LAMBDA (OLDREC REC LINE)                                 (* DD: "17-Sep-82 13:01")
    (DECLARE (SPECVARS REC))

          (* the cursor is positioned, the line is clear if required by overstrikep, we print the rest of the objects watching
	  only for the highlight position, marked by NEWA)


    (bind POSN_0
	  REALPOSN_-1
	  (OLDX _(fetch (DREK REP) of OLDREC))
	  (OLDA _(fetch (DREK POS) of OLDREC))
	  (NEWX _(fetch (DREK REP) of REC))
	  (NEWA _(fetch (DREK POS) of REC))
	  OLDREST REST PRINTFN PRINTOB OLDPRINTOB (CLEARP _(SCREENOP (QUOTE OVERSTRIKEP)))
       first [SETQ POSN (NCHARS (SETQ REST (fetch (DREK REST) of REC]
	     (COND
	       ((NOT (STREQUAL (SETQ OLDREST (fetch (DREK REST) of OLDREC))
			       REST))
		 (AND (NEQ REALPOSN 0)
		      (SCREENOP (QUOTE SETCURSOR)
				0 LINE)
		      (SETQ SOMEPRINT T))
		 (AND CLEARP (SCREENOP (QUOTE CLEARLINE)))
		 (PRIN3 REST)
		 (COND
		   ((OR CLEARP (NEQ (NCHARS OLDREST)
				    POSN))                  (* the number of chars in the leader changed, so we have
							    to reprint the whole line)
		     (PRINTROB NEWX NEWA)
		     (RETURN T)))
		 (SETQ REALPOSN POSN)))
       repeatwhile NEWX do [SETQ PRINTFN (COND
			       ((AND NEWA (EQ (SETQ NEWA (SUB1 NEWA))
					      0))
				 (FUNCTION HLPRINT))
			       (T (FUNCTION PRIN4]
			   (SETQ PRINTOB (COND
			       ((LISTP NEWX)
				 (CAR NEWX))
			       (T NEWX)))
			   (SETQ OLDPRINTOB (COND
			       ((LISTP OLDX)
				 (CAR OLDX))
			       (T OLDX)))
			   (AND OLDA (SETQ OLDA (SUB1 OLDA)))
			   [COND
			     ([OR (NOT (EQUAL OLDPRINTOB PRINTOB))
				  (AND (NEQ OLDA NEWA)
				       (OR (EQ NEWA 0)
					   (EQ OLDA 0]
			       (COND
				 ((NEQ POSN REALPOSN)
				   (SCREENOP (QUOTE SETCURSOR)
					     POSN LINE)
				   (SETQ SOMEPRINT T)
				   (SETQ REALPOSN POSN)))
			       (COND
				 ((OR CLEARP (NOT (EQUAL PRINTOB OLDPRINTOB)))
				   (AND CLEARP (SCREENOP (QUOTE CLEARLINE)))
				   (PRINTROB NEWX (AND NEWA (ADD1 NEWA)))
				   (RETURN T))
				 (T (BLKAPPLY* PRINTFN PRINTOB)))
			       (COND
				 ((NLISTP NEWX))
				 ((NULL (CDR NEWX)))
				 ((LISTP (CDR NEWX))
				   (PRIN3 " "))
				 (T (PRIN3 " . ")
				    (add REALPOSN 2)))
			       (add REALPOSN (PNCHARS PRINTOB NIL NIL NIL T]
			   (add POSN (PNCHARS PRINTOB NIL NIL NIL T)
				1)
			   [COND
			     ((LISTP NEWX)
			       (COND
				 ((NULL (CDR NEWX))
				   (add POSN -1))
				 ((AND (CDR NEWX)
				       (NLISTP (CDR NEWX)))
				   (add POSN 2]
			   (COND
			     ((LISTP NEWX)
			       (SETQ NEWX (CDR NEWX)))
			     (T (SETQ NEWX)))
			   (COND
			     ((LISTP OLDX)
			       (SETQ OLDX (CDR OLDX)))
			     (T (SETQ OLDX)))
			   (COND
			     ((OR (NEQ (NTYP NEWX)
				       (NTYP OLDX))
				  (NEQ (NULL NEWX)
				       (NULL OLDX)))        (* changing the tail of an list)
			       (COND
				 ((NEQ POSN REALPOSN)
				   [COND
				     ((NULL OLDX)

          (* this is the case where we did NOT print the last item in the old list, and the list has been extended by 
	  (N --))


				       (SETQ POSN (SUB1 POSN]
				   (AND NEWX (NLISTP NEWX)
					(add POSN -2))
				   (SCREENOP (QUOTE SETCURSOR)
					     POSN LINE)
				   (SETQ SOMEPRINT T)))
			       [COND
				 ((OR CLEARP OLDX)
				   (SCREENOP (QUOTE CLEARLINE]
			       (COND
				 ((NULL OLDX)
				   (PRIN3 " ")))
			       (COND
				 ((AND NEWX (NLISTP NEWX))
				   (PRIN3 ". ")))
			       (COND
				 [NEWX (PRINTROB NEWX (AND NEWA (ADD1 NEWA]
				 (T (PRIN3 (fetch (DREK TRUNC) of REC))
				    (TERPRI)))
			       (RETURN T])

(SUBDIVIDE
  [LAMBDA (NLINES INPUT ATTN PREVREC ISTAIL PLEV ACADR)     (* DD: "27-JUL-82 01:32")
    (COND
      ((ILEQ NLINES 1)
	(MAKEDREK INPUT ATTN PREVREC ISTAIL PLEV ACADR LEDLINELENGTH))
      ((AND PREVREC (NULL LEDRECALC)
	    (NULL MODIFIED)
	    (EQUALEV INPUT (fetch (DREK OBJECT) of PREVREC)
		     (fetch (DREK PLEV) of PREVREC)))
	(create DREK using PREVREC))
      (T (bind CREC LMARGIN SQ (LL _(ITIMES LEDLINELENGTH NLINES))
	       SIZE repeatuntil (ILESSP SIZE NLINES)
	    do (SETQ CREC (MAKEDREK INPUT ATTN PREVREC ISTAIL 4 ACADR LL))
	       [SETQ RESTSIZE (IPLUS 2 (NCHARS (fetch (DREK REST) of CREC]
	       (SETQ SIZE (PPOBJ (fetch (DREK REP) of CREC)
				 NIL RESTSIZE NIL LEDLINELENGTH NIL NIL))
	       (SETQ LL (IQUOTIENT (ITIMES LL 2)
				   3))
	    finally (AND (ILESSP (SETQ LL (PPOBJ (fetch (DREK REP) of CREC)
						 NIL RESTSIZE NIL LEDLINELENGTH NIL T))
				 NLINES)
			 (PROGN                             (* prefer squeezed if it fits)
				(SETQ SIZE LL)
				(SETQ SQ T)))
		    [PROGN (replace (DREK NLINES) of CREC with (COND
								 ((IGEQ SIZE 0)
								   (ADD1 SIZE))
								 (T 1]
		    (replace (DREK SQUEEZE) of CREC with SQ)
		    (RETURN CREC])

(TAILPOS
  [LAMBDA (X Y)                                             (* DD: "24-Dec-80 17:08")
    (AND X (for I from 1 as Q on Y while (NEQ X Q) do (COND
							((NULL Q)
							  (RETURN NIL)))
	      finally (RETURN I])
)
(DECLARE: DONTCOPY 
[DECLARE: EVAL@COMPILE 

(RECORD DREK (OBJECT ATTN . DERIVEDINFO)
	     [RECORD DERIVEDINFO ((REP . POS)
		      (NLINES . SQUEEZE)
		      (PLEV (RESTPOS . TRUNCPOS) . TRUNC) . REST])
]
)

(RPAQQ LEDEDITHIST (LED.LISP))
(DECLARE: DONTCOPY 

(ADDTOVAR EDITHISTALIST (LED.LISP ("27-May-81 12:09:40" DD: <DDYER>LED.LISP.57 (PRINTDC REPRINTDREK 
										      REPRINTLINE)
							(fixed some minor updating bugs with 
							       expressions ending in an atom, and a 
							       minor fix in the new hacks to 
							       emphasize bound variables lists))
				  (("15-DEC-81 03:08:36" . "26-Jun-81 18:48:35")
				   DD:
				   (LED.;2 . <DDYER>LED.LISP.58)
				   (LEDFNS LEDRECORDS LEDEDITHIST LEDUSERMACROS LEDLISPXMACROS 
					   LEDVARS LBRACE RBRACE DREK (PB HELP)
					   (PL HELP)
					   (RT HELP)
					   (CT HELP)
					   (DON HELP)
					   (DOF HELP)
					   (CC HELP)
					   (CLR HELP)
					   BKP CC CLR CT DOF DON G LINES NXP OK PB PL PO RALL RT 
					   TRUNC DOLEDDISP PRINTDC PRINTDREK LEDCOMS MAKEDREK)
				   (tweak for the vax))
				  (("17-FEB-82 03:09:56" . "15-DEC-81 03:32:00")
				   DD:
				   (/lisp/ddyer/lisp/init/LED.;6 . LED.;4)
				   (SUBDIVIDE PRINTCT REPRINTDREK MAKEDREK PRINTDC EQUALEV PRINTDREK 
					      OK DOLEDDISP PRINTROB REPRINTLINE LEDRECORDS DREK 
					      LEDCOMS LEDVARS)
				   (added code to prettyprint (with elision)
					  the bottom line of the isplay))
				  (("19-FEB-82 16:21:53" . "17-FEB-82 03:23:07")
				   DD:
				   (/lisp/ddyer/lisp/init/LED.;3 . /lisp/ddyer/lisp/init/LED.;7)
				   (REPRINTDREK PRINTROB REPRINTLINE HLPRINT MAKEDREK LINES PPLINES 
						DREK DOLEDDISP SUBDIVIDE PPMLOBJ LEDCOMS PRINTCT 
						PRINTDREK)
				   (converting to new tty driver))
				  ((" 7-MAY-82 03:25:46" . "21-FEB-82 18:29:26")
				   DD:
				   (/lisp/ddyer/lisp/init/LED.;3 . /lisp/ddyer/lisp/init/LED.;4)
				   (PRINTDC REPRINTDREK PPMLOBJ D DOLEDDISP CLR DOF OK RALL LEDCOMS 
					    MAKEDREK SUBDIVIDE)
				   (improvements to print -nn- at start and finish for tail lines))
				  (("18-JUL-82 19:19:35" . " 7-MAY-82 13:49:43")
				   DD:
				   (/lisp/ddyer/lisp/init/LED.;12 . /lisp/ddyer/lisp/init/LED.;4)
				   (OK DREK HLPRINT PRINTDREK PRINTROB REPRINTLINE PRINTDC SUBDIVIDE 
				       REPRINTDREK LEDCOMS PPMLOBJ DOLEDDISP MAKEDREK PRINTCT))
				  ("18-JUL-82 19:33:10" DD: /lisp/ddyer/lisp/init/LED.;13 (LEDCOMS)
							(added support for overstriking terminals, 
							       cleaned up and rationalized 
							       REPRINTDREK and its subordinates, 
							       added &<>@ exchange in HLPRINT))
				  ("18-JUL-82 21:34:55" DD: /lisp/ddyer/lisp/init/LED.;14
							(LEDCOMS HLPRINT PRINTCT PRINTDC PRINTDREK 
								 PRINTROB REPRINTDREK))
				  ("19-JUL-82 22:03:01" DD: /lisp/ddyer/lisp/init/LED.;15 (PRINTCT))
				  ("19-JUL-82 22:08:20" DD: /lisp/ddyer/lisp/init/LED.;16 (HLPRINT))
				  ("20-JUL-82 01:41:31" DD: /lisp/ddyer/lisp/init/LED.;17
							(PRINTCT HLPRINT REPRINTDREK))
				  ("26-JUL-82 20:42:02" DD: /lisp/ddyer/lisp/init/LED.;19
							(DOLEDDISP PRINTCT REPRINTDREK))
				  ("27-JUL-82 01:34:04" DD: /lisp/ddyer/lisp/ilisp/src/LED.;1
							(HLPRINT PRINTCT SUBDIVIDE))
				  ("27-JUL-82 03:30:58" DD: /lisp/ddyer/lisp/init/LED.;20
							(HLPRINT PRINTCT))
				  ("30-JUL-82 15:30:02" DD: /lisp/ddyer/lisp/init/LED.;21
							(DOLEDDISP MAKEDREK PRINTCT REPRINTDREK 
								   SUBDIVIDE))
				  (" 6-AUG-82 17:22:19" DD: /lisp/ddyer/lisp/init/LED.;22
							(MAKEDREK SUBDIVIDE))
				  (" 4-JAN-83 11:05:03" DD: /lisp/ddyer/lisp/init.4/LED.;2
							(DOLEDDISP MAKEDREK PRINTCT REPRINTDREK 
								   SUBDIVIDE))))
)

(ADDTOVAR USERMACROS (OK NIL (E (AND DISPON (SCREENOP (QUOTE CLEARLOCK)))
				T)
			 (ORIGINAL OK))
		     [TRUNC (N)
			    (E (PROGN (SETQ LEDRECALC T)
				      (SETQ LEDTLEV (OR N 2]
		     (CC NIL CLR (IF DISPON NIL CT))
		     [BKP NIL (IF DISPON BK ((ORIGINAL BK P]
		     [NXP NIL (IF DISPON NX ((ORIGINAL NX P]
		     (CT NIL (E (PRINTCT L)
				NIL))
		     (G (X)
			F X P)
		     (PL NIL (BIND (E (SETQ #1 L)
				      T)
				   (IF (NULL (CDR L))
				       NIL
				       (0 PL))
				   (E (PROGN (SETQ L #1)
					     (PRINTOPTIMUM (CAR L))
					     (TERPRI))
				      T)))
		     (RALL NIL MARK (BIND (E (SETQ #1 MAXLOOP)
					     T)
					  (E (SETQ MAXLOOP 99999)
					     T)
					  (LPQ F & (IF (LISTP (## 1))
						       NIL RAISE))
					  (E (SETQ MAXLOOP #1)
					     T))
			   __)
		     (PB NIL (BIND (E [PROGN (SETQ #1 L)
					     (COND ((NEQ NIL (CDR L))
						    (SETQ L (BRACIFY L]
				      T)
				   PL
				   (E (SETQ L #1)
				      T)))
		     (RT NIL (MBD (RETURN *)))
		     (PO NIL (E (PROGN (PRINTOPTIMUM (CAR L))
				       (TERPRI))
				T))
		     (DON NIL (E (SETQQ DISPON T)
				 T))
		     (DOF NIL (E (PROGN (SETQ DREKDB (SETQ DISPON NIL))
					(SCREENOP (QUOTE CLEARLOCK)))
				 T))
		     (CLR NIL (E (PROGN (SCREENOP (QUOTE CLEAR))
					(SETQQ DREKDB))
				 T))
		     [LINES (N)
			    (E (PROGN (SETQ LEDRECALC T)
				      (SETQ LEDLINES (OR (FIXP N)
							 20]
		     [PPLINES (N)
			      (E (PROGN (SETQ LEDRECALC T)
					(SETQ LEDPPLINES (OR (FIXP N)
							     6]
		     (D NIL (E (SETQ KILLRING (CONS (##)
						    KILLRING))
			       T)
			(:)
			1
			(IF DISPON NIL P)))

(ADDTOVAR EDITMACROS (D NIL (:)
			1 P)
		     (NXP NIL [ORR (NX)
				   (!NX (E (PRIN1 "> " T)
					   T))
				   ((E (PROGN (SETQQ COM NX)
					      (ERROR!]
			  P)
		     (BKP NIL [ORR (BK)
				   (!0)
				   ((E (PROGN (SETQQ COM BK)
					      (ERROR!]
			  P))

(ADDTOVAR EDITCOMSA CC CLR DOF G PO CT DON CC CC CC LINES D NXP BKP OK)

(ADDTOVAR EDITCOMSL TRUNC CC)

(ADDTOVAR COMPACTHISTORYCOMS NXP BKP)

(ADDTOVAR LISPXHISTORYMACROS [PB (MAPC LISPXLINE (FUNCTION (LAMBDA (X)
								   (PRINTBINDINGS
								     X
								     (AND (EQ LISPXID (QUOTE :))
									  LASTPOS]
			     [PL (COND (LISPXLINE (PRINTPROPS (CAR LISPXLINE)))
				       (T (QUOTE (E PL])

(RPAQQ KILLRING NIL)

(RPAQQ LBRACE {)

(RPAQQ RBRACE })

(RPAQQ LEDTLEV 1)

(RPAQQ LEDLINES 20)

(RPAQQ LEDPPLINES 6)

(RPAQQ LEDRECALC NIL)

(RPAQ LEDLINELENGTH (IDIFFERENCE TTYLINELENGTH 8))

(PUTPROPS PB HELP (prints a representation of the edit chain, with { } in the place of the attention 
			  point, which is expanded on the line below))

(PUTPROPS PL HELP (like PB, but prints everything instead of braces))

(PUTPROPS RT HELP (is an editmacro that imbeds current form in (RETURN &)))

(PUTPROPS CT HELP (manually cause display to be updated, showing context. See also DON DOF CC CLR))

(PUTPROPS DON HELP (enables the automatic display update in the lisp editor. actually, it just does
			    (SETQ DISPON T)
			    %. The actual tap that does the displaying is an entry on PROMPTCHARFORMS)
)

(PUTPROPS DOF HELP (correlary to DON, turns off the display update))

(PUTPROPS CC HELP (clears the old display and paints a fresh context display. This differs from CT in 
			  that it clears the display first))

(PUTPROPS CLR HELP (clears the display))

(ADDTOVAR PROMPTCHARFORMS (DOLEDDISP))

(ADDTOVAR DISPON )

(ADDTOVAR DREKDB )

(ADDTOVAR REUSEDREK )
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
(BLOCK: LED PPMLOBJ SUBDIVIDE EQUALEV HLPRINT MAKEDREK PRINTCT PRINTDC PRINTDREK PRINTROB REPRINTDREK 
	TAILPOS DOLEDDISP (ENTRIES DOLEDDISP PRINTCT)
	(BLKAPPLYFNS HLPRINT))
(BLOCK: BRACIFY BRACIFY GETAIL (ENTRIES BRACIFY))
]
(DECLARE: DONTCOPY EVAL@COMPILE 
(DECLARE: DOEVAL@COMPILE DONTCOPY

(ADDTOVAR GLOBALVARS DISPON DREKDB REUSEDREK LEDTLEV LEDRECALC LEDLINES CLINE DLINE MODIFIED 
	  LEDPPLINES DISPLAYTERMP CURRENTSCREEN LEDLINELENGTH SOMEPRINT)
)

(DECLARE: EVAL@COMPILE 

(RPAQQ LBRACE {)

(RPAQQ RBRACE })

(CONSTANTS LBRACE RBRACE)
)

(CHECKIMPORTS (PACKFILENAME (QUOTE NAME)
			    (QUOTE SCREENOP)
			    (QUOTE VERSION)
			    NIL
			    (QUOTE BODY)
			    (INPUT))
	      T)
)
(DECLARE: DONTCOPY
  (FILEMAP (NIL (2051 24724 (BRACIFY 2063 . 2795) (DOLEDDISP 2799 . 3217) (EQUALEV 3221 . 3710) (GETAIL 
3714 . 4137) (HLPRINT 4141 . 5014) (MAKEDREK 5018 . 10289) (PPMLOBJ 10293 . 11011) (PRINTCT 11015 . 
13548) (PRINTDC 13552 . 16093) (PRINTDREK 16097 . 18200) (PRINTROB 18204 . 19287) (REPRINTDREK 19291 .
 23113) (SUBDIVIDE 23117 . 24454) (TAILPOS 24458 . 24721)))))
STOP
