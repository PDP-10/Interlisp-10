
        PROMPTREMINDERS -- to be periodically reminded of things

File:		<lispusers>PromptReminders.tty
Revised: 	Feb 21, 1983, by JonL White


    Using the Interlisp facility of PROMPTCHARFORMS, one may be periodically 
"reminded" of important things by a message which is aggressively "winked" 
and "flashed" in the PROMPTWINDOW (or on primary output for systems without 
bitmap display, such as Interlisp-10 and Interlisp/VAX).   It will desist the
wink/flash "hassling" only after it has been acknowledged by user response, 
or after a pre-set interval of "hassling" time has elapsed.

    REMINDERS is a filepkg type, so that they may be easily saved on files,
and so that the general typed-definition facilities may be used.  On any file
which uses the REMINDERS filepkgcom, it is advisable to precede this command
with a  (FILES (SYSLOAD COMPILED FROM LISPUSERS) PROMPTREMINDERS)  command,
since this package is not in the initial Lisp loadup.   When initially defining
a reminder, it is preferable for the user to call SETREMINDER rather than 
PUTDEF;  but HASDEF is the accepted way to ask if some name currently defines 
a "reminder", and DELDEF is the accepted way to cancel an existing "reminder".

    In the first example below, the user wants to be reminded every 30 
minutes that he ought to be using MAKEFILE to save his work;  in the second 
example, he merely wants to be told once, at precisely 4:00PM to call home.
Examples:

    (SETREMINDER NIL (ITIMES 30 60) "Have you MADEFILE recently?")

    (SETREMINDER 'WOOF NIL "Don't forget to inform wife of dinner plans."
                 "8-Jan-83 4:00PM")




                            Functions 

    (SETREMINDER NAME PERIOD MESSAGE INITIALDELAY EXPIRATION)
            This will create and install a "reminder" with the name NAME 
        (NIL given for a name will be replaced by a gensym), which will 
        be executed every PERIOD number of seconds by winking the string
        MESSAGE into the prompt window (if MESSAGE is null, then NAME is
        winked).  "Winking" means alternately printing the message and 
        clearing the window in which it was printed, at a rate designed to 
        attract the eye's attention.  
            The first such execution will occur at PERIOD seconds after
        the call to SETREMINDER unless INITIALDELAY is non-NIL, in which
        case that time will be used; a fixp value for INITIALDELAY is
        interpreted as an offset from the time of the call to SETREMINDER,
        and a stringp value is interpreted as an absolute date/time string.
            If PERIOD is null, then the reminder is to be executed precisely
        once.  If EXPIRATION is non-null, then a fixp means that "expiration"
        number of seconds after the first execution, the timer will be
        deleted;  a stringp means a precise date/time at which to delete
        the timer.
            Optional 6th and 7th arguments  -- called REMINDINGDURATION and 
        WINKINGDURATION -- permit one to vary the amount of time spent in one 
        cycle of the wink/flash loop, and the amount of time spent winking 
        before initiating a "flash".  The attention-attracting action will 
        continue for REMINDINGDURATION seconds (default: 60), or until the 
        user types something on the keyboard; care is taken not to consume the 
        typed character *except* when it is a space (which is just tossed out).
        Type-ahead does not release the winking.  In case the user has become 
        too drowsy to notice the winking, then every WINKINGDURATION seconds 
        (default: 10) during the "reminding", the whole display videocolor 
        will be wagged back and forth a few times, which effects a most 
        obnoxious stimulus (for non-bitmap systems, this just types a <bell>).

            Returns the name (note above when NIL is supplied for the name).


    (ACTIVEREMINDERNAMES) 
        No arguments; self-explanatory.

    (REMINDER.NEXTREMINDDATE NAME)
        Returns the time (in GDATE format) at which the next reminding from 
        the named reminder will occur; NIL if NAME isn't a REMINDERS.
    (REMINDER.NEXTREMINDDATE NAME Date/Time.string)
        Sets the time at which the reminder is next to be executed.

    (REMINDER.EXPIRATIONDATE NAME)
        Returns the time (in GDATE format) at which the reminder will be
        automatically deleted.
    (REMINDER.EXPIRATIONDATE NAME Date/Time.string)
        Sets the expiration time.

    (INSPECTREMINDER NAME)
        In Interlisp-D, this will call INSPECT on the definition of the named 
        reminder; in other systems, it merely calls SHOWDEF.

