(FILECREATED "22-NOV-82 08:14:12" {SDR2020}PS:<DOLPHIN.LISPUSERS>TTYIO.;34 20485  

      changes to:  (FNS ASKITEM ASKITEMS)

      previous date: "15-OCT-82 10:43:01" {SDR2020}PS:<DOLPHIN.LISPUSERS>TTYIO.;33)


(PRETTYCOMPRINT TTYIOCOMS)

(RPAQQ TTYIOCOMS ((ADDVARS (GLOBALVARS EOL TTYIN-COMMAND-LINE TTYIO-TXT-FLG))
		  (VARS (TTYIN-COMMAND-LINE)
			(TTYIO-TXT-FLG T))
		  (INITVARS (EOL (CHARACTER (CHARCODE EOL))))
		  (RECORDS TXTBOX)
		  (FNS * TTYIOFNS)
		  (ADDVARS (GLOBALVARS TTYIN-COMMAND-LINE TTYIO-TXT-FLG)
			   (PRETTYPRINTMACROS (; . TTYIO/PRINT-TXT)))
		  (P (SETSYNTAX (QUOTE ;)
				(QUOTE (INFIX ALONE NOESC TTYIO/READ-TXT))
				FILERDTBL))
		  (USERMACROS GET;)
		  (ADVISE SPRINTT)))

(ADDTOVAR GLOBALVARS EOL TTYIN-COMMAND-LINE TTYIO-TXT-FLG)

(RPAQQ TTYIN-COMMAND-LINE NIL)

(RPAQQ TTYIO-TXT-FLG T)

(RPAQ? EOL (CHARACTER (CHARCODE EOL)))
[DECLARE: EVAL@COMPILE 

(RECORD TXTBOX (HEAD START OFFSET NCHARS FILE . REST)
	       HEAD _(QUOTE ;))
]

(RPAQQ TTYIOFNS (ASKFLE ASKFN ASKINT ASKITEM ASKITEMS ASKRL ASKYN DISPLAYHELP TTYINC 
			TTYIO/FILE/GET-TXT TTYIO/GET-TXT TTYIO/PRINT-TXT TTYIO/READ-TXT))
(DEFINEQ

(ASKFLE
  (LAMBDA (PROMPT MODE DEFAULT HELP NULFLG FILE)      (* rgs: "14-OCT-82 12:14")
    (OR MODE (SETQ MODE (QUOTE INPUT)))
    (AND DEFAULT (SETQ DEFAULT (SELECTQ MODE
					(INPUT (INFILEP DEFAULT))
					(OUTPUT (OUTFILEP DEFAULT))
					NIL)))
    (OR HELP (SETQ HELP "Please type the name of a file."))
    (SETQ PROMPT (APPEND (MKLIST (OR PROMPT "File: "))
			 (COND
			   (DEFAULT (LIST "[" DEFAULT "] ** "))
			   (T (QUOTE ("** "))))))
    (do (OR FILE (SETQ FILE (OR (CAR (TTYINC PROMPT NIL HELP (QUOTE FILE)))
				DEFAULT)))
       repeatuntil (COND
		     ((AND (NOT FILE)
			   NULFLG))
		     ((AND FILE (SETQ FILE (PACKFILENAME (QUOTE VERSION)
							 NIL
							 (QUOTE BODY)
							 FILE))
			   (SETQ FILE (SELECTQ MODE
					       (INPUT (INFILEP FILE))
					       (OUTPUT (OUTFILEP FILE))
					       NIL))))
		     (T (WRITE "Bad response. Please try again.")
			(CLEARBUF)
			(SETQ TTYIN-COMMAND-LINE NIL)
			(SETQ FILE NIL))))
    FILE))

(ASKFN
  (LAMBDA (PROMPT DEFAULT HELP SPLST FN)              (* rgs: " 6-Oct-82 23:53")

          (* * ASKFN prompts or a function name with TTYINC. SPLST (if given) is a list of suggested function
	  names. The user is allowed to type a LAMBDA expression.)


    (OR (FNTYP DEFAULT)
	(SETQ DEFAULT NIL))
    (SETQ SPLST (for x in SPLST collect x when (FNTYP x)))
    (COND
      ((NOT (OR HELP SPLST))
	(SETQ HELP "Please enter the name of a function.")))
    (SETQ PROMPT (APPEND (MKLIST (OR PROMPT "Function: "))
			 (COND
			   (DEFAULT (LIST "[" DEFAULT "] ** "))
			   (T (QUOTE ("** "))))))
    (do (OR FN (SETQ FN (OR (CAR (TTYINC PROMPT SPLST (OR HELP T)
					 (QUOTE (COMMAND STRING READ))))
			    DEFAULT)))
       repeatuntil (COND
		     ((FNTYP FN))
		     (T (WRITE "Sorry, " FN " is not a function. Please try again.")
			(CLEARBUF)
			(SETQ TTYIN-COMMAND-LINE NIL)
			(SETQ FN NIL))))
    FN))

(ASKINT
  (LAMBDA (PROMPT DEFAULT HELP LB UB NUMB)                     (* rgs: " 6-Apr-82 10:19")
    (OR HELP (SETQ HELP "Please enter an integer."))
    (COND
      ((NUMBERP LB)
	(SETQ LB (FIX LB)))
      (LB (WRITE "WARNING! Invalid lower bound, " LB ", has been reset to -Infinity.")
	  (SETQ LB NIL)))
    (COND
      ((NUMBERP UB)
	(SETQ UB (FIX UB)))
      (UB (WRITE "WARNING! Invalid upper bound, " UB ", has been reset to +Infinity.")
	  (SETQ UB NIL)))
    (COND
      ((NUMBERP DEFAULT)
	(SETQ DEFAULT (FIX DEFAULT))
	(COND
	  ((OR (AND (NUMBERP LB)
		    (ILESSP DEFAULT LB))
	       (AND (NUMBERP UB)
		    (IGREATERP DEFAULT UB)))
	    (SETQ DEFAULT NIL))))
      (DEFAULT (SETQ DEFAULT NIL)))
    (SETQ PROMPT (APPEND (MKLIST (OR PROMPT "Integer: "))
			 (COND
			   (DEFAULT (LIST "[" DEFAULT "] ** "))
			   (T (QUOTE ("** "))))))
    (do (OR NUMB (SETQ NUMB (OR (CAR (TTYINC PROMPT NIL HELP (QUOTE (COMMAND STRING))))
				DEFAULT)))
       repeatuntil (COND
		     ((AND (NUMBERP NUMB)
			   (AND (OR (FIXP NUMB)
				    (PROGN (WRITE "Truncated to integer: " (SETQ NUMB (FIX NUMB)))
					   T))
				(OR (NOT (NUMBERP LB))
				    (IGEQ NUMB LB))
				(OR (NOT (NUMBERP UB))
				    (ILEQ NUMB UB)))))
		     (T (WRITE "Sorry, " NUMB (COND
				 ((NOT (NUMBERP NUMB))
				   " is NOT an Integer. ")
				 ((AND (FIXP LB)
				       (FIXP UB))
				   (LIST " is NOT within the range [ " LB " .. " UB " ]. "))
				 ((FIXP LB)
				   (LIST " is NOT within the range [ " LB " to Infinity ]. "))
				 (T (LIST " is NOT within the range [ -Infinity to " UB " ]. ")))
			       "Please try again.")
			(CLEARBUF)
			(SETQ TTYIN-COMMAND-LINE NIL)
			(SETQ NUMB NIL))))
    NUMB))

(ASKITEM
  (LAMBDA (RESTRICTION PROMPT HELP CONFIRMFLG DEFAULT NULFLG ITEM)
                                                      (* rgs: "22-NOV-82 08:08")

          (* * ASKITEM prompts the user for an item. RESTRICTION is either a list of allowable responses or a
	  function that returns the response if it is valid and NIL otherwise. PROMPT is the prompt, HELP is 
	  the help message, CONFIRMFLG is T if user confirmation is required, DEFAULT is the default, NULFLG 
	  is T is a null response is permitted. If ITEM is given, then it is taken as an item upon which to 
	  do the checking--that is, no user interaction is expected unless it fails to meet the RESTRICTION 
	  requirements.)


    (PROG (SPLST FN)
          (OR HELP (SETQ HELP T))
          (SETQ SPLST (COND
	      ((ATOM RESTRICTION)
		NIL)
	      ((FNTYP RESTRICTION)
		NIL)
	      (T RESTRICTION)))
          (SETQ FN (AND (FNTYP RESTRICTION)
			RESTRICTION))
          (COND
	    (DEFAULT (COND
		       (SPLST (OR (FMEMB DEFAULT SPLST)
				  (SETQ DEFAULT NIL)))
		       (FN (OR (APPLY* FN DEFAULT)
			       (SETQ DEFAULT NIL))))))
          (SETQ PROMPT (APPEND (MKLIST (OR PROMPT "Item: "))
			       (COND
				 (DEFAULT (LIST "[" DEFAULT "] ** "))
				 (T (QUOTE ("** "))))))
          (do (OR ITEM (SETQ ITEM (OR (CAR (TTYINC PROMPT SPLST HELP
						   (QUOTE (COMMAND STRING NORAISE))))
				      DEFAULT)))
	     repeatuntil (OR (AND NULFLG (NULL ITEM))
			     (PROGN (SETQ ITEM (OR (AND (NULL SPLST)
							(NULL FN)
							ITEM)
						   (CAR (FMEMB ITEM SPLST))
						   (FIXSPELL ITEM 70 SPLST)
						   (AND FN (APPLY* FN ITEM))
						   (printout T ITEM 
					 " is an invalid response. Please try again."
							     T)))
				    (COND
				      ((AND ITEM (OR (NULL CONFIRMFLG)
						     (ASKYN (LIST ITEM "OK?")
							    T))))
				      (T (SETQ ITEM NIL)
					 (CLEARBUF)
					 (SETQ TTYIN-COMMAND-LINE NIL))))))
          (RETURN ITEM))))

(ASKITEMS
  (LAMBDA (RESTRICTION PROMPT HELP CONFIRMFLG ITEMS)
                                                      (* rgs: "22-NOV-82 08:12")

          (* * ASKITEMS prompts the user for a list of items. RESTRICTION is a list of allowable items or a 
	  function for determining a valid response. (It should return the allowable response if it succeeds,
	  NIL otherwise.) PROMPT is the prompt, HELP is the help message, CONFIRMFLG is T if user 
	  confirmation is required. If ITEMS is given, it is taken to be a list of items to be checked--that 
	  is, no user interaction is expected unless an item fails to meet the REATRICTION requirements.)


    (OR PROMPT (SETQ PROMPT "Items: "))
    (OR HELP (SETQ HELP T))
    (OR ITEMS (SETQ ITEMS (TTYIN PROMPT (COND
				   ((ATOM RESTRICTION)
				     NIL)
				   ((FNTYP RESTRICTION)
				     NIL)
				   (T RESTRICTION))
				 HELP
				 (QUOTE (NORAISE)))))
    (SETQ ITEMS (for ITEM in ITEMS collectany (ASKITEM RESTRICTION NIL NIL CONFIRMFLG NIL 
						       T ITEM)))))

(ASKRL
  (LAMBDA (PROMPT DEFAULT HELP LB UB NUMB)                     (* rgs: " 6-Apr-82 10:19")
    (OR HELP (SETQ HELP "Please enter a floating point number."))
    (COND
      ((NUMBERP LB)
	(SETQ LB (FLOAT LB)))
      (LB (WRITE "WARNING! Invalid lower bound, " LB ", has been reset to -Infinity.")
	  (SETQ LB NIL)))
    (COND
      ((NUMBERP UB)
	(SETQ UB (FLOAT UB)))
      (UB (WRITE "WARNING! Invalid upper bound, " UB ", has been reset to +Infinity.")
	  (SETQ UB NIL)))
    (COND
      ((NUMBERP DEFAULT)
	(SETQ DEFAULT (FLOAT DEFAULT))
	(COND
	  ((OR (AND (NUMBERP LB)
		    (FLESSP DEFAULT LB))
	       (AND (NUMBERP UB)
		    (FGREATERP DEFAULT UB)))
	    (SETQ DEFAULT NIL))))
      (DEFAULT (SETQ DEFAULT NIL)))
    (SETQ PROMPT (APPEND (MKLIST (OR PROMPT "Number: "))
			 (COND
			   (DEFAULT (LIST "[" DEFAULT "] ** "))
			   (T (QUOTE ("** "))))))
    (do (OR NUMB (SETQ NUMB (OR (CAR (TTYINC PROMPT NIL HELP (QUOTE (COMMAND STRING))))
				DEFAULT)))
       repeatuntil (COND
		     ((AND (NUMBERP NUMB)
			   (NOT (AND (NUMBERP LB)
				     (FLESSP NUMB LB)))
			   (NOT (AND (NUMBERP UB)
				     (FGREATERP NUMB UB)))))
		     (T (WRITE "Sorry, " NUMB (COND
				 ((NOT (NUMBERP NUMB))
				   " is NOT a Number. ")
				 ((AND (NUMBERP LB)
				       (NUMBERP UB))
				   (LIST " is NOT within the range [ " LB " .. " UB " ]. "))
				 ((NUMBERP LB)
				   (LIST " is NOT within the range [ " LB " to Infinity ]. "))
				 (T (LIST " is NOT within the range [ -Infinity to " UB " ]. ")))
			       "Please try again.")
			(CLEARBUF)
			(SETQ TTYIN-COMMAND-LINE NIL)
			(SETQ NUMB NIL))))
    NUMB))

(ASKYN
  (LAMBDA (PROMPT DEFAULT HELP RESPONSE)                       (* rgs: " 6-Apr-82 10:19")
    (SETQ DEFAULT (AND DEFAULT T))
    (SETQ PROMPT (APPEND (MKLIST (OR PROMPT "Confirm: "))
			 (LIST " [" (COND
				 (DEFAULT (QUOTE YES))
				 (T (QUOTE NO)))
			       "] ** ")))
    (OR HELP (SETQ HELP "Please respond with YES or NO."))
    (do (OR RESPONSE (SETQ RESPONSE (OR (CAR (TTYINC PROMPT (QUOTE ((YES . Y)
								     (NO . N)))
						     HELP
						     (QUOTE (COMMAND STRING))))
					(COND
					  (DEFAULT (QUOTE Y))
					  (T (QUOTE N))))))
       repeatuntil (COND
		     ((FMEMB RESPONSE (QUOTE (Y N NIL))))
		     (T (TTYOUT "Bad response. Please try again.")
			(CLEARBUF)
			(SETQ TTYIN-COMMAND-LINE NIL)
			(SETQ RESPONSE NIL))))
    (COND
      ((EQ RESPONSE (QUOTE Y))
	T)
      (T NIL))))

(DISPLAYHELP
  (LAMBDA (KEY)                                       (* rgs: "14-OCT-82 12:19")

          (* * DISPLAYHELP copies to primary output the help blurb indexed by KEY. KEY can either be a 
	  comment of the form (* * text) (with NORMALCOMMENTSFLG T or NIL) or a string or an atom 
	  (T is ignored). DISPLAYHELP returns NIL if nothing was printed; T if the entry was found, or user 
	  typed ^O.)


    (PROG (RESULT)
          (RETURN (OR (NOT (SETQ RESULT
			     (CTRLO.NLSETQ (COND
					     ((LISTP KEY)
					       (COND
						 ((EQ (CAR KEY)
						      (QUOTE ;))
						   (TTYIO/GET-TXT KEY))
						 (T (printout NIL .PARA 0 0 KEY T)
						    T)))
					     ((AND KEY (NEQ KEY T))
					       (printout NIL KEY T)
					       T)
					     (T NIL)))))
		      (CAR RESULT))))))

(TTYINC
  (LAMBDA (PROMPT SPLST HELP OPTIONS ECHOTOFILE TABS UNREADBUF RDTBL NOSTOREFLG)
                                                      (* rgs: "14-OCT-82 12:23")

          (* * TTYINC is used in conjunction with TTYIN to allow the user to type a number of commands ahead 
	  to a prompt. It is typically used with the TTYIN modes COMMAND and STRING. If the global variable 
	  TTYIN-COMMAND-LINE is non-NIL upon entry then it is concatenated with UNREADBUF and a line 
	  terminator. TTYIN is then called. CDR of the line returned by TTYIN is stored back in 
	  TTYIN-COMMAND-LINE unless NOSTOREFLG is non-NIL.)


    (PROG (LINE)                                      (* the IGNORE check is for read macros)
          (do (SETQ LINE (COND
		  (TTYIN-COMMAND-LINE (RESETBUFS (TTYIN PROMPT SPLST HELP OPTIONS 
							ECHOTOFILE TABS
							(COND
							  (UNREADBUF (CONCAT 
								   TTYIN-COMMAND-LINE 
									    UNREADBUF EOL)
								     )
							  (T (CONCAT TTYIN-COMMAND-LINE 
								     EOL)))
							READTBL)))
		  (T (TTYIN PROMPT SPLST HELP OPTIONS ECHOTOFILE TABS UNREADBUF RDTBL))))
	     repeatwhile (EQUAL LINE (QUOTE (IGNORE))))
          (SETQ TTYIN-COMMAND-LINE (COND
	      (NOSTOREFLG NIL)
	      (T (CDR LINE))))
          (RETURN LINE))))

(TTYIO/FILE/GET-TXT
  (LAMBDA (X DESTFL DEF)                                       (* rgs: " 6-Apr-82 10:18")
    (PROG (ST NC FL STR TEM)
          (RETURN (COND
		    ((AND (OR (NUMBERP (SETQ ST (fetch (TXTBOX START) of X)))
			      (AND (LISTP ST)
				   (NUMBERP (CAR ST))
				   (NUMBERP (CDR ST))
				   (SETQ ST (IPLUS (ITIMES (CAR ST)
							   1000)
						   (CDR ST)))))
			  (NUMBERP (SETQ NC (fetch (TXTBOX NCHARS) of X)))
			  (SETQ FL (fetch (TXTBOX FILE) of X))
			  (NULL (fetch (TXTBOX REST) of X))
			  (NEQ FL DESTFL)
			  (NOT (ILESSP ST 0)))
		      (COND
			((NOT (OPENP FL (QUOTE INPUT)))
			  (COND
			    ((NULL (NLSETQ (SETQ FL (OPENFILE FL (QUOTE INPUT)))))
			      (COND
				((NOT (MEMB (SETQQ TEM "can't find file ")
					    (LISTGET1 LISPXHIST (QUOTE *LISPXPRINT*))))
				  (LISPXPRIN1 TEM T)
				  (LISPXPRIN2 (fetch (TXTBOX FILE) of X)
					      T)
				  (LISPXPRIN1 " - text items lost
" T)))
			      (RETURN X)))
			  (RESETSAVE NIL (LIST (QUOTE CLOSEF?)
					       FL))))
		      (SETFILEPTR FL ST)
		      (COND
			((NULL DESTFL)

          (* means read it in. called from GET* edit macro)


			  (RESETVARS ((TTYIO-TXT-FLG T))
				     (RETURN (/RPLNODE2 X (READ FL FILERDTBL)))))
			(T (COND
			     (DEF (SETQ STR (AND (COND
						   ((NEQ DESTFL TTY)

          (* usually T, but can be rebound for printing to display terminal.)


						     FONTCHANGEFLG)
						   (T (EQ FONTCHANGEFLG (QUOTE ALL))))
						 (CHANGEFONT DEFAULTFONT)))

          (* Want to be in defaultfont before we space over.)


				  (ENDLINE1 0 NIL T)
				  (COND
				    ((AND STR COMMENTFONT)
				      (CHANGEFONT COMMENTFONT)))))
			   (COND
			     ((AND (NEQ TTYIO-TXT-FLG (QUOTE DONTUPDATE))
				   (NEQ DESTFL TTY))

          (* {From the original lisp comment code} i have several times gotten scrwed by being in a sysout in whcih i had dumped
	  multiple versions of a file and accidentally deleted the original parent so that the comments were lost and had to be 
	  recovered. this updates the comments to point to the newest file. note you can still lose out if you do not edit a 
	  particular function (so that it is simply copied in toto) until after you delete the original parent.
	  of course, you can recover by doing a loadfns and reediting.)



          (* the TTYIO-TXT-FLG check is so that prettyprint can disable this when necessary, e.g. when printing COMS.
	  otherwise when it goes to print a text item in a coms, it has already been updated and all that gets put out is the 
	  text item box.)


			       (replace (TXTBOX START) of X with (CONS (IQUOTIENT (GETFILEPTR DESTFL)
										  1000)
								       (IREMAINDER (GETFILEPTR DESTFL)
										   1000)))
			       (replace (TXTBOX FILE) of X with DESTFL)))
			   (COPYBYTES FL DESTFL ST (IPLUS ST NC))
			   (COND
			     (STR (CHANGEFONT STR)))
			   NIL)))
		    (T X))))))

(TTYIO/GET-TXT
  (LAMBDA (X)                                                  (* rgs: " 6-Apr-82 10:21")

          (* * TTYIO/GET-TXT is a variant on the system function GETCOMMENT. It only prints to the primary output.
	  It also assumes the comment is of the form (; "text string") and strips the leading paren and semi-colon and the 
	  trailing paren)


    (PROG (ST NC FL TEM)
          (RETURN (COND
		    ((AND (OR (NUMBERP (SETQ ST (fetch (TXTBOX START) of X)))
			      (AND (LISTP ST)
				   (NUMBERP (CAR ST))
				   (NUMBERP (CDR ST))
				   (SETQ ST (IPLUS (ITIMES (CAR ST)
							   1000)
						   (CDR ST)))))
			  (NUMBERP (SETQ NC (fetch (TXTBOX NCHARS) of X)))
			  (SETQ FL (fetch (TXTBOX FILE) of X))
			  (NULL (fetch (TXTBOX REST) of X))
			  (NOT (ILESSP ST 0)))
		      (COND
			((NOT (OPENP FL (QUOTE INPUT)))
			  (COND
			    ((NULL (NLSETQ (SETQ FL (OPENFILE FL (QUOTE INPUT)))))
			      (RETURN NIL)))
			  (RESETSAVE NIL (LIST (QUOTE CLOSEF?)
					       FL))))
		      (SETFILEPTR FL ST)

          (* Assume that txt items are of the form (; "string") so we strip the leading characters and the trailing characters)


		      (COPYBYTES FL T (IPLUS ST (fetch (TXTBOX OFFSET) of X))
				 (IPLUS ST NC -2))
		      (TERPRI T)
		      T)
		    (T (WRITE (CDR X))
		       T))))))

(TTYIO/PRINT-TXT
  (LAMBDA (X)                                                  (* rgs: " 6-Apr-82 10:07")
                                                               (* DEF is bound in prettyprint block)
    (TTYIO/FILE/GET-TXT X (OUTPUT)
			DEF)))

(TTYIO/READ-TXT
  (LAMBDA (FL RDTBL LST)                                       (* rgs: " 6-Apr-82 10:04")
    (PROG (X START END NCHARS POS TEM FL1 N STRINGSTART)
          (COND
	    ((OR (NULL LST)
		 (CAR LST)
		 (EQ FL T)
		 (EQ TTYIO-TXT-FLG T)
		 (NOT (RANDACCESSP FL)))                       (* the ; appears interior to a lit.)
	      (RETURN (TCONC LST (QUOTE ;)))))
          (SETQ N (POSITION FL))
          (SETQ POS (GETFILEPTR FL))
          (COND
	    ((SELECTQ (SETQ TEM (RATOM FL RDTBL))
		      ((%( %) %[ %] ' %. DECLARATIONS: E)
			T)
		      (%" (SETQ STRINGSTART (GETFILEPTR FL))
			  NIL)
		      (COND
			((NUMBERP TEM)
			  T)
			((EQ TEM (QUOTE ;))
			  NIL)
			((AND CLISPFLG CLISPCHARRAY (STRPOSL CLISPCHARRAY TEM))
			  T)
			(T (SELECTQ (PEEKC FL)
				    ((%) %] _)
				      T)
				    NIL))))

          (* an attempt to distinguish text items from non text items. if ; is followed by list, or only one thing, then assume 
	  not a text item. The numberp check is in case user has done a makefile fast and actually written out a text item in 
	  abbreviated form.)


	      (GO NO)))
          (OR (NUMBERP STRINGSTART)
	      (SETQ STRINGSTART (ADD1 POS)))
          (SETFILEPTR FL (SETQ START (IPLUS POS -2)))
          (COND
	    ((EQ N 2)

          (* problem is that a terpri preceded the ;. this can happen for text items that werent prettyprinted, e.g. were part 
	  of data structures. in this case, to get back to the %(, must back up another two characters, 
	  (one for the ;, two for c.r./l.f., and one for paren))


	      (SETFILEPTR FL (SETQ START (IPLUS START -2)))))

          (* Backup two , skipping over the ; and the "(")


          (COND
	    ((EQ (SKREAD FL)
		 (QUOTE %]))

          (* text item ends in %] means that it is not in a function, and better not use abbreviated form because when recopied 
	  the %] would be recopied, but prettyprint wouldnt know about it and print anther.)


	      (SETFILEPTR FL POS)
	      (RETURN (TCONC LST (QUOTE ;)))))
          (SETQ NCHARS (IDIFFERENCE (SETQ END (GETFILEPTR FL))
				    START))
          (SETFILEPTR FL (SUB1 END))

          (* READ had previously seen a left-paren before the ; read macro was invoked. This backs up over the closing RIGHT 
	  paren so that the read will terminate this list.)


          (RETURN (LCONC LST (create TXTBOX
				     START _(CONS (IQUOTIENT START 1000)
						  (IREMAINDER START 1000))
				     OFFSET _(IDIFFERENCE STRINGSTART START)
				     NCHARS _ NCHARS
				     FILE _(OR FL (INPUT)))))
      NO  (SETFILEPTR FL POS)
          (RETURN (TCONC LST (QUOTE ;))))))
)

(ADDTOVAR GLOBALVARS TTYIN-COMMAND-LINE TTYIO-TXT-FLG)

(ADDTOVAR PRETTYPRINTMACROS (; . TTYIO/PRINT-TXT))
(SETSYNTAX (QUOTE ;)
	   (QUOTE (INFIX ALONE NOESC TTYIO/READ-TXT))
	   FILERDTBL)

(ADDTOVAR USERMACROS (GET; NIL (BIND (IF (NEQ (SETQ #1 (TTYIO/FILE/GET-TXT (##)))
					      (##))
					 ((I : #1)
					  1)
					 NIL))))

(PUTPROPS SPRINTT READVICE (NIL (AROUND NIL
					(PROG ((X (EVALV (CAR (ARGLIST (QUOTE SPRINTT)))))
					       )
					      (RETURN (COND ((AND (LISTP X)
								  (EQ (CAR X)
								      (QUOTE ;)))
							     (DISPLAYHELP X))
							    (T *)))))))
(READVISE SPRINTT)
(DECLARE: DONTCOPY
  (FILEMAP (NIL (1157 19841 (ASKFLE 1167 . 2150) (ASKFN 2152 . 3108) (ASKINT 3110 . 4818) (
ASKITEM 4820 . 6811) (ASKITEMS 6813 . 7882) (ASKRL 7884 . 9520) (ASKYN 9522 . 10356) (
DISPLAYHELP 10358 . 11190) (TTYINC 11192 . 12506) (TTYIO/FILE/GET-TXT 12508 . 15511) (
TTYIO/GET-TXT 15513 . 16888) (TTYIO/PRINT-TXT 16890 . 17158) (TTYIO/READ-TXT 17160 . 19839
)))))
STOP
