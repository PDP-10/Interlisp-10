Page Numbers: No Margins:   Top: 0.75"   Bottom: 0.5"z18593x5e8qk40(635)Filed on: {Indigo}<Loops>LoopsCourse>LoopsCourseSummary.bravoLast edited: GB June 14, 1983  6:47 PMz20320LOOPS Course Summaryz20320c\f5ub20Uz20320Accessing Objects and Variablesz20320\b1u31U($ name) 						evaluates to the object or class named name.z20320\2i5I47i4I($! atom)						evaluates to the object or class whose name is  the value of atom(@ accessExpr)					evaluates to the value of the instance variable, class variable, or property of these								referred to by accessExpr in self.(@ obj accessExpr)				evaluates to the value of the instance variable, class variable, or property of these								referred to by accessExpr in  obj(_@ accessExpr newValue)		sets the value of the variable accessed by accessExpr in self to newValue(_@ obj accessExpr newValue)	sets the value of the variable accessed by accessExpr in obj to newValueaccessExpr is the concatenation of any combination of the following with evaluation strictly left to right	:ivName		instance variable ivName	::cvName		class variable cvName	:,propName		value of property propName	.selector		value returned by sending the unary message selectorN.B.	a ! (bang) after any of the puctuation in the four lines above will cause the atom following it to be evaluated		and that value to be used as the name.  Within an accessExpr a lisp variable is prefixed with a backslash "\" (i.e. ::fee.fie:!\foe:,fum will get the value of CV fee of self and send it the message fie, then it will get the instance		variable whose name is the value of the lisp variable foe from the object returned by the message fie, then it		will get the value of property fum of that IV)z20955\4i4I68i4I4i10I115i10I13i14I114i10I5i3I5i19I46i10I12i8I5i23I45i10I4i4I3i8I1i10I99i6I19i7I4i6I16i7I4i8I20i8I3i8I46i8I170i10I57b20B26b3B33b3B88b3B87b3BDefining and Editing Classesz20320\ub28U(DC className supersList)	(_ ($ Class) New className supersList)	create a class with name className and																	supers supersList(EC className)				(_ ($ className) Edit)					edit the class definition of class classNamez20320\4i9I1i10I19i9I1i10I27i9I29i10I5i9I10i10I47i9Iz20320Defining and Editing Methodsz20320\ub28U(DM className selector)				creates a function with the name className.selector to be used by the method									called by selector and puts you in the editor(DM className selector fnName)		causes the function with the name fnName to be used by the method called									by selector(EM className selector)				edit the method used by selector in class classNamez20320\4i9I1i8I38i19I44i8I32i9I1i15I37i7I44i8I5i9I1i8I29i9I9i9Iz20320Creating, Editing, and Inspecting Instancesz20320\ub43U(_ class New)						creates a new instance of class(_ class New 'name)					creates a new instance of class with the name name(_ obj Edit)			(EI obj)				edit objz20320\3i5I37i5I4i5I5i5I32i5I15i4I4i3I13i3I10i3I(_ obj Inspect)		(INSPECT obj)	create an inspect window for objz20320\3i3I20i3I31i3I(_New class selector arg1 ... argN)	create a new instance of class and sends it the the message selector with									arguments arg1 ... argNz20320\6i5I1i22I27i5I30i8I25i14ISending Messagesz20320\ub16UB(_ obj selector arg1 ... argN)				send obj the message selector with arguments arg1 ... argN(_Super obj selector arg1 ... argN)		in method selector invokes super method for that selector with arguments										arg1 ... argN(_SuperFringe obj selector arg1 ... argN)	invokes all the immediate super methods of obj for that selector with the										arguments arg1 ... argN(_! obj expr arg1 ... argN)				send obj the message whose selector is the value of expr with the										arguments arg1 ... argNz20320\3i3I1i8I1i4I5i4I10i3I13i8I16i4I5i4I9i3I1i8I1i4I4i5I13i9I30i8I26i4I5i4I15i26I45i4I9i8I30i13I5i22I10i3I44i4I30i13IActive Valuesz20320\ub13UB#(localState getFn putFn)	localState is where the value is stored (this may be another active value)							getFn is the function called on read access and putFn is called on write accessz20320\2i10I1i5I1i5I2i10I72i5I43i5I							the value returned by getFn in the value of the get operation and putFn has							responsibility for changing the value of localState using the function PutLocalStatez20320\29i5I39i5I53i10Iz20320z20320Debuggingz20320\ub9UB(BreakIt obj varName)									break whenever the instance variable varName of obj is														accessed(UnBreakIt obj varName)									remove the break on variable varName of obj(BreakMethod className selector)						break whenever the method selector is used by any														instance of class className(TraceMethod className selector)						trace whenever the method selector is used by any														instance of class className(UNBREAK onlyMostRecentFlg)						standard Lisp function to unbreak or untrace methods(BreakIt obj varName propName type breakOnGetAlsoFlg)	break whenever the variable varName of obj is accessed(TraceIt obj varName propName type breakOnGetAlsoFlg)	trace whenever the variable varName of obj is accessed(UnBreakIt obj varName propName type)					remove the break on variable varName of objTo attach a gauge and monitor a variable:	(_New ($ gaugeType) Attach obj ivName selector)		attaches a gauge of type gaugeType to the instance														variable ivName of objz20320\9i3I1i7I47i7I4i3I38i11I39i7I4i3I14i9I1i8I33i8I48i9I14i9I1i8I33i8I48i9I10i17I69i3I1i7I1i31I30i7I4i3I22i43I30i7I4i3I24i25I35i7I4i3I53i9I9i3I1i15I28i9I40i6I4i3Iz20320Rulesz20320\ub5UB^F gets you into the Rule Executive(OK gets you out of it and UE puts you in the User Executive (where OK will get you back again))Variables are accesed by using the access expressions as defined above	accessExpr				gets value of variable (do not use @)	accessExpr_newValue	variable accessed gets newValue	\lispVarName			for referring to lisp variables use backslash	.selector 				sends unary message to self							(unary message is one that requires no arguments besides self)(DefRSM className selector)				creates a new rule set for the class className invoked by selector and											places you in the rule editor z20320\205i10I43i10I1i8I24i8I3i11I51i8I111i9I1i8I42i9I12i8I(_ ruleSet CopyRules 'newRuleSetName)		copies the ruleset ruleSet into a new one called newRuleSetName(_ ruleSet ER)		ER(ruleSet)				edit ruleSetz20320\3i7I11i15I22i7I23i14I4i7I9i7I10i7bI(ListRuleSets className)						generates a listing of all the rule sets defined for the class classNamez20320\14i9I70i9I1bBrowsersz20320\ub8UB(Browse classList)		creates a browser window for the class lattice structure of the classes in classList and their						descendants						left or middle button in title area of the browser window updates the lattice structureLeft Mouse Button		gets pop-up menu to print information about class structure and methodsMiddle Mouse Button	gets pop-up menu to aid in generating new classes or methodsz20320\8i9I78i9I	An asterisk at the end of the name of any item in the menu signifies that there are multiple options for this item	To use the default option, click the left button, for a menu of options click the middle button (i.e. EM* will get a menu with EM and EM!)	To copy from class to class use the left button to "BoxNode" of recepient class then with the middle button menu select the "Move" item with the middle button to get a menu for either copying of moving of IVs, CVs, Methods, or RuleSets	"Specialize" on the middle button menu will create a new subclass of the one selected and ask for a name in the prompt window	"DefineMethod" on the middle button menu will create a new method for that class and prompt for its selectorz20320z20320Saving and Restoring Filesz20320\ub26UB(FILES?)				Lisp will ask you to assign a filename to each entity it does not already have a file name for						Type yes to specify the file names.  For each entity type the filename to save it or ] to not						have it saved						LineFeed (LF) means the same as the previous entity(MAKEFILE filename)	saves the file on the file server on the directory currently connected(LOAD filename)		loads the file from the file server on the directory currently connectedz20320\42i8I125i8I112i8I79i8Iz20320