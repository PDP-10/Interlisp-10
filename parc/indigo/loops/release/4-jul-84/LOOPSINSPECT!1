(FILECREATED "16-May-84 21:00:21" {INDIGO}<LOOPS>SOURCES>LOOPSINSPECT.;8 25855        changes to:  (FNS Class.InspectTitleMenu Class.TitleCommand 			InspectorClassIVs.InspectValueCommand Object.InspectTitleMenu 			Object.InspectValueCommand Object.TitleCommand)      previous date: "18-Apr-84 08:51:00" {INDIGO}<LOOPS>SOURCES>LOOPSINSPECT.;7)(* Copyright (c) 1983, 1984 by Xerox Corporation)(PRETTYCOMPRINT LOOPSINSPECTCOMS)(RPAQQ LOOPSINSPECTCOMS [(* Copyright (c)			    1982 by Xerox Corporation)	(* Classes and functions which make instances and classes be inspectable through the ordinary 	   LISP inspector)	(CLASSES InspectorClassIVs)	(ADDVARS (INSPECTMACROS (instance ObjPropertiesFn ObjInspectFetchFn ObjInspectStoreFn 					  ObjPropCommandFn ObjValueCommandFn ObjTitleCommand 					  ObjTitleFn)				(class ObjPropertiesFn ObjInspectFetchFn ObjInspectStoreFn 				       ObjPropCommandFn ObjValueCommandFn ObjTitleCommand ObjTitleFn))		 )	(* * Functions for producing the ClassTree)	(METHODS Class.InspectFetch Class.InspectPropCommand Class.InspectProperties 		 Class.InspectStore Class.InspectTitle Class.InspectTitleMenu 		 Class.InspectValueCommand Class.TitleCommand InspectorClassIVs.InspectFetch 		 InspectorClassIVs.InspectProperties InspectorClassIVs.InspectStore 		 InspectorClassIVs.InspectTitle InspectorClassIVs.InspectTitleMenu 		 InspectorClassIVs.InspectValueCommand InspectorClassIVs.TitleCommand 		 Object.InspectFetch Object.InspectPropCommand Object.InspectProperties 		 Object.InspectStore Object.InspectTitle Object.InspectTitleMenu 		 Object.InspectValueCommand Object.TitleCommand)	(FNS * INSPFNS)	(DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA)									      (NLAML)									      (LAMA])(* Copyright (c) 1982 by Xerox Corporation)(* Classes and functions which make instances and classes be inspectable through the ordinary LISP inspector)(DEFCLASSES InspectorClassIVs)[DEFCLASS InspectorClassIVs   (MetaClass Class doc           (* * Special class used by inspector to keep track of whether it is displaying all IVs or only local IVs.)	      Edited:                                        (* dgb: "22-JUN-82 11:57")	      )   (Supers Object)   (InstanceVariables (class NIL doc                         (* class whose IVs are being examined))		      (iv NIL doc                            (* name of IV whose properties are being examined in 							     class))		      (localFlg NIL doc                      (* T when only local properties are to be seen)				))](ADDTOVAR INSPECTMACROS (instance ObjPropertiesFn ObjInspectFetchFn ObjInspectStoreFn 				  ObjPropCommandFn ObjValueCommandFn ObjTitleCommand ObjTitleFn)			(class ObjPropertiesFn ObjInspectFetchFn ObjInspectStoreFn ObjPropCommandFn 			       ObjValueCommandFn ObjTitleCommand ObjTitleFn))(* * Functions for producing the ClassTree)[METH Class  InspectFetch (datum property)      (* fetch summaries of class for the inspector -- different for Metaclass Supers etc)][METH Class  InspectPropCommand NIL      (* No changes allowed on properties)][METH Class  InspectProperties (datum)      (* (part of Class Inspector))][METH Class  InspectStore (datum property newValue window)      (* Can't change the class from the inspector using the summary)][METH Class  InspectTitle (datum)      (* Return a string for a title in inspect window)][METH Class  InspectTitleMenu NIL      (* Menu for commands for the inspector)][METH Class  InspectValueCommand (datum property value window)      (* What to do when a class value is selected)][METH Class  TitleCommand (datum window)      (* Do commands in title field)][METH InspectorClassIVs  InspectFetch (datum property window)      (* Internal Inspector Fn)][METH InspectorClassIVs  InspectProperties (datum)      (* Compute the list of IVs for the represented class)][METH InspectorClassIVs  InspectStore (datum property newValue window)      (* Put in a new default value for iv in class.)][METH InspectorClassIVs  InspectTitle (datum)      (* Compute the title for this instance which is representing the ivs of another class)][METH InspectorClassIVs  InspectTitleMenu NIL      (* Puts up menu for IV inspector title)][METH InspectorClassIVs  InspectValueCommand (datum property value window)      (* Puts up menu for IV inspector value selection)][METH InspectorClassIVs  TitleCommand (datum window)      (* Puts up menu of selections for class instance variables for the Inspector)][METH Object  InspectFetch (datum property window)      (* part of Object Inspector)][METH Object  InspectPropCommand (datum property window)      (* Part of object inspector)][METH Object  InspectProperties (datum)      (* List the set of IVs for an instance)][METH Object  InspectStore (datum property newValue window)      (* Store a value in the instance)][METH Object  InspectTitle (datum)      (* part of Object Inspector)][METH Object  InspectTitleMenu NIL      (* Put a menu for the Instance Title Command)][METH Object  InspectValueCommand (datum property value window)      (* part of Object Inspector)][METH Object  TitleCommand (datum window)      (* Puts up menu of selections for instances for the Inspector)](DEFINEQ(Class.InspectFetch  [LAMBDA (self datum property)                              (* dgb: "11-JUN-82 09:51")                                                             (* fetch summaries of class for the inspector -- 							     different for Metaclass Supers etc)    (COND      ((LISTP datum)	(_ (CAR datum)	   List! property))      (T (_ datum List property])(Class.InspectPropCommand  [LAMBDA (self)                                             (* dgb: "10-JUN-82 16:47")                                                             (* No changes allowed on properties)    NIL])(Class.InspectProperties  [LAMBDA (self datum)                                       (* dgb: "27-AUG-82 13:01")                                                             (* (part of Class Inspector))    (QUOTE (MetaClass Supers IVs CVs Methods])(Class.InspectStore  [LAMBDA (self datum property newValue window)              (* dgb: "11-JUN-82 09:52")                                                             (* Can't change the class from the inspector using the 							     summary)    (ERROR "Can't Store into class this way"])(Class.InspectTitle  [LAMBDA (self datum)                                       (* dgb: "11-JUN-82 09:53")                                                             (* Return a string for a title in inspect window)    (CONCAT (COND	      ((LISTP datum)		"All properties of ")	      (T "Local properties of "))	    "Class "	    (ClassName (ExtractObj self])(Class.InspectTitleMenu  [LAMBDA (self)                                             (* dgb: "16-May-84 20:29")                                                             (* Menu for commands for the inspector)    (MENU (MenuGetOrCreate ClassInspectTitleMenu (QUOTE (Edit All Local Refetch])(Class.InspectValueCommand  [LAMBDA (self datum property value window)                 (* dgb: "13-OCT-83 22:06")                                                             (* What to do when a class value is selected)    (SELECTQ [MENU (MenuGetOrCreate InspectMenu (QUOTE (Inspect]	     [Inspect (COND			[(EQ property (QUOTE IVs))			  (PROG ((civ (_ ($ InspectorClassIVs)					 New)))			        (_@				  civ class self)			        (INSPECT civ)                (* (WINDOWPROP window (QUOTE DATUM) civ))			    ]			(T (INSPECT value]	     NIL)    (INSPECTW.REDISPLAY window])(Class.TitleCommand  [LAMBDA (self datum window)                                (* dgb: "16-May-84 20:30")                                                             (* Do commands in title field)    (PROG NIL          (SELECTQ (_ self InspectTitleMenu)		   (Edit (_ self Edit))		   [All (COND			  ((NLISTP datum)			    (WINDOWPROP window (QUOTE DATUM)					(LIST datum]		   [Local (COND			    ((LISTP datum)			      (WINDOWPROP window (QUOTE DATUM)					  self]		   (Refetch                                  (* Will happen anyway if we avoid the return)			    )		   (RETURN NIL))          (INSPECTW.REDISPLAY window])(InspectorClassIVs.InspectFetch  [LAMBDA (self datum property window)                       (* dgb: "13-OCT-83 22:06")                                                             (* Internal Inspector Fn)    (GetClassIV (@ class)		(OR (@ iv)		    property)		(AND (@ iv)		     (InspectValProp property])(InspectorClassIVs.InspectProperties  [LAMBDA (self datum)                                       (* dgb: "13-OCT-83 22:06")                                                             (* Compute the list of IVs for the represented class)    (COND      [(@ iv)                                                (* examining the properties of an iv.							     NIL is for the value)	(CONS (QUOTE Value)	      (COND		((@ localFlg)                                (* Only local info)		  (_ (@ class)		     List		     (QUOTE IVProps)		     (@ iv)))		(T                                           (* Get inherited info)		   (_ (@ class)		      List!(QUOTE IVProps)		      (@ iv]      (T (COND	   ((@ localFlg)	     (_ (@ class)		List		(QUOTE IVs)))	   (T                                                (* Get inherited info)	      (_ (@ class)		 List!(QUOTE IVs])(InspectorClassIVs.InspectStore  [LAMBDA (self datum property newValue window)              (* dgb: "13-OCT-83 22:06")                                                             (* Put in a new default value for iv in class.)                                                             (* The OR and AND are a trick to compute correct 							     arguments. iv is a varname if it exists, otherwise it is							     the property)    (PutClassIV (@ class)		(OR (@ iv)		    property)		newValue		(AND (@ iv)		     (InspectValProp property])(InspectorClassIVs.InspectTitle  [LAMBDA (self datum)                                       (* dgb: "13-OCT-83 22:06")                                                             (* Compute the title for this instance which is 							     representing the ivs of another class)    (CONCAT (COND	      ((@ localFlg)		"Local ")	      (T "All "))	    (COND	      ((@ iv)		(CONCAT "properties of " (@ iv)			" of $"))	      (T "IVs of $"))	    (ClassName (@ class])(InspectorClassIVs.InspectTitleMenu  [LAMBDA (self)                                             (* dgb: "13-OCT-83 22:06")                                                             (* Puts up menu for IV inspector title)    (SELECTQ [MENU (MenuGetOrCreate ClassIVsInspectTitleMenu (QUOTE (All Local IVs]	     (All (_@		    localFlg NIL))	     (Local (_@		      localFlg T))	     (IVs (_@		    iv NIL))	     NIL])(InspectorClassIVs.InspectValueCommand  [LAMBDA (self datum property value window)                 (* dgb: "16-May-84 20:35")                                                             (* Puts up menu for IV inspector value selection)    (SELECTQ [MENU (MenuGetOrCreate InspectOrPropsMenu (QUOTE ((Inspect (QUOTE Inspect)									"Inspect value of item")								("Save Value" (QUOTE SaveIt)									      								    "(SavedValue)_<selectedItem>")								(Properties (QUOTE Props)									    							    "Inspect Properties of this Variable"]	     (Inspect (INSPECT value))	     (SaveIt (printout PROMPTWINDOW "(SavedValue)_" (_Proto				 ($ LoopsIcon)				 Save				 (SETQ IT value))			       T))	     (Props (_@		      iv property)                           (* Store away the iv to be examined, and redisplay)		    (INSPECTW.REDISPLAY window))	     NIL])(InspectorClassIVs.TitleCommand  [LAMBDA (self datum window)                                (* dgb: "10-JUN-82 21:48")                                                             (* Puts up menu of selections for class instance 							     variables for the Inspector)    (PROG NIL          (SELECTQ (_ self InspectTitleMenu)		   (Class                                    (* Inspect the class of this instance)			  (WINDOWPROP window (QUOTE DATUM)				      (%@ class)))		   (Add/Delete (ClassIVAddDelete self datum window))		   (All                                      (* Reset to inherited mode)			(WINDOWPROP window (QUOTE DATUM)				    (LIST self)))		   (Local                                    (* Show only those values which are in instance itself)			  (WINDOWPROP window (QUOTE DATUM)				      self))		   (Redisplay)		   (RETURN NIL))                             (* Redisplay for most selections)          (INSPECTW.REDISPLAY window)          (RETURN datum])(Object.InspectFetch  [LAMBDA (self datum property window)                       (* dgb: "26-NOV-82 23:25")                                                             (* part of Object Inspector)    (COND      ((NLISTP datum)                                        (* getting the usual value)	(GetValueOnly self property))      (T (PROG (varName prop (vp (CADR datum)))	       (COND		 (vp (SETQ varName vp)		     (SETQ prop (InspectValProp property)))		 (T (SETQ varName property)))	       (RETURN (COND			 ((EQ (QUOTE LocalValues)			      (CADDR datum))                 (* These are the values not stored in the class)			   (GetIVHere self varName prop))			 (T (GetValueOnly self varName prop])(Object.InspectPropCommand  [LAMBDA (self datum property window)                       (* dgb: "28-APR-83 18:03")                                                             (* Part of object inspector)    (PROG (newValue varName prop op)          (AND (type? instance datum)	       (_ datum InstOf (QUOTE InspectorClassIVs))	       (RETURN NIL))                                 (* Can't set class values from inspector)          (OR [SETQ op (MENU (MenuGetOrCreate ObjPropInspectMenu (QUOTE ((PutValueOnly (QUOTE 										     PutValueOnly)										       								       "Overwrite existing value")									  (PutValue (QUOTE PutValue)										    						      "Set value, possibly invoking activeValues"]	      (RETURN NIL))          (* * Get a new value, or RETURN NIL if ERROR or ^E)          [SETQ newValue (CAR (OR (ERSETQ (PromptEval (CONCAT "Enter the new " property " for " datum)						      ))				  (RETURN NIL]          (* * Set up varName and property)          [COND	    ((OR (NLISTP datum)		 (NULL (CADR datum)))	      (SETQ varName property))	    (T (SETQ varName (CADR datum))	       (SETQ prop (InspectValProp property]          (COND	    ((EQ op (QUOTE PutValue))	      (PutValue self varName newValue prop))	    (T (PutValueOnly self varName newValue prop)))          (INSPECTW.REDISPLAY window])(Object.InspectProperties  [LAMBDA (self datum)                                       (* dgb: "26-NOV-82 22:46")                                                             (* List the set of IVs for an instance)    (COND      ((OR (NLISTP datum)	   (NULL (CADR datum)))	(_ self List (QUOTE IVS)))      (T (CONS (QUOTE Value)	       (COND		 ((CADDR datum)                              (* only local properties)		   (_ self List (QUOTE IV)		      (CADR datum)))		 (T                                          (* all properties)		    (_ self List!(QUOTE IV)		       (CADR datum])(Object.InspectStore  [LAMBDA (self datum property newValue window)              (* dgb: "26-NOV-82 23:26")                                                             (* Store a value in the instance)    (COND      ((NLISTP datum)	(PutValueOnly self property newValue))      (T                                                     (* If (CADR datum) NEQ NIL then it is varName, and 							     property is propName, else property is varName)	 (PROG ((varName (CADR datum)))	       (PutValueOnly self (OR varName property)			     newValue			     (AND varName (InspectValProp property])(Object.InspectTitle  [LAMBDA (self datum)                                       (* dgb: " 5-JUN-83 20:47")                                                             (* part of Object Inspector)    (PROG ((names (GetObjectNames self T)))          (OR (LISTP datum)	      (SETQ datum (LIST datum NIL NIL)))          (RETURN (CONCAT (COND			    ((CADDR datum)			      "Local ")			    (T "All "))			  (COND			    ((CADR datum)			      "IVProps of ")			    (T "Values of "))			  (ClassName self)			  " "			  (COND			    (names (CONCAT "$" (CAR names)))			    (T (LOC self)))			  "."			  (OR (CADR datum)			      ""])(Object.InspectTitleMenu  [LAMBDA (self)                                             (* dgb: "16-May-84 20:37")                                                             (* Put a menu for the Instance Title Command)    (MENU (MenuGetOrCreate InstanceTitleMenu (QUOTE ((Class (QUOTE Class)							    "Inspect the class of this instance")						      (AllValues (QUOTE AllValues)								 					       "Look at inherited values as well as local values")						      (LocalValues (QUOTE LocalValues)								   							  "Show only values actually in instance")						      (Add/Delete (QUOTE Add/Delete)								  							    "Add or delete from the IVs or props")						      (IVs (QUOTE IVs)							   "Show object's instance variables")						      ("Save Value" (QUOTE SaveIt)								    							  "(SavedValue)_<object being inspected>")						      (Refetch (QUOTE Refetch)							       "Refetch current values"])(Object.InspectValueCommand  [LAMBDA (self datum property value window)                 (* dgb: "16-May-84 20:43")                                                             (* part of Object Inspector)    (SELECTQ [MENU (COND		     [(AND (LISTP datum)			   (CADR datum))                     (* Inspecting properties)		       (MenuGetOrCreate InspectOrSaveMenu (QUOTE ((Inspect (QUOTE Inspect)									   "Inspect value of item")								   ("Save Value" (QUOTE SaveIt)										 									    "Save selected value")								   ("Use saved value" (QUOTE UnSaveIt)										      							  "Replace selected value by saved value")								   ("New Value" (QUOTE NewValue)																	  "Replace value by evaluated expression"]		     (T (MenuGetOrCreate InspectOrPropsMenu (QUOTE ((Inspect (QUOTE Inspect)									     "Inspect value of item")								     ("Save Value" (QUOTE SaveIt)										   									    "Save selected value")								     ("Use saved value" (QUOTE 											 UnSaveIt)																		  "Replace selected value by saved value")								     ("New Value" (QUOTE NewValue)										  							  "Replace value by evaluated expression")								     (Properties (QUOTE Props)										 							    "Inspect Properties of this Variable"]	     (SaveIt (printout PROMPTWINDOW (CHARACTER 7)			       "(SavedValue) _ "			       (_Proto				 ($ LoopsIcon)				 Save value)			       T))	     (UnSaveIt (_ self InspectStore datum property (GetValue (_ ($ LoopsIcon)									Prototype)								     (QUOTE savedValue))			  window)		       (INSPECTW.REDISPLAY window))	     (NewValue (_ self InspectPropCommand datum property window))	     (Inspect (INSPECT value))	     (Props (PROG [goodSize (reg (WINDOWPROP window (QUOTE REGION]		          (COND			    [(NLISTP datum)			      (WINDOWPROP window (QUOTE DATUM)					  (SETQ datum (LIST self property NIL]			    (T (RPLACA (CDR datum)				       property)))		          [COND			    ([ILESSP (fetch HEIGHT of reg)				     (SETQ goodSize (IMIN 200							  (ITIMES (IPLUS 2									 (LENGTH (_ (CAR datum)										    List!(QUOTE										      IVProps)										    property)))								  13]                                                             (* Won't contain the items. Reshape window)			      (SHAPEW window (create REGION copying reg HEIGHT _ goodSize]		          (INSPECTW.REDISPLAY window)))	     NIL])(Object.TitleCommand  [LAMBDA (self datum window)                                (* dgb: "16-May-84 20:45")                                                             (* Puts up menu of selections for instances for the 							     Inspector)    (PROG NIL          (SELECTQ (_ self InspectTitleMenu)		   (Class                                    (* Inspect the class of this instance)			  (INSPECT (Class self)))		   (Add/Delete (ObjAddDelete self datum window))		   [AllValues                                (* Reset to default mode)			      (COND				((LISTP datum)               (* Remove Local Flag from list)				  (RPLACA (CDDR datum)					  NIL]		   [LocalValues                              (* Show only those values which are in instance itself)				(COND				  [(NLISTP datum)				    (WINDOWPROP window (QUOTE DATUM)						(SETQ datum (LIST self NIL (QUOTE LocalValues]				  (T                         (* Put in Local values flag in list)				     (RPLACA (CDDR datum)					     (QUOTE LocalValues]		   (SaveIt (printout PROMPTWINDOW "(SavedValue) _ " (_Proto				       ($ LoopsIcon)				       Save				       (SETQ IT (ExtractObj datum)))				     T))		   [IVs                                      (* Make it be back to the instance, with All Values)			(COND			  ((LISTP datum)			    (RPLACA (CDR datum]		   NIL)                                      (* Redisplay for all selections)          (INSPECTW.REDISPLAY window)          (RETURN datum]))(RPAQQ INSPFNS (InspectValProp ObjAddDelete ObjInspectFetchFn ObjInspectStoreFn ObjPropCommandFn 			       ObjPropertiesFn ObjTitleCommand ObjTitleFn ObjValueCommandFn))(DEFINEQ(InspectValProp  [LAMBDA (property)                                         (* dgb: "26-NOV-82 23:27")                                                             (* Used to convert Value to NIL for access in the 							     inspector)    (COND      ((EQ property (QUOTE Value))	NIL)      (T property])(ObjAddDelete  [LAMBDA (self datum window)                                (* dgb: " 5-JUN-83 20:05")          (* Used in the inspector. The inspect datum is either an object, or a list (obj varName locOrFree) If varName is 	  NIL then examining all IVs, else the properties of the named var. locOrFree is NIL (showing all values) or 	  LocalValues, meaning show only values set in object itself)    (PROG [name (varName (CADR (LISTP datum]          (SELECTQ [MENU (MenuGetOrCreate AddDeleteMenu (QUOTE (Add Delete]		   [Add (SETQ name (PromptRead "Type name to be added: "))			(COND			  (varName (PutValueOnly self varName NIL name))			  (T (_ self AddIV name NIL]		   [Delete (SETQ name (PromptRead "Type name to be deleted: "))			   (COND			     (varName (_ self DeleteIV varName name))			     (T (_ self DeleteIV name]		   NIL])(ObjInspectFetchFn  [LAMBDA (datum property window)                            (* dgb: "10-JUN-82 03:20")                                                             (* InspectMacro FetchFn for Objects)    (_ (ExtractObj datum)       InspectFetch datum property])(ObjInspectStoreFn  [LAMBDA (datum property newValue)                          (* dgb: " 9-JUN-82 23:01")                                                             (* InspectMacro StoreFn for Objects)    (_ (ExtractObj datum)       InspectStore datum property newValue])(ObjPropCommandFn  [LAMBDA (property datum window)                            (* dgb: " 9-JUN-82 23:01")                                                             (* InspectMacro TitleCommandFn for Objects)    (_ (ExtractObj datum)       InspectPropCommand datum property window])(ObjPropertiesFn  [LAMBDA (datum)                                            (* dgb: " 9-JUN-82 23:40")                                                             (* InspectMacro PropertyFn for Objects)    (_ (ExtractObj datum)       InspectProperties datum])(ObjTitleCommand  [LAMBDA (window datum)                                     (* dgb: " 9-JUN-82 23:03")                                                             (* InspectMacro TitleCommandFn for Objects)    (_ (ExtractObj datum)       TitleCommand datum window])(ObjTitleFn  [LAMBDA (datum window)                                     (* dgb: " 9-JUN-82 23:56")                                                             (* InspectMacro TitleFn for Objects)    (_ (ExtractObj datum)       InspectTitle datum window])(ObjValueCommandFn  [LAMBDA (value property datum window)                      (* dgb: " 9-JUN-82 23:01")                                                             (* InspectMacro TitleCommandFn for Objects)    (_ (ExtractObj datum)       InspectValueCommand datum property value window]))(DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDTOVAR NLAMA )(ADDTOVAR NLAML )(ADDTOVAR LAMA ))(PUTPROPS LOOPSINSPECT COPYRIGHT ("Xerox Corporation" 1983 1984))(DECLARE: DONTCOPY  (FILEMAP (NIL (5482 22237 (Class.InspectFetch 5492 . 5876) (Class.InspectPropCommand 5878 . 6111) (Class.InspectProperties 6113 . 6375) (Class.InspectStore 6377 . 6685) (Class.InspectTitle 6687 . 7065) (Class.InspectTitleMenu 7067 . 7373) (Class.InspectValueCommand 7375 . 7977) (Class.TitleCommand 7979 . 8629) (InspectorClassIVs.InspectFetch 8631 . 8956) (InspectorClassIVs.InspectProperties 8958 . 9866) (InspectorClassIVs.InspectStore 9868 . 10444) (InspectorClassIVs.InspectTitle 10446 . 10935) (InspectorClassIVs.InspectTitleMenu 10937 . 11373) (InspectorClassIVs.InspectValueCommand 11375 . 12269) (InspectorClassIVs.TitleCommand 12271 . 13288) (Object.InspectFetch 13290 . 14025) (Object.InspectPropCommand 14027 . 15412) (Object.InspectProperties 15414 . 16024) (Object.InspectStore 16026 . 16645) (Object.InspectTitle 16647 . 17294) (Object.InspectTitleMenu 17296 . 18233) (Object.InspectValueCommand 18235 . 20703) (Object.TitleCommand 20705 . 22235)) (22414 25635 (InspectValProp 22424 . 22749) (ObjAddDelete 22751 . 23620) (ObjInspectFetchFn 23622 . 23901) (ObjInspectStoreFn 23903 . 24191) (ObjPropCommandFn 24193 . 24491) (ObjPropertiesFn 24493 . 24769) (ObjTitleCommand 24771 . 25053) (ObjTitleFn 25055 . 25325) (ObjValueCommandFn 25327 . 25633)))))STOP