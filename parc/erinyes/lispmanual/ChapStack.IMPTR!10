(VARIABLE% BINDINGS% AND% THE% INTERLISP% STACK CHAPTER (86 97 114 105 97 98 108 101 32 66 105 110 100 105 110 103 115 32 97 110 100 32 116 104 101 32 73 110 116 101 114 108 105 115 112 32 83 116 97 99 107) NIL (11) 1)(STACK TAG NIL NIL (11) 1)(STACK TERM Stack (*PRIMARY*) (11) 1)(VARIABLE% BINDINGS TERM Variable% bindings (*PRIMARY*) (11) 1)(VALUE% CELL% OF% A (Litatom) Value% cell% of% a NIL (11) 1)(SHALLOW% BINDING TERM Shallow% binding (*PRIMARY*) (11) 1)(BASIC% FRAMES% ON% STACK TERM Basic% frames% on% stack NIL (11) 1)(DEEP% BINDING TERM Deep% binding (*PRIMARY*) (11) 1)(THE% SPAGHETTI% STACK SUBSEC (84 104 101 32 83 112 97 103 104 101 116 116 105 32 83 116 97 99 107) NIL (1 11) 2)(SPAGHETTI% STACKS TERM Spaghetti% stacks (*PRIMARY*) (1 11) 2)(FRAMES% ON% THE% STACK TERM Frames% on% the% stack (*PRIMARY*) (1 11) 2)(FRAME% EXTENSIONS% OF% STACK% FRAMES TERM Frame% extensions% of% stack% frames (*PRIMARY*) (1 11) 3)(FRAME% NAMES% OF% STACK% FRAMES TERM Frame% names% of% stack% frames (*PRIMARY*) (1 11) 3)(BLINK (in stack frame) NIL NIL (1 11) 3)(ALINK (in stack frame) NIL NIL (1 11) 3)(CLINK (in stack frame) NIL NIL (1 11) 3)(BASIC% FRAMES% ON% STACK TERM Basic% frames% on% stack (*PRIMARY*) (1 11) 3)(ACCESS% CHAIN% %(ON% STACK%) TERM Access% chain% %(on% stack%) (*PRIMARY*) (1 11) 3)(CONTROL% CHAIN% %(ON% STACK%) TERM Control% chain% %(on% stack%) (*PRIMARY*) (1 11) 3)(ACTIVE% FRAME TERM Active% frame NIL (1 11) 3)(STACK% POINTERS TERM Stack% pointers (*PRIMARY*) (1 11) 4)(EQPSTACKPOINTERS TAG NIL NIL (1 11) 4)(EQP (Function) NIL NIL (1 11) 4)(CONTEXT% SWITCHING TERM Context% switching NIL (1 11) 4)(STACK% FUNCTIONS SUBSEC (83 116 97 99 107 32 70 117 110 99 116 105 111 110 115) NIL (2 11) 4)(STACK% FUNCTIONS TERM Stack% functions (*PRIMARY*) (2 11) 4)(STACK% DESCRIPTORS TERM Stack% descriptors (*PRIMARY*) (2 11) 4)(STACK% POINTERS TERM Stack% pointers NIL (2 11) 5)(ILLEGAL% STACK% ARG (Error Message) NIL NIL (2 11) 5)(STACK% POINTER% HAS% BEEN% RELEASED (Error Message) NIL NIL (2 11) 5)(SEARCHING% THE% STACK SUBSEC (83 101 97 114 99 104 105 110 103 32 116 104 101 32 83 116 97 99 107) NIL (1 2 11) 5)(STKPOS (Function) ((FONT . LISP) 40 83 84 75 80 79 83 32 (FONT . ARG) 70 82 65 77 69 78 65 77 69 32 78 32 80 79 83 32 79 76 68 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (1 2 11) 5)(STKNTH (Function) ((FONT . LISP) 40 83 84 75 78 84 72 32 (FONT . ARG) 78 32 80 79 83 32 79 76 68 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (1 2 11) 6)(STKNAME (Function) ((FONT . LISP) 40 83 84 75 78 65 77 69 32 (FONT . ARG) 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (1 2 11) 6)(SETSTKNAME (Function) ((FONT . LISP) 40 83 69 84 83 84 75 78 65 77 69 32 (FONT . ARG) 80 79 83 32 78 65 77 69 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (1 2 11) 6)(STKNTHNAME (Function) ((FONT . LISP) 40 83 84 75 78 84 72 78 65 77 69 32 (FONT . ARG) 78 32 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (1 2 11) 6)(VARIABLE% BINDINGS% IN% STACK% FRAMES SUBSEC (86 97 114 105 97 98 108 101 32 66 105 110 100 105 110 103 115 32 105 110 32 83 116 97 99 107 32 70 114 97 109 101 115) NIL (2 2 11) 6)(BINDINGS% IN% STACK% FRAMES TERM Bindings% in% stack% frames (*PRIMARY*) (2 2 11) 6)(VARIABLE% BINDINGS% IN% STACK% FRAMES TERM Variable% bindings% in% stack% frames (*PRIMARY*) (2 2 11) 6)(BASIC% FRAMES% ON% STACK TERM Basic% frames% on% stack NIL (2 2 11) 6)(ILLEGAL% ARG (Error Message) NIL NIL (2 2 11) 6)(STKSCAN (Function) ((FONT . LISP) 40 83 84 75 83 67 65 78 32 (FONT . ARG) 86 65 82 32 73 80 79 83 32 79 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 2 11) 6)(FRAMESCAN (Function) ((FONT . LISP) 40 70 82 65 77 69 83 67 65 78 32 (FONT . ARG) 65 84 79 77 32 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 2 11) 7)(STKARG (Function) ((FONT . LISP) 40 83 84 75 65 82 71 32 (FONT . ARG) 78 32 80 79 83 32 61221 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 2 11) 7)(STKARGNAME (Function) ((FONT . LISP) 40 83 84 75 65 82 71 78 65 77 69 32 (FONT . ARG) 78 32 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 2 11) 7)(SETSTKARG (Function) ((FONT . LISP) 40 83 69 84 83 84 75 65 82 71 32 (FONT . ARG) 78 32 80 79 83 32 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 2 11) 7)(SETSTKARGNAME (Function) ((FONT . LISP) 40 83 69 84 83 84 75 65 82 71 78 65 77 69 32 (FONT . ARG) 78 32 80 79 83 32 78 65 77 69 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 2 11) 7)(STKNARGS (Function) ((FONT . LISP) 40 83 84 75 78 65 82 71 83 32 (FONT . ARG) 80 79 83 32 61221 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 2 11) 7)(VARIABLES (Function) ((FONT . LISP) 40 86 65 82 73 65 66 76 69 83 32 (FONT . ARG) 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 2 11) 7)(STKARGS (Function) ((FONT . LISP) 40 83 84 75 65 82 71 83 32 (FONT . ARG) 80 79 83 32 61221 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 2 11) 7)(EVALUATING% EXPRESSIONS% IN% STACK% FRAMES SUBSEC (69 118 97 108 117 97 116 105 110 103 32 69 120 112 114 101 115 115 105 111 110 115 32 105 110 32 83 116 97 99 107 32 70 114 97 109 101 115) NIL (3 2 11) 7)(ENVEVAL (Function) ((FONT . LISP) 40 69 78 86 69 86 65 76 32 (FONT . ARG) 70 79 82 77 32 65 80 79 83 32 67 80 79 83 32 65 70 76 71 32 67 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 2 11) 7)(ENVAPPLY (Function) ((FONT . LISP) 40 69 78 86 65 80 80 76 89 32 (FONT . ARG) 70 78 32 65 82 71 83 32 65 80 79 83 32 67 80 79 83 32 65 70 76 71 32 67 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 2 11) 8)(EVALV (Function) ((FONT . LISP) 40 69 86 65 76 86 32 (FONT . ARG) 86 65 82 32 80 79 83 32 82 69 76 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 2 11) 8)(NOBIND (Litatom) NIL NIL (3 2 11) 8)(STKEVAL (Function) ((FONT . LISP) 40 83 84 75 69 86 65 76 32 (FONT . ARG) 80 79 83 32 70 79 82 77 32 70 76 71 32 61221 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 2 11) 8)(STKAPPLY (Function) ((FONT . LISP) 40 83 84 75 65 80 80 76 89 32 (FONT . ARG) 80 79 83 32 70 78 32 65 82 71 83 32 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 2 11) 8)(ALTERING% FLOW% OF% CONTROL SUBSEC (65 108 116 101 114 105 110 103 32 70 108 111 119 32 111 102 32 67 111 110 116 114 111 108) NIL (4 2 11) 8)(RETFROM (Function) ((FONT . LISP) 40 82 69 84 70 82 79 77 32 (FONT . ARG) 80 79 83 32 86 65 76 32 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 2 11) 8)(RETTO (Function) ((FONT . LISP) 40 82 69 84 84 79 32 (FONT . ARG) 80 79 83 32 86 65 76 32 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 2 11) 9)(RETEVAL (Function) ((FONT . LISP) 40 82 69 84 69 86 65 76 32 (FONT . ARG) 80 79 83 32 70 79 82 77 32 70 76 71 32 61221 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 2 11) 9)(RETAPPLY (Function) ((FONT . LISP) 40 82 69 84 65 80 80 76 89 32 (FONT . ARG) 80 79 83 32 70 78 32 65 82 71 83 32 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 2 11) 9)(RELEASING% AND% REUSING% STACK% POINTERS SUBSEC (82 101 108 101 97 115 105 110 103 32 97 110 100 32 82 101 117 115 105 110 103 32 83 116 97 99 107 32 80 111 105 110 116 101 114 115) NIL (5 2 11) 9)(RELEASING% STACK% POINTERS TERM Releasing% stack% pointers (*PRIMARY*) (5 2 11) 9)(RELEASINGSTACKPOINTERS TAG NIL NIL (5 2 11) 9)(STACK% POINTERS TERM Stack% pointers NIL (5 2 11) 9)(STACKP (Function) ((FONT . LISP) 40 83 84 65 67 75 80 32 (FONT . ARG) 88 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (5 2 11) 9)(RELSTK (Function) ((FONT . LISP) 40 82 69 76 83 84 75 32 (FONT . ARG) 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (5 2 11) 9)(RELSTKP (Function) ((FONT . LISP) 40 82 69 76 83 84 75 80 32 (FONT . ARG) 88 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (5 2 11) 9)(CLEARSTK (Function) ((FONT . LISP) 40 67 76 69 65 82 83 84 75 32 (FONT . ARG) 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (5 2 11) 9)(CLEARSTKLST (Variable) ((FONT . LISP) 67 76 69 65 82 83 84 75 76 83 84 (UNDO . FONT)) (*DEF*) (5 2 11) 9)(NOCLEARSTKLST (Variable) ((FONT . LISP) 78 79 67 76 69 65 82 83 84 75 76 83 84 (UNDO . FONT)) (*DEF*) (5 2 11) 10)(STACK% OVERFLOW (Error Message) NIL NIL (5 2 11) 10)(RELSTK (Function) NIL NIL (5 2 11) 10)(REUSING% STACK% POINTERS TERM Reusing% stack% pointers (*PRIMARY*) (5 2 11) 10)(BACKTRACE% FUNCTIONS SUBSEC (66 97 99 107 116 114 97 99 101 32 70 117 110 99 116 105 111 110 115) NIL (6 2 11) 11)(BACKTRACE% FUNCTIONS TERM Backtrace% functions (*PRIMARY*) (6 2 11) 11)(BACKTRACE (Function) ((FONT . LISP) 40 66 65 67 75 84 82 65 67 69 32 (FONT . ARG) 73 80 79 83 32 69 80 79 83 32 70 76 65 71 83 32 70 73 76 69 32 80 82 73 78 84 70 78 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (6 2 11) 11)(BAKTRACE (Function) ((FONT . LISP) 40 66 65 75 84 82 65 67 69 32 (FONT . ARG) 73 80 79 83 32 69 80 79 83 32 83 75 73 80 70 78 83 32 70 76 65 71 83 32 70 73 76 69 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (6 2 11) 11)(SHOWPRINT (Function) NIL NIL (6 2 11) 12)(SYSPRETTYFLG (Variable) NIL NIL (6 2 11) 12)(BAKTRACELST (Variable) ((FONT . LISP) 66 65 75 84 82 65 67 69 76 83 84 (UNDO . FONT)) (*DEF*) (6 2 11) 12)(OTHER% STACK% FUNCTIONS SUBSEC (79 116 104 101 114 32 83 116 97 99 107 32 70 117 110 99 116 105 111 110 115) NIL (7 2 11) 13)(DUMMYFRAMEP (Function) ((FONT . LISP) 40 68 85 77 77 89 70 82 65 77 69 80 32 (FONT . ARG) 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (7 2 11) 13)(REALFRAMEP (Function) ((FONT . LISP) 40 82 69 65 76 70 82 65 77 69 80 32 (FONT . ARG) 80 79 83 32 73 78 84 69 82 80 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (7 2 11) 13)(REALSTKNTH (Function) ((FONT . LISP) 40 82 69 65 76 83 84 75 78 84 72 32 (FONT . ARG) 78 32 80 79 83 32 73 78 84 69 82 80 70 76 71 32 79 76 68 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (7 2 11) 13)(MAPDL (Function) ((FONT . LISP) 40 77 65 80 68 76 32 (FONT . ARG) 77 65 80 68 76 70 78 32 77 65 80 68 76 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (7 2 11) 13)(SEARCHPDL (Function) ((FONT . LISP) 40 83 69 65 82 67 72 80 68 76 32 (FONT . ARG) 83 82 67 72 70 78 32 83 82 67 72 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (7 2 11) 14)(THE% STACK% AND% THE% INTERPRETER SUBSEC (84 104 101 32 83 116 97 99 107 32 97 110 100 32 116 104 101 32 73 110 116 101 114 112 114 101 116 101 114) NIL (3 11) 14)(STACK% AND% THE% INTERPRETER TERM Stack% and% the% interpreter (*PRIMARY*) (3 11) 14)(INTERPRETER% AND% THE% STACK TERM Interpreter% and% the% stack (*PRIMARY*) (3 11) 14)(BLIPS% ON% THE% STACK TERM Blips% on% the% stack (*PRIMARY*) (3 11) 14)(INTERPRETOR% BLIPS% ON% THE% STACK TERM Interpretor% blips% on% the% stack (*PRIMARY*) (3 11) 14)(INTERPRETERBLIPS TAG NIL NIL (3 11) 14)(ARG (Stack blip) ((FONT . LISP) 42 65 82 71 (FONT . ARG) 78 (UNDO . FONT) (UNDO . FONT)) NIL (3 11) 15)(*ARG (Stack blip) ((FONT . LISP) 42 65 82 71 (FONT . ARG) 78 (UNDO . FONT) (UNDO . FONT)) NIL (3 11) 15)(FN (stack blip) ((FONT . LISP) 42 70 78 42 (UNDO . FONT)) NIL (3 11) 16)(*FN* (stack blip) NIL (*PRIMARY*) (3 11) 16)(ARGVAL (stack blip) ((FONT . LISP) 42 65 82 71 86 65 76 42 (UNDO . FONT)) NIL (3 11) 16)(*ARGVAL* (stack blip) NIL (*PRIMARY*) (3 11) 16)(FORM (stack blip) ((FONT . LISP) 42 70 79 82 77 42 (UNDO . FONT)) NIL (3 11) 16)(*FORM* (stack blip) NIL (*PRIMARY*) (3 11) 16)(TAIL (stack blip) ((FONT . LISP) 42 84 65 73 76 42 (UNDO . FONT)) NIL (3 11) 16)(*TAIL* (stack blip) NIL (*PRIMARY*) (3 11) 16)(BLIPVAL (Function) ((FONT . LISP) 40 66 76 73 80 86 65 76 32 (FONT . ARG) 66 76 73 80 84 89 80 32 73 80 79 83 32 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 11) 16)(SETBLIPVAL (Function) ((FONT . LISP) 40 83 69 84 66 76 73 80 86 65 76 32 (FONT . ARG) 66 76 73 80 84 89 80 32 73 80 79 83 32 78 32 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 11) 16)(BLIPSCAN (Function) ((FONT . LISP) 40 66 76 73 80 83 67 65 78 32 (FONT . ARG) 66 76 73 80 84 89 80 32 73 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 11) 16)(GENERATORS SUBSEC (71 101 110 101 114 97 116 111 114 115) NIL (4 11) 16)(GENERATORS TERM Generators (*PRIMARY*) (4 11) 16)(GENERATORS TAG NIL NIL (4 11) 16)(GENERATOR (Function) ((FONT . LISP) 40 71 69 78 69 82 65 84 79 82 32 (FONT . ARG) 70 79 82 77 32 67 79 77 86 65 82 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 11) 17)(GENERATOR% HANDLES TERM Generator% handles (*PRIMARY*) (4 11) 17)(PRODUCE (Function) ((FONT . LISP) 40 80 82 79 68 85 67 69 32 (FONT . ARG) 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 11) 17)(GENERATE (Function) ((FONT . LISP) 40 71 69 78 69 82 65 84 69 32 (FONT . ARG) 72 65 78 68 76 69 32 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 11) 17)(OUTOF (I.S. Operator) NIL (*PRIMARY*) (4 11) 18)(COROUTINES SUBSEC (67 111 114 111 117 116 105 110 101 115) NIL (5 11) 18)(COROUTINES TERM Coroutines (*PRIMARY*) (5 11) 18)(COROUTINE (Function) ((FONT . LISP) 40 67 79 82 79 85 84 73 78 69 32 (FONT . ARG) 67 65 76 76 80 84 82 32 67 79 82 79 85 84 80 84 82 32 67 79 82 79 85 84 70 79 82 77 32 69 78 68 70 79 82 77 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (5 11) 19)(RESUME (Function) ((FONT . LISP) 40 82 69 83 85 77 69 32 (FONT . ARG) 70 82 79 77 80 84 82 32 84 79 80 84 82 32 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (5 11) 19)(POSSIBILITIES% LISTS SUBSEC (80 111 115 115 105 98 105 108 105 116 105 101 115 32 76 105 115 116 115) NIL (6 11) 20)(POSSIBILITIES% LISTS TERM Possibilities% lists (*PRIMARY*) (6 11) 20)(POSSIBILITIES (Function) ((FONT . LISP) 40 80 79 83 83 73 66 73 76 73 84 73 69 83 32 (FONT . ARG) 70 79 82 77 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (6 11) 20)(NOTE (Function) ((FONT . LISP) 40 78 79 84 69 32 (FONT . ARG) 86 65 76 32 76 83 84 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (6 11) 20)(AU-REVOIR (Function) ((FONT . LISP) 40 65 85 45 82 69 86 79 73 82 32 (FONT . ARG) 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (6 11) 21)(ADIEU (Function) ((FONT . LISP) 40 65 68 73 69 85 32 (FONT . ARG) 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (6 11) 21)(TRYNEXT (Function) ((FONT . LISP) 40 84 82 89 78 69 88 84 32 (FONT . ARG) 80 76 83 84 32 69 78 68 70 79 82 77 32 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (6 11) 21)(CLEANPOSLST (Function) ((FONT . LISP) 40 67 76 69 65 78 80 79 83 76 83 84 32 (FONT . ARG) 80 76 83 84 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (6 11) 21)