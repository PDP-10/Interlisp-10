(VARIABLE% BINDINGS% AND% THE% INTERLISP% STACK CHAPTER (86 65 82 73 65 66 76 69 32 66 73 78 68 73 78 71 83 32 65 78 68 32 84 72 69 32 73 78 84 69 82 76 73 83 80 32 83 84 65 67 75) NIL (7) CHAPSTACK.IM;3 115)(STACK TAG NIL NIL (7) CHAPSTACK.IM;3 174)(PUSHDOWN% LIST TERM pushdown% list (*BEGIN*) (7) STACKORG.IM;5 256)(VARIABLE% BINDINGS TERM variable% bindings (*BEGIN*) (7) STACKORG.IM;5 290)(VARIABLE% BINDINGS TERM variable% bindings (*PRIMARY*) (7) STACKORG.IM;5 326)(ASSOCIATION% LIST TERM association% list NIL (7) STACKORG.IM;5 544)(VALUE% CELL TERM value% cell (*PRIMARY*) (7) STACKORG.IM;5 742)(SHALLOW% BINDING TERM shallow% binding (*PRIMARY*) (7) STACKORG.IM;5 1033)(BASIC% FRAME TERM basic% frame NIL (7) STACKORG.IM;5 1305)(DEEP% BINDING TERM deep% binding (*PRIMARY*) (7) STACKORG.IM;5 2071)(THE% SPAGHETTI% STACK SUBSEC (84 104 101 32 83 112 97 103 104 101 116 116 105 32 83 116 97 99 107) NIL (1 7) STACKORG.IM;5 4046)(SPAGHETTI% STACKS TERM spaghetti% stacks (*BEGIN*) (1 7) STACKORG.IM;5 4081)(RETURN% LINK TERM return% link NIL (1 7) STACKORG.IM;5 5117)(FRAME% EXTENSION TERM frame% extension NIL (1 7) STACKORG.IM;5 5421)(FRAMES TERM frames NIL (1 7) STACKORG.IM;5 5448)(FRAME TERM frame NIL (1 7) STACKORG.IM;5 5460)(FRAME% EXTENSION TERM frame% extension NIL (1 7) STACKORG.IM;5 5491)(FRAME% NAME TERM frame% name NIL (1 7) STACKORG.IM;5 5575)(BLINK TERM NIL NIL (1 7) STACKORG.IM;5 5641)(ALINK TERM NIL NIL (1 7) STACKORG.IM;5 5710)(CLINK TERM NIL NIL (1 7) STACKORG.IM;5 5733)(BASIC% FRAME TERM basic% frame (*PRIMARY*) (1 7) STACKORG.IM;5 5989)(ACCESS% CHAIN TERM access% chain NIL (1 7) STACKORG.IM;5 6466)(CONTROL% CHAIN TERM control% chain NIL (1 7) STACKORG.IM;5 6627)(FRAME% EXTENSION TERM frame% extension NIL (1 7) STACKORG.IM;5 6671)(ACTIVE% FRAME TERM active% frame NIL (1 7) STACKORG.IM;5 7320)(FRAME% NAME TERM frame% name NIL (1 7) STACKORG.IM;5 7525)(STACK% POINTER TERM stack% pointer NIL (1 7) STACKORG.IM;5 8430)(EQPSTACKPOINTERS TAG NIL NIL (1 7) STACKORG.IM;5 9081)(CONTEXT% SWITCHING TERM context% switching NIL (1 7) STACKORG.IM;5 10339)(STACK% FUNCTIONS SUBSEC (83 116 97 99 107 32 70 117 110 99 116 105 111 110 115) NIL (2 7) STACKFNS.IM;10 62)(STACK% FUNCTIONS TERM stack% functions (*BEGIN*) (2 7) STACKFNS.IM;10 95)(STACK% DESCRIPTOR TERM stack% descriptor NIL (2 7) STACKFNS.IM;10 222)(ILLEGAL% STACK% ARG (Error Message) NIL NIL (2 7) STACKFNS.IM;10 796)(STACK% POINTER% HAS% BEEN% RELEASED (Error Message) NIL NIL (2 7) STACKFNS.IM;10 1256)(STKPOS (Function) ((FONT . LISP) 40 83 84 75 80 79 83 32 (FONT . ARG) 78 65 77 69 32 78 32 80 79 83 32 79 76 68 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 1694)(STKNTH (Function) ((FONT . LISP) 40 83 84 75 78 84 72 32 (FONT . ARG) 78 32 80 79 83 32 79 76 68 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 2573)(STKNAME (Function) ((FONT . LISP) 40 83 84 75 78 65 77 69 32 (FONT . ARG) 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 3313)(SETSTKNAME (Function) ((FONT . LISP) 40 83 69 84 83 84 75 78 65 77 69 32 (FONT . ARG) 80 79 83 32 78 65 77 69 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 3450)(STKNTHNAME (Function) ((FONT . LISP) 40 83 84 75 78 84 72 78 65 77 69 32 (FONT . ARG) 78 32 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 3600)(DUMMYFRAMEP (Function) ((FONT . LISP) 40 68 85 77 77 89 70 82 65 77 69 80 32 (FONT . ARG) 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 4047)(REALFRAMEP (Function) ((FONT . LISP) 40 82 69 65 76 70 82 65 77 69 80 32 (FONT . ARG) 80 79 83 32 73 78 84 69 82 80 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 4599)(REALSTKNTH (Function) ((FONT . LISP) 40 82 69 65 76 83 84 75 78 84 72 32 (FONT . ARG) 78 32 80 79 83 32 73 78 84 69 82 80 70 76 71 32 79 76 68 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 5099)(BINDINGS% IN% A% BASIC% FRAME TERM bindings% in% a% basic% frame NIL (2 7) STACKFNS.IM;10 5342)(ILLEGAL% ARG (Error Message) NIL NIL (2 7) STACKFNS.IM;10 5804)(STKSCAN (Function) ((FONT . LISP) 40 83 84 75 83 67 65 78 32 (FONT . ARG) 86 65 82 32 73 80 79 83 32 79 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 6650)(FRAMESCAN (Function) ((FONT . LISP) 40 70 82 65 77 69 83 67 65 78 32 (FONT . ARG) 65 84 79 77 32 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 6982)(STKARG (Function) ((FONT . LISP) 40 83 84 75 65 82 71 32 (FONT . ARG) 78 32 80 79 83 32 (TEXT (123) 123) 45 45 45 (TEXT (125) 125) (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 7181)(STKARGNAME (Function) ((FONT . LISP) 40 83 84 75 65 82 71 78 65 77 69 32 (FONT . ARG) 78 32 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 7407)(SETSTKARG (Function) ((FONT . LISP) 40 83 69 84 83 84 75 65 82 71 32 (FONT . ARG) 78 32 80 79 83 32 86 65 76 85 69 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 7637)(SETSTKARGNAME (Function) ((FONT . LISP) 40 83 69 84 83 84 75 65 82 71 78 65 77 69 32 (FONT . ARG) 78 32 80 79 83 32 78 65 77 69 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 7884)(STKNARGS (Function) ((FONT . LISP) 40 83 84 75 78 65 82 71 83 32 (FONT . ARG) 80 79 83 32 (TEXT (123) 123) 45 45 45 (TEXT (125) 125) (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 8317)(BASIC% FRAME TERM basic% frame NIL (2 7) STACKFNS.IM;10 8382)(VARIABLES (Function) ((FONT . LISP) 40 86 65 82 73 65 66 76 69 83 32 (FONT . ARG) 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 8501)(STKARGS (Function) ((FONT . LISP) 40 83 84 75 65 82 71 83 32 (FONT . ARG) 80 79 83 32 (TEXT (123) 123) 45 45 45 (TEXT (125) 125) (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 8829)(ENVEVAL (Function) ((FONT . LISP) 40 69 78 86 69 86 65 76 32 (FONT . ARG) 70 79 82 77 32 65 80 79 83 32 67 80 79 83 32 65 70 76 71 32 67 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 9207)(ALINK TERM ALINK NIL (2 7) STACKFNS.IM;10 9407)(CLINK TERM CLINK NIL (2 7) STACKFNS.IM;10 9487)(ENVAPPLY (Function) ((FONT . LISP) 40 69 78 86 65 80 80 76 89 32 (FONT . ARG) 70 78 32 65 82 71 83 32 65 80 79 83 32 67 80 79 83 32 65 70 76 71 32 67 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 9809)(STKEVAL (Function) ((FONT . LISP) 40 83 84 75 69 86 65 76 32 (FONT . ARG) 80 79 83 32 70 79 82 77 32 70 76 71 32 (TEXT (123) 123) 45 45 45 (TEXT (125) 125) (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 10048)(STKAPPLY (Function) ((FONT . LISP) 40 83 84 75 65 80 80 76 89 32 (FONT . ARG) 80 79 83 32 70 78 32 65 82 71 83 32 70 76 71 32 (TEXT (123) 123) 45 45 45 (TEXT (125) 125) (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 10398)(RETEVAL (Function) ((FONT . LISP) 40 82 69 84 69 86 65 76 32 (FONT . ARG) 80 79 83 32 70 79 82 77 32 70 76 71 32 (TEXT (123) 123) 45 45 45 (TEXT (125) 125) (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 10526)(RETAPPLY (Function) ((FONT . LISP) 40 82 69 84 65 80 80 76 89 32 (FONT . ARG) 80 79 83 32 70 78 32 65 82 71 83 32 70 76 71 32 (TEXT (123) 123) 45 45 45 (TEXT (125) 125) (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 11024)(RETFROM (Function) ((FONT . LISP) 40 82 69 84 70 82 79 77 32 (FONT . ARG) 80 79 83 32 86 65 76 32 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 11143)(RETTO (Function) ((FONT . LISP) 40 82 69 84 84 79 32 (FONT . ARG) 80 79 83 32 86 65 76 32 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 11794)(EVALV (Function) ((FONT . LISP) 40 69 86 65 76 86 32 (FONT . ARG) 86 65 82 32 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 11920)(NOBIND (Litatom) NIL NIL (2 7) STACKFNS.IM;10 12136)(STACKP (Function) ((FONT . LISP) 40 83 84 65 67 75 80 32 (FONT . ARG) 88 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 12475)(RELSTK (Function) ((FONT . LISP) 40 82 69 76 83 84 75 32 (FONT . ARG) 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 12599)(RELSTKP (Function) ((FONT . LISP) 40 82 69 76 83 84 75 80 32 (FONT . ARG) 88 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 12797)(CLEARSTK (Function) ((FONT . LISP) 40 67 76 69 65 82 83 84 75 32 (FONT . ARG) 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 12925)(CLEARSTKLST (Variable) ((FONT . LISP) 67 76 69 65 82 83 84 75 76 83 84 (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 13140)(EVALQT (Function) NIL (*IMPLICIT*) (2 7) STACKFNS.IM;10 13181)(EVALQT (Function) NIL (*IMPLICIT*) (2 7) STACKFNS.IM;10 13206)(NOCLEARSTKLST (Variable) ((FONT . LISP) 78 79 67 76 69 65 82 83 84 75 76 83 84 (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 13647)(EVALQT (Function) NIL (*IMPLICIT*) (2 7) STACKFNS.IM;10 13688)(COPYSTK (Function) ((FONT . LISP) 40 67 79 80 89 83 84 75 32 (FONT . ARG) 80 79 83 49 32 80 79 83 50 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 14208)(MAPDL (Function) ((FONT . LISP) 40 77 65 80 68 76 32 (FONT . ARG) 77 65 80 68 76 70 78 32 77 65 80 68 76 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 14755)(SEARCHPDL (Function) ((FONT . LISP) 40 83 69 65 82 67 72 80 68 76 32 (FONT . ARG) 83 82 67 72 70 78 32 83 82 67 72 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 15238)(BACKTRACE TERM backtrace NIL (2 7) STACKFNS.IM;10 15599)(BACKTRACE (Function) ((FONT . LISP) 40 66 65 67 75 84 82 65 67 69 32 (FONT . ARG) 73 80 79 83 32 69 80 79 83 32 70 76 65 71 83 32 70 73 76 69 32 80 82 73 78 84 70 78 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 15671)(BAKTRACE (Function) ((FONT . LISP) 40 66 65 75 84 82 65 67 69 32 (FONT . ARG) 73 80 79 83 32 69 80 79 83 32 83 75 73 80 70 78 83 32 70 76 65 71 83 32 70 73 76 69 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 17008)(SHOWPRINT (Function) NIL NIL (2 7) STACKFNS.IM;10 17350)(SYSPRETTYFLG (Variable) NIL NIL (2 7) STACKFNS.IM;10 17439)(BAKTRACELST (Variable) ((FONT . LISP) 66 65 75 84 82 65 67 69 76 83 84 (UNDO . FONT)) (*DEF*) (2 7) STACKFNS.IM;10 18282)(STACK% FUNCTIONS TERM stack% functions (*END*) (2 7) STACKFNS.IM;10 21280)(RELEASING% AND% REUSING% STACK% POINTERS SUBSEC (82 101 108 101 97 115 105 110 103 32 97 110 100 32 82 101 117 115 105 110 103 32 83 116 97 99 107 32 80 111 105 110 116 101 114 115) NIL (3 7) STACKFNS.IM;10 21421)(RELEASING% STACK% POINTERS TERM releasing% stack% pointers NIL (3 7) STACKFNS.IM;10 21455)(RELEASINGSTACKPOINTERS TAG NIL NIL (3 7) STACKFNS.IM;10 21485)(STACK% OVERFLOW (Error Message) NIL NIL (3 7) STACKFNS.IM;10 21904)(RELSTK (Function) NIL NIL (3 7) STACKFNS.IM;10 22913)(REUSING% STACK% POINTERS TERM reusing% stack% pointers NIL (3 7) STACKFNS.IM;10 23752)(THE% PUSH-DOWN% LIST% AND% THE% INTERPRETER SUBSEC (84 104 101 32 80 117 115 104 45 68 111 119 110 32 76 105 115 116 32 97 110 100 32 116 104 101 32 73 110 116 101 114 112 114 101 116 101 114) NIL (4 7) INTERPRETERBLIPS.IM;5 107)(PUSHDOWN% LIST TERM pushdown% list (*PRIMARY*) (4 7) INTERPRETERBLIPS.IM;5 141)(INTERPRETERBLIPS TAG NIL NIL (4 7) INTERPRETERBLIPS.IM;5 167)(BACKTRACE TERM backtrace NIL (4 7) INTERPRETERBLIPS.IM;5 2546)(*ARG1 (as a blip on the stack) NIL NIL (4 7) INTERPRETERBLIPS.IM;5 3213)(BLIP% FUNCTIONS TERM blip% functions NIL (4 7) INTERPRETERBLIPS.IM;5 4004)(BLIPS TERM blips NIL (4 7) INTERPRETERBLIPS.IM;5 4018)(*FN* (as a blip on the stack) NIL NIL (4 7) INTERPRETERBLIPS.IM;5 4532)(*ARGVAL* (as a blip on the stack) NIL NIL (4 7) INTERPRETERBLIPS.IM;5 4647)(*FORM* (as a blip on the stack) NIL NIL (4 7) INTERPRETERBLIPS.IM;5 4762)(*TAIL* (as a blip on the stack) NIL NIL (4 7) INTERPRETERBLIPS.IM;5 4867)(BLIPVAL (Function) ((FONT . LISP) 40 66 76 73 80 86 65 76 32 (FONT . ARG) 66 76 73 80 84 89 80 32 73 80 79 83 32 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 7) INTERPRETERBLIPS.IM;5 5028)(SETBLIPVAL (Function) ((FONT . LISP) 40 83 69 84 66 76 73 80 86 65 76 32 (FONT . ARG) 66 76 73 80 84 89 80 32 73 80 79 83 32 78 32 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 7) INTERPRETERBLIPS.IM;5 5470)(BLIPSCAN (Function) ((FONT . LISP) 40 66 76 73 80 83 67 65 78 32 (FONT . ARG) 66 76 73 80 84 89 80 32 73 80 79 83 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (4 7) INTERPRETERBLIPS.IM;5 5746)(GENERATORS% AND% COROUTINES SUBSEC (71 101 110 101 114 97 116 111 114 115 32 97 110 100 32 67 111 114 111 117 116 105 110 101 115) NIL (5 7) GENERATORSANDCOROUTINES.IM;6 81)(COROUTINES TERM coroutines NIL (5 7) GENERATORSANDCOROUTINES.IM;6 459)(GENERATORS TERM generators NIL (5 7) GENERATORSANDCOROUTINES.IM;6 478)(GENERATORS SUBSEC (71 101 110 101 114 97 116 111 114 115) NIL (1 5 7) GENERATORSANDCOROUTINES.IM;6 728)(GENERATORS TAG NIL NIL (1 5 7) GENERATORSANDCOROUTINES.IM;6 747)(GENERATORS TERM generators NIL (1 5 7) GENERATORSANDCOROUTINES.IM;6 783)(GENERATOR (Function) ((FONT . LISP) 40 71 69 78 69 82 65 84 79 82 32 (FONT . ARG) 70 79 82 77 35 35 32 67 79 77 86 65 82 35 35 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (1 5 7) GENERATORSANDCOROUTINES.IM;6 2299)(GENERATOR% HANDLE TERM generator% handle NIL (1 5 7) GENERATORSANDCOROUTINES.IM;6 2459)(PRODUCE (Function) ((FONT . LISP) 40 80 82 79 68 85 67 69 32 (FONT . ARG) 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (1 5 7) GENERATORSANDCOROUTINES.IM;6 2786)(GENERATE (Function) ((FONT . LISP) 40 71 69 78 69 82 65 84 69 32 (FONT . ARG) 72 65 78 68 76 69 32 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (1 5 7) GENERATORSANDCOROUTINES.IM;6 2956)(OUTOF (I.S. Operator) NIL (*PRIMARY*) (1 5 7) GENERATORSANDCOROUTINES.IM;6 4091)(COROUTINES SUBSEC (67 111 114 111 117 116 105 110 101 115) NIL (2 5 7) GENERATORSANDCOROUTINES.IM;6 4835)(COROUTINES TERM coroutines (*PRIMARY*) (2 5 7) GENERATORSANDCOROUTINES.IM;6 4865)(COROUTINE (Function) ((FONT . LISP) 40 67 79 82 79 85 84 73 78 69 32 (FONT . ARG) 67 65 76 76 80 84 82 35 35 32 67 79 82 79 85 84 80 84 82 35 35 32 67 79 82 79 85 84 70 79 82 77 35 35 32 69 78 68 70 79 82 77 35 35 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 5 7) GENERATORSANDCOROUTINES.IM;6 5421)(RESUME (Function) ((FONT . LISP) 40 82 69 83 85 77 69 32 (FONT . ARG) 70 82 79 77 80 84 82 32 84 79 80 84 82 32 86 65 76 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (2 5 7) GENERATORSANDCOROUTINES.IM;6 6015)(POSSIBILITIES% LISTS SUBSEC (80 111 115 115 105 98 105 108 105 116 105 101 115 32 76 105 115 116 115) NIL (3 5 7) GENERATORSANDCOROUTINES.IM;6 8164)(POSSIBILITIES% LISTS TERM possibilities% lists NIL (3 5 7) GENERATORSANDCOROUTINES.IM;6 8279)(POSSIBILITIES (Function) ((FONT . LISP) 40 80 79 83 83 73 66 73 76 73 84 73 69 83 32 (FONT . ARG) 70 79 82 77 35 35 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 5 7) GENERATORSANDCOROUTINES.IM;6 8810)(NOTE (Function) ((FONT . LISP) 40 78 79 84 69 32 (FONT . ARG) 86 65 76 32 76 83 84 70 76 71 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 5 7) GENERATORSANDCOROUTINES.IM;6 9299)(AU-REVOIR (Function) ((FONT . LISP) 40 65 85 45 82 69 86 79 73 82 32 (FONT . ARG) 86 65 76 35 35 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 5 7) GENERATORSANDCOROUTINES.IM;6 9900)(ADIEU (Function) ((FONT . LISP) 40 65 68 73 69 85 32 (FONT . ARG) 86 65 76 35 35 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 5 7) GENERATORSANDCOROUTINES.IM;6 10508)(TRYNEXT (Function) ((FONT . LISP) 40 84 82 89 78 69 88 84 32 (FONT . ARG) 80 76 83 84 35 35 32 69 78 68 70 79 82 77 35 35 32 86 65 76 35 35 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 5 7) GENERATORSANDCOROUTINES.IM;6 10667)(CLEANPOSLST (Function) ((FONT . LISP) 40 67 76 69 65 78 80 79 83 76 83 84 32 (FONT . ARG) 80 76 83 84 (FONT . LISP) 41 (UNDO . FONT) (UNDO . FONT) (UNDO . FONT)) (*DEF*) (3 5 7) GENERATORSANDCOROUTINES.IM;6 11432)