(FILECREATED " 6-Sep-84 12:54:48" {ERIS}<LISPCORE>SOURCES>ADIR.;6 32773        changes to:  (FNS \REVALIDATEFILELST)      previous date: "22-Aug-84 14:22:42" {ERIS}<LISPCORE>SOURCES>ADIR.;5)(* Copyright (c) 1981, 1982, 1983, 1984 by Xerox Corporation. All rights reserved.)(PRETTYCOMPRINT ADIRCOMS)(RPAQQ ADIRCOMS [[COMS (* user-level i/o routines)		       (FNS DELFILE FULLNAME INFILE INFILEP IOFILE OPENFILE OPENSTREAM OUTFILE 			    OUTFILEP RENAMEFILE SIMPLE.FINDFILE)		       (P (MOVD? (QUOTE SIMPLE.FINDFILE)				 (QUOTE FINDFILE]		 (COMS (FNS FILENAMEFIELD PACKFILENAME UNPACKFILENAME LASTCHPOS)		       (DECLARE: DONTCOPY (MACROS UNPACKFILE1 UNPACKFILE2)))		 (COMS (FNS UNPACKFILENAME.STRING PACKFILENAME.STRING)		       (DECLARE: DONTCOPY (MACROS UNPACKFILE1.STRING UNPACKFILE2.STRING)))		 (COMS (* saving and restoring system state)		       (FNS LOGOUT MAKESYS SYSOUT SAVEVM HERALD \REVALIDATEFILELST INTERPRET.REM.CM 			    \USEREVENT)		       (ADDVARS (AROUNDEXITFNS))		       (VARS (HERALDSTRING "")			     (\USERNAME))		       (GLOBALVARS HERALDSTRING USERNAME \USERNAME AROUNDEXITFNS)		       (FNS USERNAME SETUSERNAME)		       (* Temporary patch)		       (FNS GetBcplString SetBcplString))		 (LOCALVARS . T)		 (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS			   (ADDVARS (NLAMA)				    (NLAML)				    (LAMA PACKFILENAME.STRING PACKFILENAME])(* user-level i/o routines)(DEFINEQ(DELFILE  [LAMBDA (FILE)                                             (* bvm: "27-DEC-81 00:10")    (AND (NEQ FILE T)	 (\DELETEFILE FILE])(FULLNAME  [LAMBDA (X RECOG)                                          (* rmk: "22-AUG-83 13:33")    (COND      ((type? STREAM X)	(fetch (STREAM FULLNAME) of X))      (T (SELECTQ RECOG		  (NIL (SETQQ RECOG OLD))		  ((OLD OLD/NEW NEW OLDEST))		  (\ILLEGAL.ARG RECOG))	 (\GETFILENAME X RECOG])(INFILE  [LAMBDA (FILE)                                            (* rmk: " 3-OCT-79 14:23")    (INPUT (OPENFILE FILE (QUOTE INPUT)		     (QUOTE OLD])(INFILEP  [LAMBDA (FILE)                                            (* rmk: " 9-OCT-79 22:39")    (\GETFILENAME FILE (QUOTE OLD])(IOFILE  [LAMBDA (FILE)                                            (* rmk: " 5-SEP-81 13:54")    (OPENFILE FILE (QUOTE BOTH)	      (QUOTE OLD])(OPENFILE  [LAMBDA (FILE ACCESS RECOG BYTESIZE PARAMETERS)            (* rmk: "25-OCT-83 19:48")    (fetch FULLNAME of (OPENSTREAM FILE ACCESS RECOG BYTESIZE PARAMETERS])(OPENSTREAM  [LAMBDA (FILE ACCESS RECOG BYTESIZE PARAMETERS)            (* bvm: "17-NOV-83 16:43")    (PROG (REC OLDSTREAM STREAM)          (SELECTQ ACCESS		   ((INPUT OUTPUT BOTH APPEND))		   (\ILLEGAL.ARG ACCESS))          (SETQ REC (SELECTQ RECOG			     ((EXACT NEW OLD OLD/NEW OLDEST)			       RECOG)			     (NIL (SELECTQ ACCESS					   (INPUT (QUOTE OLD))					   (OUTPUT (QUOTE NEW))					   (QUOTE OLD/NEW)))			     (\ILLEGAL.ARG RECOG)))          [SELECTQ BYTESIZE		   (NIL)		   [8 (push PARAMETERS (QUOTE (TYPE BINARY]		   (COND		     ((AND (LISTP BYTESIZE)			   (NULL PARAMETERS))		       (SETQ PARAMETERS BYTESIZE)		       (SETQ BYTESIZE NIL))		     (T (\ILLEGAL.ARG BYTESIZE]          (COND	    ((OR (EQ FILE T)		 (NULL FILE))          (* Handle T and NIL separately, cause they can return the terminal streams, for which the search isn't necessary 	  and the \ADDOFD shouldn't be done.)	      (SETQ STREAM (\GETSTREAM FILE ACCESS))	      (\DO.PARAMS.AT.OPEN STREAM ACCESS PARAMETERS)	      (RETURN STREAM)))          (* We open the file before looking to see whether it is already open. This guarantees that we acquire the opening 	  rights at the time we lookup the name. We then check to see if it is currently open in Lisp.	  If it is, we return the previous stream, which has the file's current state. -	  There are still potential problems: First, an interrupt can happen while we are doing the search which causes the 	  file to be deleted or re-opened beneath us, BEFORE it gets added to \OPENFILES. Second, a network device might not	  allow multiple openings of the file, even by the same guy with the same mode.)          (SETQ STREAM (\OPENFILE FILE ACCESS REC PARAMETERS))          (COND	    [(SETQ OLDSTREAM (\SEARCHOPENFILES (fetch FULLNAME of STREAM)))	      (COND		((\IOMODEP OLDSTREAM ACCESS T)               (* Dispose of the newly-obtained stream, This might be a							     noop, but a network device (LEAF) cares)		  (OR (EQ STREAM OLDSTREAM)		      (\CLOSEFILE STREAM))		  (\DO.PARAMS.AT.OPEN OLDSTREAM ACCESS PARAMETERS)                                                             (* Do parameters on the old stream)		  (RETURN OLDSTREAM))		(T (LISPERROR "FILE WON'T OPEN" FILE]	    (T (\ADDOFD STREAM)                              (* Parameters done on new stream by \OPENFILE)	       (RETURN STREAM])(OUTFILE  [LAMBDA (FILE)                                            (* rmk: " 3-OCT-79 14:24")    (OUTPUT (OPENFILE FILE (QUOTE OUTPUT)		      (QUOTE NEW])(OUTFILEP  [LAMBDA (FILE)                                            (* rmk: " 9-OCT-79 22:39")    (\GETFILENAME FILE (QUOTE NEW])(RENAMEFILE  [LAMBDA (OLDFILE NEWFILE)                                  (* bvm: " 4-JUN-83 22:37")    (AND OLDFILE NEWFILE (NEQ OLDFILE T)	 (NEQ NEWFILE T)	 (\RENAMEFILE OLDFILE NEWFILE])(SIMPLE.FINDFILE  [LAMBDA (FILE DUMMY DIRLST)                               (* bvm: "31-AUG-81 20:59")    (OR (INFILEP FILE)	(for DIR in DIRLST when (SETQ $$VAL (INFILEP (PACKFILENAME (QUOTE DIRECTORY)								   DIR								   (QUOTE BODY)								   FILE)))	   do (RETURN $$VAL]))(MOVD? (QUOTE SIMPLE.FINDFILE)       (QUOTE FINDFILE))(DEFINEQ(FILENAMEFIELD  [LAMBDA (FILE FIELDNAME)         (* lmm "22-APR-81 22:00")    (UNPACKFILENAME FILE (SELECTQ FIELDNAME				  ((VERSION GENERATION)				    (QUOTE (VERSION GENERATION)))				  ((DEVICE STRUCTURE)				    (QUOTE (DEVICE STRUCTURE)))				  FIELDNAME])(PACKFILENAME  [LAMBDA N                                                  (* bvm: " 7-May-84 16:29")                                                             (* Note: DEVICE and STRUCTURE are identical but are for 							     TENEX and TOPS20 respectively.)    (COND      ((AND (EQ N 1)	    (LISTP (ARG N 1)))                               (* spread argument list)	(APPLY (FUNCTION PACKFILENAME)	       (ARG N 1)))      (T (PROG ((BLIP "")		(I 1)		HOST DEVICE STRUCTURE DIRECTORY NAME EXTENSION VERSION TEMPORARY PROTECTION ACCOUNT 		PACKLIST VAR VAL TEMP)	       (DECLARE (SPECVARS HOST DEVICE STRUCTURE DIRECTORY NAME EXTENSION VERSION TEMPORARY 				  PROTECTION ACCOUNT))	   LP  (COND		 ((NOT (IGREATERP I N))		   (COND		     ((LISTP (SETQ VAR (ARG N I)))		       (SETQ VAL (CDR VAR))		       (SETQ VAR (CAR VAR)))		     ((NOT (IGREATERP (SETQ I (ADD1 I))				      N))		       (SETQ VAL (ARG N I)))		     (T (SETQ VAL)))		   (OR (STRINGP VAL)		       (ATOM VAL)		       (ERRORX (LIST 27 VAL)))               (* fields must be atom)		   (SELECTQ VAR			    (BODY (MAP (UNPACKFILENAME (COND							 ((LISTP VAL)                                                             (* PACKFILENAME for error checking of fields)							   (PACKFILENAME VAL))							 (T VAL)))				       [FUNCTION (LAMBDA (X)                                                             (* NIL => not yet seen, BLIP => seen as NIL.)					   (OR (EVALV (CAR X))					       (SET (CAR X)						    (OR (CADR X)							BLIP]				       (FUNCTION CDDR)))			    [HOST [COND				    ((SETQ TEMP (STRPOS (QUOTE <)							VAL))                                                             (* Host with embedded directory, overrides like BODY)				      (OR DIRECTORY (SETQ DIRECTORY (OR (SUBSTRING VAL TEMP)									BLIP)))				      (SETQ VAL (SUBSTRING VAL 1 (SUB1 TEMP]				  (OR HOST (SETQ HOST (OR VAL BLIP]			    [DIRECTORY [COND					 ((AND (EQ (CHCON1 VAL)						   (CHARCODE {))					       (SETQ TEMP (LASTCHPOS (CHARCODE })								     VAL)))                                                             (* DIRECTORY with embedded HOST, override like BODY)					   (OR HOST (SETQ HOST (OR (SUBSTRING VAL 2 (SUB1 TEMP))								   BLIP)))					   (COND					     ((AND (NEQ (CHCON1 (SETQ VAL (SUBSTRING VAL										     (ADD1 TEMP)										     -1)))							(CHARCODE <))						   (SETQ TEMP (STRPOS (QUOTE :)								      VAL)))					       (OR DEVICE (SETQ DEVICE (SUBSTRING VAL 1 TEMP)))					       (SETQ VAL (SUBSTRING VAL (ADD1 TEMP)								    -1]				       (OR DIRECTORY (SETQ DIRECTORY (OR VAL BLIP]			    [(DEVICE NAME EXTENSION VERSION TEMPORARY)			      (OR (EVALV VAR)				  (SET VAR (OR VAL BLIP]			    (\ILLEGAL.ARG VAR))		   (SETQ I (ADD1 I))		   (GO LP)))	       (SELECTQ TEMPORARY			[(T S ;S)			  (OR HOST DEVICE (PROGN (SETQ HOST (QUOTE CORE))						 (SETQ TEMPORARY]			NIL)	       (RETURN (PACK (NCONC (AND HOST (NEQ HOST BLIP)					 (SELCHARQ [CHCON1 (CAR (SETQ HOST								  (CONS HOST									(COND									  ((NEQ (NTHCHARCODE HOST -1)										(CHARCODE }))									    (CONS (QUOTE }]						   ({ HOST)						   (CONS (QUOTE {)							 HOST)))				    [AND DEVICE (NEQ DEVICE BLIP)					 (SELCHARQ (NTHCHARCODE DEVICE -1)						   (: (LIST DEVICE))						   (LIST DEVICE (QUOTE :]				    (AND DIRECTORY (NEQ DIRECTORY BLIP)					 (SELCHARQ [CHCON1 (CAR (SETQ DIRECTORY								  (CONS DIRECTORY									(COND									  ((NEQ (NTHCHARCODE 											DIRECTORY -1)										(CHARCODE >))									    (CONS (QUOTE >]						   (< DIRECTORY)						   (CONS (QUOTE <)							 DIRECTORY)))				    (AND NAME (NEQ NAME BLIP)					 (LIST NAME))				    (AND (OR (AND EXTENSION (NEQ EXTENSION BLIP))					     (AND VERSION (NEQ VERSION BLIP)))					 (LIST (COND						 ((AND EXTENSION (EQ (CHCON1 EXTENSION)								     (CHARCODE %.)))						   BLIP)						 (T (QUOTE %.)))					       (OR EXTENSION BLIP)))				    [AND VERSION (NEQ VERSION BLIP)					 (COND					   ((FIXP VERSION)					     (LIST (QUOTE ;)						   VERSION))					   (T (SELCHARQ (CHCON1 VERSION)							(; (LIST VERSION))							((%. !)							  (LIST (QUOTE ;)								(SUBSTRING VERSION 2 -1)))							(LIST (QUOTE ;)							      VERSION]				    (AND TEMPORARY (NEQ TEMPORARY BLIP)					 (LIST (QUOTE ;)					       (SELECTQ TEMPORARY							((S ;S)							  (QUOTE S))							T])(UNPACKFILENAME  [LAMBDA (FILE ONEFIELDFLG)                                 (* lmm "17-Aug-84 22:34")    (OR (LITATOM FILE)	(STRINGP FILE)	(ERRORX (LIST 27 FILE)))    (PROG (TEM (POS 1)	       INEXT INVERS VAL CODE)          (OR FILE (RETURN))          [COND	    ((AND (EQ (NTHCHARCODE FILE 1)		      (CHARCODE {))		  (SETQ TEM (LASTCHPOS (CHARCODE })				       FILE 2)))	      (UNPACKFILE1 (QUOTE HOST)			   2			   (SUB1 TEM))	      (SETQ POS (ADD1 TEM]          [COND	    ((SETQ TEM (LASTCHPOS (CHARCODE :)				  FILE POS))                 (* all device returned have : on it so that NIL: will 							     work)	      (UNPACKFILE1 (QUOTE DEVICE)			   POS TEM)	      (SETQ POS (ADD1 TEM]          (SELCHARQ (NTHCHARCODE FILE POS)		    [(< >)		      (COND			((SETQ TEM (LASTCHPOS (CHARCODE >)					      FILE POS))			  (UNPACKFILE1 (QUOTE DIRECTORY)				       (ADD1 POS)				       (SUB1 TEM))			  (SETQ POS (ADD1 TEM)))			((SETQ TEM (LASTCHPOS (CHARCODE ESC)					      FILE POS))			  (UNPACKFILE1 (QUOTE DIRECTORY)				       (ADD1 POS)				       (SETQ POS TEM]		    NIL)          (OR (SETQ CODE (NTHCHARCODE FILE (SETQ TEM POS)))	      (RETURN (DREVERSE VAL)))      NAMELP          (SELCHARQ CODE		    (%.                                      (* delimits end of NAME or EXTENSION)			(UNPACKFILE1 (COND				       ((NOT INEXT)					 (if (AND (SETQ CODE (STRPOS "." FILE (ADD1 TEM)))						  (SETQ CODE (NTHCHAR FILE (ADD1 CODE)))						  (NOT (FIXP CODE)))					     then (GO NEXTCHAR))					 (SETQQ INEXT NAME))				       (T (SETQQ INVERS EXTENSION)))				     POS				     (SUB1 TEM))			(SETQ POS (ADD1 TEM)))		    ((! ;)                                   (* delimits end of NAME EXTENSION VERSION or special 							     field)		      (UNPACKFILE2 POS TEM)		      (SETQ POS (ADD1 TEM)))		    (NIL (UNPACKFILE2 POS TEM)			 (RETURN (DREVERSE VAL)))		    NIL)      NEXTCHAR          (SETQ CODE (NTHCHARCODE FILE (add TEM 1)))          (GO NAMELP)      OUT (RETURN VAL])(LASTCHPOS  [LAMBDA (CH STR START)                                    (* lmm " 3-DEC-80 23:48")    (PROG (RESULT NC)          (OR START (SETQ START 1))          (while (SETQ NC (NTHCHARCODE STR START)) do (COND							((EQ CH NC)							  (SETQ RESULT START)))						      (add START 1))          (RETURN RESULT]))(DECLARE: DONTCOPY (DECLARE: EVAL@COMPILE (PUTPROPS UNPACKFILE1 MACRO [LAMBDA (NAM ST END)             (* lmm "22-APR-81 22:21")			      (PROG NIL				    [COND				      (ONEFIELDFLG (COND						     ((EQMEMB NAM ONEFIELDFLG)						       (SETQ VAL (SUBATOM FILE ST END))						       (GO OUT))						     (T (RETURN]				    (SETQ VAL (CONS (SUBATOM FILE ST END)						    (CONS NAM VAL])(PUTPROPS UNPACKFILE2 MACRO [LAMBDA (POS TEM)                (* lmm "22-APR-81 21:47")			      (UNPACKFILE1 [COND					     ((NOT INEXT)					       (SETQ INVERS (QUOTE ;))					       (SETQQ INEXT NAME))					     ((NOT INVERS)					       (SETQQ INVERS ;)					       (QUOTE EXTENSION))					     (T (SELCHARQ (AND (EQ INVERS (QUOTE ;))							       (NTHCHARCODE FILE POS))							  (P (QUOTE PROTECTION))							  (A (add POS 1)							     (QUOTE ACCOUNT))							  ((T S)							    (QUOTE TEMPORARY))							  (QUOTE VERSION]					   POS					   (SUB1 TEM])))(DEFINEQ(UNPACKFILENAME.STRING  [LAMBDA (FILE ONEFIELDFLG)                                 (* bvm: "22-Jul-84 23:05")    (OR (LITATOM FILE)	(STRINGP FILE)	(ERRORX (LIST 27 FILE)))    (PROG (TEM (POS 1)	       INEXT INVERS VAL CODE)          (OR FILE (RETURN))          [COND	    ((AND (EQ (NTHCHARCODE FILE 1)		      (CHARCODE {))		  (SETQ TEM (LASTCHPOS (CHARCODE })				       FILE 2)))	      (UNPACKFILE1.STRING (QUOTE HOST)				  2				  (SUB1 TEM))	      (SETQ POS (ADD1 TEM]          [COND	    ((AND (NEQ (NTHCHARCODE FILE POS)		       (CHARCODE <))		  (SETQ TEM (LASTCHPOS (CHARCODE :)				       FILE POS)))           (* Note that NIL: comes out as string "NIL" now)	      (UNPACKFILE1.STRING (QUOTE DEVICE)				  POS				  (SUB1 TEM))	      (SETQ POS (ADD1 TEM]          (SELCHARQ (NTHCHARCODE FILE POS)		    [(< >)		      (COND			((SETQ TEM (LASTCHPOS (CHARCODE >)					      FILE POS))			  (UNPACKFILE1.STRING (QUOTE DIRECTORY)					      (ADD1 POS)					      (SUB1 TEM))			  (SETQ POS (ADD1 TEM)))			((SETQ TEM (LASTCHPOS (CHARCODE ESC)					      FILE POS))			  (UNPACKFILE1.STRING (QUOTE DIRECTORY)					      (ADD1 POS)					      (SETQ POS TEM]		    NIL)          (OR (SETQ CODE (NTHCHARCODE FILE (SETQ TEM POS)))	      (RETURN (DREVERSE VAL)))      NAMELP          (SELCHARQ CODE		    (%.                                      (* delimits end of NAME or EXTENSION)			(UNPACKFILE1.STRING (COND					      ((NOT INEXT)						(SETQQ INEXT NAME))					      (T (SETQQ INVERS EXTENSION)))					    POS					    (SUB1 TEM))			(SETQ POS (ADD1 TEM)))		    ((! ;)                                   (* delimits end of NAME EXTENSION VERSION or special 							     field)		      (UNPACKFILE2.STRING POS TEM)		      (SETQ POS (ADD1 TEM)))		    (NIL (UNPACKFILE2.STRING POS TEM)			 (RETURN (DREVERSE VAL)))		    NIL)          (SETQ CODE (NTHCHARCODE FILE (add TEM 1)))          (GO NAMELP)      OUT (RETURN VAL])(PACKFILENAME.STRING  [LAMBDA N                                                  (* bvm: " 7-May-84 17:01")                                                             (* Note: DEVICE and STRUCTURE are identical but are for 							     TENEX and TOPS20 respectively.)    (COND      ((AND (EQ N 1)	    (LISTP (ARG N 1)))                               (* spread argument list)	(APPLY (FUNCTION PACKFILENAME.STRING)	       (ARG N 1)))      (T (PROG ((BLIP "")		(I 1)		HOST DEVICE STRUCTURE DIRECTORY NAME EXTENSION VERSION TEMPORARY PROTECTION ACCOUNT 		PACKLIST VAR VAL TEMP)	       (DECLARE (SPECVARS HOST DEVICE STRUCTURE DIRECTORY NAME EXTENSION VERSION TEMPORARY 				  PROTECTION ACCOUNT))	   LP  (COND		 ((NOT (IGREATERP I N))		   (COND		     ((LISTP (SETQ VAR (ARG N I)))		       (SETQ VAL (CDR VAR))		       (SETQ VAR (CAR VAR)))		     ((NOT (IGREATERP (SETQ I (ADD1 I))				      N))		       (SETQ VAL (ARG N I)))		     (T (SETQ VAL)))		   (OR (STRINGP VAL)		       (ATOM VAL)		       (ERRORX (LIST 27 VAL)))               (* fields must be atom)		   (SELECTQ VAR			    (BODY (MAP (UNPACKFILENAME.STRING (COND								((LISTP VAL)                                                             (* PACKFILENAME.STRING for error checking of fields)								  (PACKFILENAME.STRING VAL))								(T VAL)))				       [FUNCTION (LAMBDA (X)                                                             (* NIL => not yet seen, BLIP => seen as NIL.)					   (OR (EVALV (CAR X))					       (SET (CAR X)						    (OR (CADR X)							BLIP]				       (FUNCTION CDDR)))			    [HOST [COND				    ((SETQ TEMP (STRPOS (QUOTE <)							VAL))                                                             (* Host with embedded directory, overrides like BODY)				      (OR DIRECTORY (SETQ DIRECTORY (OR (SUBSTRING VAL TEMP)									BLIP)))				      (SETQ VAL (SUBSTRING VAL 1 (SUB1 TEMP]				  (OR HOST (SETQ HOST (OR VAL BLIP]			    [DIRECTORY [COND					 ((AND (EQ (CHCON1 VAL)						   (CHARCODE {))					       (SETQ TEMP (LASTCHPOS (CHARCODE })								     VAL)))                                                             (* DIRECTORY with embedded HOST, override like BODY)					   (OR HOST (SETQ HOST (OR (SUBSTRING VAL 2 (SUB1 TEMP))								   BLIP)))					   (COND					     ((AND (NEQ (CHCON1 (SETQ VAL (SUBSTRING VAL										     (ADD1 TEMP)										     -1)))							(CHARCODE <))						   (SETQ TEMP (STRPOS (QUOTE :)								      VAL)))					       (OR DEVICE (SETQ DEVICE (SUBSTRING VAL 1 TEMP)))					       (SETQ VAL (SUBSTRING VAL (ADD1 TEMP)								    -1]				       (OR DIRECTORY (SETQ DIRECTORY (OR VAL BLIP]			    [(DEVICE NAME EXTENSION VERSION TEMPORARY)			      (OR (EVALV VAR)				  (SET VAR (OR VAL BLIP]			    (\ILLEGAL.ARG VAR))		   (SETQ I (ADD1 I))		   (GO LP)))	       (SELECTQ TEMPORARY			[(T S ;S)			  (OR HOST DEVICE (PROGN (SETQ HOST (QUOTE CORE))						 (SETQ TEMPORARY]			NIL)	       (RETURN (CONCATLIST			 (NCONC (AND HOST (NEQ HOST BLIP)				     (SELCHARQ [CHCON1 (CAR (SETQ HOST							      (CONS HOST (COND								      ((NEQ (NTHCHARCODE HOST -1)									    (CHARCODE }))									(CONS (QUOTE }]					       ({ HOST)					       (CONS (QUOTE {)						     HOST)))				[AND DEVICE (NEQ DEVICE BLIP)				     (SELCHARQ (NTHCHARCODE DEVICE -1)					       (: (LIST DEVICE))					       (LIST DEVICE (QUOTE :]				(AND DIRECTORY (NEQ DIRECTORY BLIP)				     (SELCHARQ [CHCON1 (CAR (SETQ DIRECTORY							      (CONS DIRECTORY								    (COND								      ((NEQ (NTHCHARCODE DIRECTORY -1)									    (CHARCODE >))									(CONS (QUOTE >]					       (< DIRECTORY)					       (CONS (QUOTE <)						     DIRECTORY)))				(AND NAME (NEQ NAME BLIP)				     (LIST NAME))				(AND (OR (AND EXTENSION (NEQ EXTENSION BLIP))					 (AND VERSION (NEQ VERSION BLIP)))				     (LIST (COND					     ((AND EXTENSION (EQ (CHCON1 EXTENSION)								 (CHARCODE %.)))					       BLIP)					     (T (QUOTE %.)))					   (OR EXTENSION BLIP)))				[AND VERSION (NEQ VERSION BLIP)				     (COND				       ((FIXP VERSION)					 (LIST (QUOTE ;)					       VERSION))				       (T (SELCHARQ (CHCON1 VERSION)						    (; (LIST VERSION))						    ((%. !)						      (LIST (QUOTE ;)							    (SUBSTRING VERSION 2 -1)))						    (LIST (QUOTE ;)							  VERSION]				(AND TEMPORARY (NEQ TEMPORARY BLIP)				     (LIST (QUOTE ;)					   (SELECTQ TEMPORARY						    ((S ;S)						      (QUOTE S))						    T]))(DECLARE: DONTCOPY (DECLARE: EVAL@COMPILE (PUTPROPS UNPACKFILE1.STRING MACRO [LAMBDA (NAM ST END)      (* lmm "22-APR-81 22:21")				     (PROG NIL				           [COND					     (ONEFIELDFLG (COND							    ((EQMEMB NAM ONEFIELDFLG)							      (SETQ VAL (SUBSTRING FILE ST END))							      (GO OUT))							    (T (RETURN]				           (SETQ VAL (CONS (SUBSTRING FILE ST END)							   (CONS NAM VAL])(PUTPROPS UNPACKFILE2.STRING MACRO [LAMBDA (POS TEM)				     (UNPACKFILE1.STRING [COND							   ((NOT INEXT)							     (SETQ INVERS (QUOTE ;))							     (SETQQ INEXT NAME))							   ((NOT INVERS)							     (SETQQ INVERS ;)							     (QUOTE EXTENSION))							   (T (SELCHARQ (AND (EQ INVERS (QUOTE ;))									     (NTHCHARCODE FILE POS))									(P (QUOTE PROTECTION))									(A (add POS 1)									   (QUOTE ACCOUNT))									((T S)									  (QUOTE TEMPORARY))									(QUOTE VERSION]							 POS							 (SUB1 TEM])))(* saving and restoring system state)(DEFINEQ(LOGOUT  [LAMBDA (FAST)                                             (* bvm: " 3-Apr-84 12:38")    (DECLARE (GLOBALVARS \OPENFILES))    (\USEREVENT (QUOTE BEFORELOGOUT))    (\PROCESS.BEFORE.LOGOUT)    (\DEVICEEVENT (QUOTE BEFORELOGOUT))    (\SETTOTALTIME)                                          (* update the total time that this sysout has been 							     running.)    (\LOGOUT0 FAST)                                          (* Must re-establish the state of devices and of 							     previously open files that might have been modified at 							     the EXEC.)    (\RESETKEYBOARD)    (\DEVICEEVENT (QUOTE AFTERLOGOUT))    (\OPENLINEBUF)    (SETQ \OPENFILES (\REVALIDATEFILELST \OPENFILES))    (\PROCESS.AFTER.EXIT (QUOTE AFTERLOGOUT))    (\USEREVENT (QUOTE AFTERLOGOUT))    (INTERPRET.REM.CM)    NIL])(MAKESYS  [LAMBDA (FILE NAME)                                        (* bvm: " 3-Apr-84 12:07")    (DECLARE (GLOBALVARS \MISCSTATS)	     (SPECVARS FILE NAME))                           (* SPECVARS for BEFOREMAKESYSFORMS)    (\USEREVENT (QUOTE BEFOREMAKESYS))    (HERALD (CONCAT (OR NAME "INTERLISP-D")		    " "		    (SUBSTRING (SETQ MAKESYSDATE (DATE))			       1 9)		    " ..."))    (\DEVICEEVENT (QUOTE BEFOREMAKESYS))    (replace TOTALTIME of \MISCSTATS with 0)                 (* reset totaltime field.)    (SETQ LAST^TKEYBOARDTIME)    (PROG ((NEWFILE (\COPYSYS FILE)))          (RETURN (COND		    ((NLISTP NEWFILE)		      NEWFILE)		    (T (\DEVICEEVENT (QUOTE AFTERMAKESYS))		       (\RESETOFDS)		       (\PROCESS.AFTER.EXIT (QUOTE AFTERMAKESYS))		       (PRIN1 HERALDSTRING T)		       (SETQ RESETFORMS (CONS GREETFORM RESETFORMS))		       (\USEREVENT (QUOTE AFTERMAKESYS))		       (INTERPRET.REM.CM)		       (RESET])(SYSOUT  [LAMBDA (FILE)                                             (* bvm: " 3-Apr-84 12:07")    (DECLARE (GLOBALVARS \MISCSTATS)	     (SPECVARS FILE))                                (* FILE is special so that BEFORESYSOUTFORMS can alter 							     it)    (\USEREVENT (QUOTE BEFORESYSOUT))    (\DEVICEEVENT (QUOTE BEFORESYSOUT))    (PROG ((TOTALTIMESAVE (fetch TOTALTIME of \MISCSTATS))	   NEWFILE)                                          (* update the total time field so that the run time in 							     the sysout will be right.)          (\SETTOTALTIME)          (RETURN (PROG1 (SETQ NEWFILE (\COPYSYS FILE))			 (COND			   ((NLISTP NEWFILE)                 (* Continuing in same sysout;							     reset TOTALTIME in misc stats page to not include the 							     time before the sysout.)			     (replace TOTALTIME of \MISCSTATS with TOTALTIMESAVE))			   (T                                (* restarting)			      (\DEVICEEVENT (QUOTE AFTERSYSOUT))			      (\PROCESS.AFTER.EXIT (QUOTE AFTERSYSOUT))			      (\RESETOFDS)			      (INTERPRET.REM.CM)			      (\USEREVENT (QUOTE AFTERSYSOUT])(SAVEVM  [LAMBDA (RELEASEFLG)                                       (* bvm: " 3-Apr-84 12:31")    (DECLARE (GLOBALVARS \OPENFILES))          (* Save the virtual memory. This is similar to logging out, then back in, but is much faster, since it doesn't 	  lose any pages. Conceptually, this is like doing a sysout to Lisp.virtualmem)    (\USEREVENT (QUOTE BEFORESAVEVM))    (\DEVICEEVENT (QUOTE BEFORESAVEVM))    (COND      ((\FLUSHVM)	(\RESETKEYBOARD)                                     (* Returns T when starting up fresh)	(\DEVICEEVENT (QUOTE AFTERSAVEVM))	(SETQ \OPENFILES (\REVALIDATEFILELST \OPENFILES))	(\PROCESS.AFTER.EXIT (QUOTE AFTERSAVEVM))	(\USEREVENT (QUOTE AFTERSAVEVM))	T])(HERALD  [LAMBDA (STR)                                             (* wt: " 2-MAY-79 15:38")    (AND STR (SETQ HERALDSTRING STR))    HERALDSTRING])(\REVALIDATEFILELST  [LAMBDA (STREAMLST)                                        (* lmm " 6-Sep-84 12:32")          (* STREAMLST is \OPENFILES or a subset of \OPENFILES, in the case when an event (e.g. a host going down) affects 	  only some files.)    (DECLARE (GLOBALVARS \OPENFILES))    [for (STREAMS _ STREAMLST)	 STREAM REASON RECLFLG PAGES while STREAMS       do (COND	    ([SETQ REASON (\REVALIDATEFILE (SETQ STREAM (CAR STREAMS]	      [COND		((AND (EQ REASON (QUOTE DELETED))		      (EQ STREAM \DRIBBLE.OFD))              (* If Dribble file went away, turn it off quick before 							     we get in trouble)		  (UNINTERRUPTABLY                      (SETQ \DRIBBLE.OFD NIL)		      (\REMOVEDRIBBLECHECK (TTYDISPLAYSTREAM)))]	      (COND		((NOT RECLFLG)                               (* Map down the tail of STREAMLST and smash the CPPTR to							     NIL first)		  (for O in STREAMS do (replace CPPTR of O with NIL))		  (SETQ RECLFLG T)		  (RECLAIM)))	      (printout T T T "****WARNING:  The file " (fetch FULLNAME of STREAM))	      (SELECTQ REASON		       (CHANGED (SETQ PAGES (RESTOREMAP STREAM))				(printout T " has been modified since you last accessed it!" T)				(SETQ STREAMS (CDR STREAMS)))		       (DELETED (SETQ PAGES (FORGETPAGES STREAM))				[MAPC (STREAMPROP STREAM (QUOTE AFTERCLOSE))				      (FUNCTION (LAMBDA (FN)					  (APPLY* FN STREAM]				(replace ACCESS of STREAM with NIL)				[COND				  ((NEQ STREAMLST \OPENFILES)				    (SETQ \OPENFILES (DREMOVE STREAM \OPENFILES]				(COND				  ((CDR STREAMS)				    (FRPLNODE2 STREAMS (CDR STREAMS)))				  (T (SETQ STREAMLST (DREMOVE STREAM STREAMLST))				     (SETQ STREAMS NIL)))				(printout T " was previously opened but has disappeared!" T))		       (SHOULDNT))	      (AND PAGES (printout T "You had references to the following pages from that file:  " 				   PAGES T)))	    (T (SETQ STREAMS (CDR STREAMS]    STREAMLST])(INTERPRET.REM.CM  [LAMBDA (RETFLG)                                           (* bvm: "22-Aug-84 14:16")    (DECLARE (GLOBALVARS STARTUPFORM))          (* * Looks at REM.CM and evaluates the form there if the first character of the file is open paren or doublequote.	  If it's a string, it will be unread,, else the form will be evaluated at the next prompt. For use in INIT.LISP, 	  among others. If RETFLG is true, the expression read is simply returned)    (PROG ([FILE (CAR (NLSETQ (OPENSTREAM (QUOTE {DSK}REM.CM;1)					  (QUOTE BOTH]	   COM AUXFILE)          (OR FILE (RETURN))          [COND	    ([AND (IGREATERP (GETFILEINFO FILE (QUOTE LENGTH))			     0)		  (SELCHARQ (\PEEKBIN FILE T)			    ((%( %")			      T)			    NIL)		  (SETQ COM (PROGN (SETFILEINFO FILE (QUOTE ENDOFSTREAMOP)						(FUNCTION ERROR!))				   (CAR (NLSETQ (READ FILE T]	      (COND		(RETFLG                                      (* Save it to return))		((LISTP COM)                                 (* make it happen at next prompt)		  (SETQ STARTUPFORM (LIST (QUOTE PROGN)					  (QUOTE (SETQ PROMPTCHARFORMS (DREMOVE STARTUPFORM 										PROMPTCHARFORMS)))					  (LIST (QUOTE PRINT)						(LIST (QUOTE LISPXEVAL)						      (KWOTE COM))						T T)))		  (SETQ PROMPTCHARFORMS (CONS STARTUPFORM PROMPTCHARFORMS)))		(T                                           (* Unread a string)		   (BKSYSBUF COM)))	      (\SETEOFPTR FILE (COND			    ((NOT (\EOFP FILE))			      (SELCHARQ (\PEEKBIN FILE)					((CR ;)              (* Eat up the command terminator)					  (\BIN FILE))					NIL)                 (* Need to rewrite REM.CM with remainder of text)			      (SETQ AUXFILE (OPENSTREAM (QUOTE {NODIRCORE})							(QUOTE BOTH)							(QUOTE NEW)))			      (COPYBYTES FILE AUXFILE)			      (SETFILEPTR FILE 0)			      (COPYBYTES AUXFILE FILE 0 (GETFILEPTR AUXFILE))			      (CLOSEF AUXFILE)			      (GETFILEPTR FILE))			    (T 0]          (CLOSEF FILE)          (RETURN (COND		    (RETFLG COM)		    (COM T])(\USEREVENT  [LAMBDA (EVENT)    (DECLARE (GLOBALVARS AROUNDEXITFNS))                     (* bvm: "16-Dec-83 15:27")    (for FN in (SELECTQ EVENT			((BEFORELOGOUT BEFORESYSOUT BEFORESAVEVM BEFOREMAKESYS)			  AROUNDEXITFNS)			(REVERSE AROUNDEXITFNS))       do (APPLY* FN EVENT]))(ADDTOVAR AROUNDEXITFNS )(RPAQ HERALDSTRING "")(RPAQQ \USERNAME NIL)(DECLARE: DOEVAL@COMPILE DONTCOPY(GLOBALVARS HERALDSTRING USERNAME \USERNAME AROUNDEXITFNS))(DEFINEQ(USERNAME  [LAMBDA (FLG STRPTR PRESERVECASE)                                   (* lmm "28-MAR-82 14:10")                                   (* On 10, USERNAME can take a user number as arg)    (PROG (ADDR NAME)          (SETQ NAME (COND	      (FLG NIL)	      ((NEQ 0 (SETQ ADDR (fetch (IFPAGE UserNameAddr) of \InterfacePage)))		(GetBcplString (\ADDBASE (EMADDRESS 0)					 ADDR)			       (EQ STRPTR T)))	      (T \USERNAME)))          (OR PRESERVECASE (NULL NAME)	      (SETQ NAME (U-CASE NAME)))          (RETURN (COND		    ((NULL NAME)		      NIL)		    ((STRINGP STRPTR)		      (SUBSTRING NAME 1 -1 STRPTR))		    (T NAME])(SETUSERNAME  [LAMBDA (NAME)                   (* lmm "28-MAR-82 14:11")                                   (* Changed interpretation of UserName0)    (COND      (NAME (PROG ((ADDR (fetch (IFPAGE UserNameAddr) of \InterfacePage)))	          (RETURN (COND			    ((NEQ ADDR 0)			      (SetBcplString (\ADDBASE (EMADDRESS 0)						       ADDR)					     NAME)			      (SETQ USERNAME (USERNAME NIL T)))			    (T (SETQ \USERNAME (CONCAT NAME]))(* Temporary patch)(DEFINEQ(GetBcplString  [LAMBDA (BS ATOMFLG)                                      (* bvm: " 1-MAY-81 21:38")          (* Returns as a Lisp string the Bcpl string stored at BS. Format is one byte length, follwed by chars.	  If ATOMFLG is true, returns result as an atom)    (PROG (S (L (GETBASEBYTE BS 0)))          (COND	    ((AND ATOMFLG (ILEQ L \PNAMELIMIT))	      (RETURN (\MKATOM BS 1 L)))	    (T (SETQ S (ALLOCSTRING L))	       (for I to L do (RPLCHARCODE S I (GETBASEBYTE BS I)))	       (RETURN (COND			 (ATOMFLG                           (* Let MKATOM handle the error)				  (MKATOM S))			 (T S])(SetBcplString  [LAMBDA (BS LS)                                           (* lmm "17-MAY-80 20:21")    (PROG ((L (NCHARS LS)))          (COND	    ((IGREATERP L 255)	      (LISPERROR "ILLEGAL ARG" BS)))          (PUTBASEBYTE BS 0 L)          (for I to L do (PUTBASEBYTE BS I (NTHCHARCODE LS I)))          (RETURN BS]))(DECLARE: DOEVAL@COMPILE DONTCOPY(LOCALVARS))(DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDTOVAR NLAMA )(ADDTOVAR NLAML )(ADDTOVAR LAMA PACKFILENAME.STRING PACKFILENAME))(PUTPROPS ADIR COPYRIGHT ("Xerox Corporation" 1981 1982 1983 1984))(DECLARE: DONTCOPY  (FILEMAP (NIL (1449 5896 (DELFILE 1459 . 1607) (FULLNAME 1609 . 1932) (INFILE 1934 . 2100) (INFILEP 2102 . 2241) (IOFILE 2243 . 2401) (OPENFILE 2403 . 2595) (OPENSTREAM 2597 . 5056) (OUTFILE 5058 . 5228) (OUTFILEP 5230 . 5370) (RENAMEFILE 5372 . 5571) (SIMPLE.FINDFILE 5573 . 5894)) (5953 13132 (FILENAMEFIELD 5963 . 6240) (PACKFILENAME 6242 . 10710) (UNPACKFILENAME 10712 . 12790) (LASTCHPOS 12792 . 13130)) (14119 20674 (UNPACKFILENAME.STRING 14129 . 16126) (PACKFILENAME.STRING 16128 . 20672)) (21694 30103 (LOGOUT 21704 . 22578) (MAKESYS 22580 . 23574) (SYSOUT 23576 . 24766) (SAVEVM 24768 . 25509) (HERALD 25511 . 25669) (\REVALIDATEFILELST 25671 . 27716) (INTERPRET.REM.CM 27718 . 29792) (\USEREVENT 29794 . 30101)) (30286 31440 (USERNAME 30296 . 30962) (SETUSERNAME 30964 . 31438)) (31469 32470 (GetBcplString 31479 . 32122) (SetBcplString 32124 . 32468)))))STOP