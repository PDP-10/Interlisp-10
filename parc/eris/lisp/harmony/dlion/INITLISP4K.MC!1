{File name InitLisp4K.mc;    DandeLion Interlisp Emulator - InitializationAuthor: PurcellLast edited: 31-Jan-84 17:37:00 by don -- deleted u reg initLast edited: 24-Jan-84 11:27:34 by don -- restored u reg initLast edited: 19-Jan-84 15:35:14 by don -- added org for LCS and put kernel reserves hereLast edited: 17-Jan-84  9:59:07 by don -- removed u reg initLast edited: April 6, 1983  1:35 PM; dont move display in new sysoutCreated: January 17, 1983 out of NewLisp.mcLast edited: February 5, 1983  11:42 AM}Reserve[0F6F]; Reserve[0F78]; Reserve[0F7F,0FFF];	{Kernel}EFCHaveLink:  	at[LispStart],{**************************************************STALL to test display and maintpanel: 			**************************************************}	TT _ 88, CANCELBR[$, 0F],	c1;	Rx _ 1 RRot1, rhRx _ 1,	c2;	Rx{4000} _ Rx RShift1,	c3;	MAR _ [rhRx, 0EC+0],	c1;	MDR _ uFF00{was 0},	c2;	TT _ TT LRot8,	c3;	MAR _ [rhRx, 0ED+0],	c1;	MDR _ TT{8800} or 22,	c2;	PC _ 1 + PC + PC16,	c3;	Q _ 71{was 41},	c1;	DCtl_Q LRot0,	c2;	,	c3;	Rx _ 080{~15 sec}{10/sec},	c1;	rhTT _ 41, TT _ 41-1,	c2;	TT{14000} _ TT LRot8,	c3;	TT _ TT{14000} +IOPage.MP,	c1;	TOS _ LH.FMP,	c2;	TOS _ TOS LRot8,	c3;Stall:	MAR _ [rhTT, TT+0], BRANCH[Stall0, StallContinue],	c1;Stall0:	MDR _ TOS or RH.FMP,	c2;StallJn:	Q _ Q  - 1, ZeroBr, GOTO[Stall],	c3;StallContinue:	Rx _ Rx - 1, ZeroBr,	c2;	TOSH _ 0, BRANCH[Stall, SkipBurdock],	c3;Burdock:	IOPCtl _ 1, CANCELBR[NoMoreWait, 0F],	c1;SkipBurdock:	,	c1;NoMoreWait:	rhTT _  0,	c2;	TT _ uFF00,	c3;	Rx _ 40,	c1;	Rx _ Rx LRot8,	c2;	TOS _ KTval,	c3;	Map _ [rhTT,TT],	c1;	MDR _ Rx{4000} or 31{0B1},	c2;	uPageFault _ Q _ 0,	c3;{change to context Q{fxp}}FXP:	rhTT _  INTERFACEspace,	c1;	TT _ INTERFACEbasePage{20'b} {INTERFACEbase=10000'b},	c2;	TT _ TT LRot8,	c3;FXP1:	Map _ [rhTT,TT],	c1;	rhS _ nRhS,	c2;	Rx _ rhRx _ MD,	c3;FXP2:	MAR_ [rhRx, Q + 0],	c1;	rhPV _ nRhS,	c2;	PV{FXP} _ MD, GOTO[RTN2],	c3;Reset:	Noop,	c1;Reset2:	uPageFault _ 0,	c2;	Q _ 1, GOTO[FXP],	c3;	{ E N D }