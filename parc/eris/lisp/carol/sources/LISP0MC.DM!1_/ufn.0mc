:TITLE[Ufn.0mc, September 10, 1982  4:00 PM, van Melle];Ufns:UfnsP4:	*		000                           	* NWWINT	*		001                           	* CAR	*		002                           	* CDR	*		003                           	* ListP	*		004                           	* NTypeX	*		005                           	* TypeP	*		006                           	* DTest	lspUFN_ (007c), goto[lspUfnxP4], opcode[007];	* Cddr	*		010                           	* Fn0	*		011                           	* Fn1	*		012                           	* Fn2	*		013                           	* Fn3	*		014                           	* Fn4	*		015                           	* FnX	*		016                           	* ApplyFn	*		017                           	* Apply	*		020                           	* Return	*		021                           	* Bind	*		022                           	* UnBind	*		023                           	* DUnBind	*		024                           	* RplPtr.n	*		025                           	* GCRef	lspUFN_ (026c), goto[lspUfnxP4], opcode[026];	* --unallocated--	*		027                           	* SetGVar	*		030				* Rplaca	*lspUFN_ (031c), goto[lspUfnxP4], opcode[031];	* Rplacd	*		032				* Cons	lspUFN_ (033c), goto[lspUfnxP4], opcode[033];	* Getp	lspUFN_ (034c), goto[lspUfnxP4], opcode[034];	* Fmemb	lspUFN_ (035c), goto[lspUfnxP4], opcode[035];	* Gethash	lspUFN_ (036c), goto[lspUfnxP4], opcode[036];	* Puthash	*		037				* Createcell	*		040                           	* Bin	lspUFN_ (041c), goto[lspUfnxP4], opcode[041];	* Bout	lspUFN_ (042c), goto[lspUfnxP4], opcode[042];	* Bitblt	lspUFN_ (043c), goto[lspUfnxP4], opcode[043];	* was List1	lspUFN_ (044c), goto[lspUfnxP4], opcode[044];	* DoCollect	lspUFN_ (045c), goto[lspUfnxP4], opcode[045];	* --unallocated--	*		046				* RplCons	lspUFN_ (047c), goto[lspUfnxP4], opcode[047];	* --unallocated--	lspUFN_ (050c), goto[lspUfnxP4], opcode[050];	* Elt	lspUFN_ (051c), goto[lspUfnxP4], opcode[051];	* NthChrC	lspUFN_ (052c), goto[lspUfnxP4], opcode[052];	* Seta	lspUFN_ (053c), goto[lspUfnxP4], opcode[053];	* RplCharCode	*		054                           	* Eval	lspUFN_ (055c), goto[lspUfnxP4], opcode[055];	* EvalV	lspUFN_ (056c), goto[lspUfnxP4], opcode[056];	* --unallocated--	*		057                           	* StkScan	lspUFN_ (060c), goto[lspUfnxP4], opcode[060];	* --unallocated--	lspUFN_ (061c), goto[lspUfnxP4], opcode[061];	* --unallocated--	lspUFN_ (062c), goto[lspUfnxP4], opcode[062];	* --unallocated--	lspUFN_ (063c), goto[lspUfnxP4], opcode[063];	* --unallocated--	lspUFN_ (064c), goto[lspUfnxP4], opcode[064];	* --unallocated--	lspUFN_ (065c), goto[lspUfnxP4], opcode[065];	* --unallocated--	lspUFN_ (066c), goto[lspUfnxP4], opcode[066];	* --unallocated--	lspUFN_ (067c), goto[lspUfnxP4], opcode[067];	* --unallocated--	lspUFN_ (070c), goto[lspUfnxP4], opcode[070];	* --unallocated--	lspUFN_ (071c), goto[lspUfnxP4], opcode[071];	* --unallocated--	lspUFN_ (072c), goto[lspUfnxP4], opcode[072];	* --unallocated--	lspUFN_ (073c), goto[lspUfnxP4], opcode[073];	* --unallocated--	lspUFN_ (074c), goto[lspUfnxP4], opcode[074];	* --unallocated--	lspUFN_ (075c), goto[lspUfnxP4], opcode[075];	* --unallocated--	lspUFN_ (076c), goto[lspUfnxP4], opcode[076];	* --unallocated--	lspUFN_ (077c), goto[lspUfnxP4], opcode[077];	* \returnUfnsP5:	*		100                           	* IVar0	*		101                           	* IVar1	*		102                           	* IVar2	*		103                           	* IVar3	*		104                           	* IVar4	*		105                           	* IVar5	*		106                           	* IVar6	*		107                           	* IVarX	*		110                           	* PVar0	*		111                           	* PVar1	*		112                           	* PVar2	*		113                           	* PVar3	*		114                           	* PVar4	*		115                           	* PVar5	*		116                           	* PVar6	*		117                           	* PVarX	*		120                           	* FVar0	*		121                           	* FVar1	*		122                           	* FVar2	*		123                           	* FVar3	*		124                           	* FVar4	*		125                           	* FVar5	*		126                           	* FVar6	*		127                           	* FVarX	*		130                           	* SetPVar0	*		131                           	* SetPVar1	*		132                           	* SetPVar2	*		133                           	* SetPVar3	*		134                           	* SetPVar4	*		135                           	* SetPVar5	*		136                           	* SetPVar6	*		137                           	* SetPVarX	*		140                           	* GVarX	lspUFN_ (141c), goto[lspUfnxP5], opcode[141];	* Arg0	*		142                           	* SetIVarX	*		143                           	* SetFVarX	*		144                           	* Copy	lspUFN_ (145c), goto[lspUfnxP5], opcode[145];	* MyArgCount	*		146                           	* MyAlink	*		147                           	* AConst	*		150                           	* NIL	*		151                           	* T	*		152                           	* Zero	*		153                           	* One	*		154                           	* SIC	*		155                           	* SNIC	*		156                           	* SICX	*		157                           	* GConst	*		160                           	* AtomNumber	*		161				* ReadFlags	*		162				* ReadRP	*		163				* WriteMap	*		164				* ReadPrinterPort	*		165				* WritePrinterPort	*		166				* PilotBitBlt	*		167				* RCLK	*		170				* MISC1	*		171				* MISC2	*		172				* ReclaimCell	*		173                           	* GcScan1	*		174                           	* GcScan2	*		175                           	* Subr	*		176				* ContextSwitch	*		177				* audio instUfnsP6:	*		200                           	* Jump	*		201                           	* Jump	*		202                           	* Jump	*		203                           	* Jump	*		204                           	* Jump	*		205                           	* Jump	*		206                           	* Jump	*		207                           	* Jump	*		210                           	* Jump	*		211                           	* Jump	*		212                           	* Jump	*		213                           	* Jump	*		214                           	* Jump	*		215                           	* Jump	*		216                           	* Jump	*		217                           	* Jump	*		220                           	* FJump	*		221                           	* FJump	*		222                           	* FJump	*		223                           	* FJump	*		224                           	* FJump	*		225                           	* FJump	*		226                           	* FJump	*		227                           	* FJump	*		230                           	* FJump	*		231                           	* FJump	*		232                           	* FJump	*		233                           	* FJump	*		234                           	* FJump	*		235                           	* FJump	*		236                           	* FJump	*		237                           	* FJump	*		240                           	* TJump	*		241                           	* TJump	*		242                           	* TJump	*		243                           	* TJump	*		244                           	* TJump	*		245                           	* TJump	*		246                           	* TJump	*		247                           	* TJump	*		250                           	* TJump	*		251                           	* TJump	*		252                           	* TJump	*		253                           	* TJump	*		254                           	* TJump	*		255                           	* TJump	*		256                           	* TJump	*		257                           	* TJump	*		260                           	* JumpX	*		261                           	* JumpXX	*		262                           	* FJumpX	*		263                           	* TJumpX	*		264                           	* NFJumpX	*		265                           	* NTJumpX	lspUFN_ (266c), goto[lspUfnxP6], opcode[266];	* --unallocated--	lspUFN_ (267c), goto[lspUfnxP6], opcode[267];	* --unallocated--	*		270                           	* SetPVarPop0	*		271                           	* SetPVarPop1	*		272                           	* SetPVarPop2	*		273                           	* SetPVarPop3	*		274                           	* SetPVarPop4	*		275                           	* SetPVarPop5	*		276                           	* SetPVarPop6	*		277                           	* PopUfnsP7:	lspUFN_ (300c), goto[lspUfnxP7], opcode[300];	* --unallocated--	lspUFN_ (301c), goto[lspUfnxP7], opcode[301];	* --unallocated--	*		302                           	* GetBaseByte	lspUFN_ (303c), goto[lspUfnxP7], opcode[303];	* ScanBase (obsolete)	*		304				* Blt	lspUFN_ (305c), goto[lspUfnxP7], opcode[305];	* --unallocated--	lspUFN_ (306c), goto[lspUfnxP7], opcode[306];	* --unallocated--	*		307                           	* PutBaseByte	*		310                           	* GetBaseN	*		311                           	* GetBasePtr.N	*		312                           	* GetField.N.FD	lspUFN_ (313c), goto[lspUfnxP7], opcode[313];	* --unallocated--	lspUFN_ (314c), goto[lspUfnxP7], opcode[314];	* --unallocated--	*		315                           	* PutBase.N	*		316                           	* PutBasePtr.N	*		317                           	* PutField.N.FD	*		320                           	* AddBase	*		321                           	* Vag2	*		322                           	* HiLoc	*		323                           	* LoLoc	*		324                           	* Plus2	*		325                           	* Difference	*		326                           	* Times2	*		327				* Quotient	*		330                           	* IPlus	*		331                           	* IDiff	*		332                           	* ITimes	*		333				* IQuotient	*		334				* IRemainder	lspUFN_ (335c), goto[lspUfnxP7], opcode[335];	* IPlus.N (obsolete)	lspUFN_ (336c), goto[lspUfnxP7], opcode[336];	* IDiff.N (obsolete)	lspUFN_ (337c), goto[lspUfnxP7], opcode[337];	* --unallocated--	*		340                           	* Llsh1	*		341                           	* Llsh8	*		342                           	* Lrsh1	*		343                           	* Lrsh8	*		344                           	* LogOr	*		345                           	* LogAnd	*		346                           	* LogXor	lspUFN_ (347c), goto[lspUfnxP7], opcode[347];	* --unallocated--	*		350				* Fplus	*		351				* Fdifference	*		352				* Ftimes	*		353				* Fquotient	lspUFN_ (354c), goto[lspUfnxP7], opcode[354];	* --unallocated (floating)--	lspUFN_ (355c), goto[lspUfnxP7], opcode[355];	* --unallocated (floating)--	lspUFN_ (356c), goto[lspUfnxP7], opcode[356];	* --unallocated (floating)--	lspUFN_ (357c), goto[lspUfnxP7], opcode[357];	* --unallocated (floating)--	*		360                           	* Eq	*		361                           	* IGreaterp	*		362				* FGreaterp	*		363                           	* Greaterp	lspUFN_ (364c), goto[lspUfnxP7], opcode[364];	* Equal	*		365				* MakeNumber	*		366				* BoxIPlus	*		367				* BoxIDifference	lspUFN_ (370c), goto[lspUfnxP7], opcode[370];	* --unallocated--	lspUFN_ (371c), goto[lspUfnxP7], opcode[371];	* --unallocated--	lspUFN_ (372c), goto[lspUfnxP7], opcode[372];	* --unallocated--	lspUFN_ (373c), goto[lspUfnxP7], opcode[373];	* --unallocated--	*		374                           	* reserved for D0	*		375                           	* Swap	*		376                           	* Nop	*		377                           	* Page Fault	:END[Ufn];