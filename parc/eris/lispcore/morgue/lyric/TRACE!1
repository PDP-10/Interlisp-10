(DEFINE-FILE-INFO §PACKAGE "INTERLISP" §READTABLE "XCL" §BASE 10)(FILECREATED "31-Mar-87 12:05:00" {ERIS}<LISPCORE>SOURCES>TRACE.\;22 18386        |changes| |to:|  (FNS BREAK BREAK0 BREAK1 BROKEN-DEFINITION TRACE UNTRACE UNBREAK UNBREAK0                             VIRGINFN)                       (SPECIAL-FORMS BREAK1)                       (FUNCTIONS BREAK-FUNCTION)      |previous| |date:| "30-Mar-87 16:27:57" {ERIS}<LISPCORE>SOURCES>TRACE.\;21); Copyright (c) 1986, 1987 by Xerox Corporation.  All rights reserved.(PRETTYCOMPRINT TRACECOMS)(RPAQQ TRACECOMS ((VARIABLES *TRACE-DEPTH* *TRACE-WINDOW* TRACEREGION)                  (FUNCTIONS BREAK-FUNCTION INIT-TRACE-OUTPUT TRACE-PRINT-CALL TRACE-PRINT-VALUES)                  (FNS BREAK BREAK0 BREAK1 BROKEN-DEFINITION TRACE UNTRACE UNBREAK UNBREAK0 VIRGINFN)                  (INITVARS (BROKENFNS))                  (PROP FILETYPE TRACE)                  (SPECIAL-FORMS BREAK1)                  (DECLARE\: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS                         (ADDVARS (NLAMA UNBREAK UNTRACE TRACE BREAK)                                (NLAML BREAK1)                                (LAMA)))))(CL:DEFVAR *TRACE-DEPTH* 0)(CL:DEFVAR *TRACE-WINDOW* NIL)(DEFGLOBALVAR TRACEREGION (|create| REGION LEFT _ 8 BOTTOM _ 3 WIDTH _ 547 HEIGHT _ 310) )(CL:DEFUN BREAK-FUNCTION (FN &KEY TRACE CALLS-TO (WHEN T)) (COND                                                              ((NULL (GETD FN))                                                               (CL:RETURN-FROM BREAK-FUNCTION                                                                      (CL:FORMAT NIL                                                                              "~S not a function." FN)                                                                      ))                                                              ((UNSAFE.TO.MODIFY FN "break")                                                               (CL:RETURN-FROM BREAK-FUNCTION                                                                      (CL:FORMAT NIL "~S not broken."                                                                              FN))))                                                           (VIRGINFN FN T)                                                           (COND                                                              ((CL:EQUAL TRACE :TRACE)                                                               (OR (FMEMB FN *TRACED-FNS*)                                                                   (/SETATOMVAL '*TRACED-FNS*                                                                          (CONS FN *TRACED-FNS*))))                                                              (T (OR (FMEMB FN BROKENFNS)                                                                     (/SETATOMVAL 'BROKENFNS                                                                            (CONS FN BROKENFNS)))))                    (* |;;| "if previously broken/advised, undo it")                                                           (LET* ((OLD-DEF (GETD FN))                                                                  (NEW-DEF (BROKEN-DEFINITION FN                                                                                   OLD-DEF TRACE                                                                                   CALLS-TO WHEN)))                                                                 (UNDOABLY-SETF (GET FN 'BROKEN)                                                                        OLD-DEF)                                                                 (/PUTD FN NEW-DEF))                                                           FN)(CL:DEFUN INIT-TRACE-OUTPUT NIL (AND WBREAK (CL:UNLESS (AND *TRACE-WINDOW* (WINDOWP *TRACE-WINDOW*)                                                            (DISPLAYSTREAMP *TRACE-OUTPUT*))                                                   (DSPSCROLL 'ON (SETQ *TRACE-WINDOW*                                                                   (CREATEW TRACEREGION                                                                           "*Trace-Output*" NIL T)))                                                   (SETQ *TRACE-OUTPUT* (GETSTREAM *TRACE-WINDOW*                                                                               'OUTPUT)))))(CL:DEFUN TRACE-PRINT-CALL (VALUES FN ARGLIST) (FRESHLINE *TRACE-OUTPUT*)                                               (DSPFONT INPUTFONT *TRACE-OUTPUT*)                                               (CL:PRIN1 FN *TRACE-OUTPUT*)                                               (DSPFONT DEFAULTFONT *TRACE-OUTPUT*)                                               (CL:PRINC " :" *TRACE-OUTPUT*)                                               (CL:TERPRI *TRACE-OUTPUT*)                                               (PRINT-ARGLIST ARGLIST VALUES *TRACE-OUTPUT* 0))(CL:DEFUN TRACE-PRINT-VALUES (FN VALUES) (FRESHLINE *TRACE-OUTPUT*)                                         (DSPFONT INPUTFONT *TRACE-OUTPUT*)                                         (CL:PRIN1 FN *TRACE-OUTPUT*)                                         (CL:PRINC " => " *TRACE-OUTPUT*)                                         (DSPFONT DEFAULTFONT *TRACE-OUTPUT*)                                         (LET ((POS (DSPXPOSITION NIL *TRACE-OUTPUT*)))                                              (IF (NULL VALUES)                                                  THEN (CL:FORMAT *TRACE-OUTPUT*                                                               "<no values returned>")                                                ELSE (FOR X ON VALUES                                                        DO (PRINT (CAR X)                                                                  *TRACE-OUTPUT*)                                                           (AND (CDR X)                                                                (DSPXPOSITION POS *TRACE-OUTPUT*)))))                                         (CL:VALUES-LIST VALUES))(DEFINEQ(BREAK  (NLAMBDA X                                                 (* \; "Edited 25-Nov-86 15:34 by lmm")    (|for| X |in| (NLAMBDA.ARGS X) |join| (BREAK0 X T NIL NIL))))(BREAK0  (LAMBDA (FN WHEN COMS BRKFN)                               (* \; "Edited 25-Nov-86 20:24 by lmm")    (CL:WHEN (AND COMS (NEQ COMS ':TRACE))           (CL:CERROR "Ignore COMS" "Break 'commands' ~S no longer supported." COMS))    (CL:WHEN (AND BRKFN (NEQ BRKFN 'BREAK1))           (CL:CERROR "Ignore BRKFN" "Unexpected BRKFN passed to BREAK0"))    (COND       ((LISTP FN)        (COND           ((NOT (STRING.EQUAL (CL:SECOND FN)                        "IN"))            (|for| X |in| FN |join| (BREAK0 X WHEN COMS BRKFN)))           (T (|for| CALLER |inside| (CL:THIRD FN) |collect| (BREAK-FUNCTION CALLER :WHEN WHEN                                                                     :CALLS-TO (CL:FIRST FN)                                                                    :TRACE COMS)))))       (T (LIST (BREAK-FUNCTION FN :TRACE COMS :WHEN WHEN))))))(BREAK1  (NLAMBDA (BRKEXP BRKWHEN BRKFN BRKCOMS BRKTYPE CONDITION)  (* \; "Edited 24-Mar-87 16:07 by amd")    (|if| (CL:EVAL BRKWHEN)        |then|                     (* |;;|        "should probably default CONDITION  depending on BRKTYPE to interrupt, breakpoint error, etc.")              (CL:WHEN BRKCOMS (PRINTOUT T "BRKCOMS no longer supported:" BRKCOMS T))              (LET ((POS (STKNTH 0 BRKFN)))                   (CL:UNWIND-PROTECT (DEBUGGER :FORM BRKEXP :ENVIRONMENT NIL :STACK-POSITION POS                                              :CONDITION (OR CONDITION (MAKE-CONDITION 'SI::BREAKPOINT                                                                              :FUNCTION BRKFN)))                          (RELSTK POS)))      |else| (CL:EVAL BRKEXP))))(BROKEN-DEFINITION  (LAMBDA (FN OLD-DEF TRACE CALLS-TO WHEN FRAMENAME)         (* \; "Edited 24-Mar-87 16:25 by amd")    (LET     ((DEF (COND              ((EQ 'CL:LAMBDA (CAR (LISTP OLD-DEF)))                    (* |;;| "common lisp function, make sure gets interpreted w/common lisp interpreter")               `#',OLD-DEF)              (T                     (* |;;| "interlisp function? ")                 `',OLD-DEF))))     (COND        (CALLS-TO (COND                     ((NOT (EXPRP OLD-DEF))                      (LET ((ND (\\RENAMEDFN OLD-DEF (LIST ':BROKEN FN))))                           (|for| X |inside| CALLS-TO                              |do| (LET ((GT (CL:GENTEMP)))                                        (PUTD GT (BROKEN-DEFINITION (CL:IF TRACE X                                                                           (LIST X ':IN FN))                                                        X TRACE NIL WHEN GT))                                        (CHANGENAME1A ND X GT (CHANGECCODE X X ND))))                           ND))                     (T `(CL:LAMBDA (&REST BROKEN)                                (CL:FLET ,(|for| X |inside| CALLS-TO                                             |collect| (CONS X (CDR (BROKEN-DEFINITION X X TRACE NIL                                                                            WHEN))))                                       (CL:APPLY ,DEF BROKEN))))))        (TRACE (LET ((FORMS `((TRACE-PRINT-CALL BROKEN ',FN ',(SMARTARGLIST FN))                              (TRACE-PRINT-VALUES ',FN (CL:MULTIPLE-VALUE-LIST (CL:APPLY ,DEF BROKEN)                                                              )))))                    (CL:IF (FMEMB (FNTYP OLD-DEF)                                  '(FEXPR FEXPR* CFEXPR CFEXPR*))                           `(NLAMBDA BROKEN                              ,@(CL:IF (EQ WHEN T)                                       FORMS                                       `((COND                                            (,WHEN ,@FORMS)                                            (T (APPLY ,DEF BROKEN))))))                           `(CL:LAMBDA (&REST BROKEN)                                   ,@(CL:IF (EQ WHEN T)                                            FORMS                                            `((COND                                                 (,WHEN ,@FORMS)                                                 (T (CL:APPLY ,DEF BROKEN)))))))))        (T                     (* |;;| "This case is hairy to make sure that the right interpreter gets used by the debugger when evaluating the break expression.")           (CL:IF (FMEMB (FNTYP OLD-DEF)                         '(FEXPR FEXPR* CFEXPR CFEXPR*))                  `(NLAMBDA BROKEN                     (CL:FUNCALL 'BREAK1 `(CL:FUNCALL ',#'(LAMBDA NIL                                                            (APPLY ,DEF BROKEN))) ',WHEN                            ',(OR FRAMENAME FN)))                  `(CL:LAMBDA (&REST BROKEN)                          (CL:FUNCALL 'BREAK1                                 `(CL:FUNCALL ',#'(LAMBDA NIL                                                    (CL:APPLY ,DEF BROKEN)))                                 ',WHEN                                 ',(OR FRAMENAME FN)))))))))(TRACE  (NLAMBDA X                                                 (* \; "Edited 30-Mar-87 15:24 by lal")    (INIT-TRACE-OUTPUT)    (CL:IF X (BREAK0 (NLAMBDA.ARGS X)                    T                    ':TRACE NIL)           *TRACED-FNS*)))(UNTRACE  (NLAMBDA X                                                 (* \; "Edited 30-Mar-87 15:46 by lal")(* |;;;| "identical to UNBREAK")    (|if| (AND (NULL (SETQ X (NLAMBDA.ARGS X)))               *TRACED-FNS*)        |then| (SETQ X (REVERSE *TRACED-FNS*))               (* \;                                        "So that most recently broken function will be unbroken last.")              (/SETATOMVAL '*TRACED-FNS* NIL))    (MAPCON X (FUNCTION (LAMBDA (L)                          (UNBREAK0 (CAR L)                                 L                                 '*TRACED-FNS*))))))(UNBREAK  (NLAMBDA X                                                 (* \; "Edited 30-Mar-87 15:46 by lal")(* |;;;| "identical to untrace except acting on brokenfns")    (LET ((XCL::FILE X)          (XCL::ANS NIL))         (COND            ((AND (NULL (SETQ X (NLAMBDA.ARGS X)))                  BROKENFNS)             (SETQ X (REVERSE BROKENFNS))                    (* \;                                        "So that most recently broken function will be unbroken last.")             (/SETATOMVAL 'BROKENFNS NIL)))         (CL:SETQ XCL::ANS (MAPCON X (FUNCTION (LAMBDA (L)                                                 (UNBREAK0 (CAR L)                                                        L                                                        'BROKENFNS)))))         (COND            ((AND (NULL (SETQ XCL::FILE (NLAMBDA.ARGS XCL::FILE)))                  *TRACED-FNS*)             (SETQ XCL::FILE (REVERSE *TRACED-FNS*))         (* \;                                        "So that most recently broken function will be unbroken last.")             (/SETATOMVAL '*TRACED-FNS* NIL)))         (CL:APPEND XCL::ANS (MAPCON XCL::FILE (FUNCTION (LAMBDA (L)                                                           (UNBREAK0 (CAR L)                                                                  L                                                                  '*TRACED-FNS*))))))))(UNBREAK0  (LAMBDA (FN TAIL BROKENTRACEDFNS)                          (* \; "Edited 30-Mar-87 15:41 by lal")    (MAPCAR (PACK-IN- FN)           (FUNCTION (LAMBDA (FN)                       (PROG (VAL (ALIAS (GETPROP FN 'ALIAS))                                  (BRKINFO (GETPROP FN 'BRKINFO)))                             (COND                                ((EQ FN T)                                 (SETQ FN (CAR (EVAL BROKENTRACEDFNS))))                                ((AND DWIMFLG (NULL (FMEMB FN (EVAL BROKENTRACEDFNS)))                                      (NULL (OR (GETD FN)                                                (GETPROP FN 'EXPR))))                    (* |;;| "Only spelling correct if FN is not a function.  This is because certain functions such as UNSAVEDEF call UNBREAK0 just to make sure function is not broken.  Also, user may perform (UNBREAK FOO) just to be sure.  In these cases, don't want to correct spelling.")                                 (SETQ FN (OR (FIXSPELL FN 70 BROKENFNS NIL TAIL)                                              (FIXSPELL FN 70 *TRACED-FNS* NIL TAIL)                                              (FIXSPELL FN 70 USERWORDS NIL TAIL                                                     (FUNCTION GETD))                                              FN))))                             (AND DWIMFLG (SETQ LASTWORD FN))                             (/SETATOMVAL BROKENTRACEDFNS (/DREMOVE FN (EVAL BROKENTRACEDFNS)))                             (SETQ VAL (RESTORE FN 'BROKEN))                             (COND                                ((AND (LISTP ALIAS)                                      (NULL (GETPROP FN 'ADVISED)))                                 (CHNGNM (CAR ALIAS)                                        (CDR ALIAS)                                        T)))                             (RETURN VAL)))))))(VIRGINFN  (LAMBDA (FN FLG)                                           (* \; "Edited 30-Mar-87 15:48 by lal")    (PROG (D (X1 (GETPROP FN 'BROKEN))             (X2 (GETPROP FN 'ADVISED))             (X3 (GETPROP FN 'NAMESCHANGED))             (X5 (GETPROP FN 'EXPR)))          (|if| FLG              |then| (COND                        (X1 (PRIN2 FN T T)                            (PRIN1 '" unbroken." T)                            (UNBREAK FN)))                    (COND                       (X2 (PRIN2 FN T T)                           (PRIN1 '" unadvised." T)                           (APPLY 'UNADVISE (LIST FN))))                    (COND                       (X3 (PRIN2 FN T T)                           (PRIN1 '" names restored." T)                           (RESTORENAMES FN)))                    (COND                       ((AND (NULL (EXPRP (SETQ D (GETD FN))))                             X5)                        (SETQ D X5)))                    (RETURN D))          (SETQ D (GETD (OR (AND X2 (GETPROP FN 'ADVISED))                            X1 FN)))          (COND             ((OR (NLISTP D)                  (NLISTP (CDR D)))              (RETURN (OR X5 D))))          (COND             (X3 (COND                    ((NULL FLG)                     (SETQ D (COPY D))))                 (MAPC X3 (FUNCTION (LAMBDA (X)                                      (SETQ D (/DSUBST X (PACK* X '-IN- FN)                                                     D)))))))          (RETURN D)))))(RPAQ? BROKENFNS )(PUTPROPS TRACE FILETYPE CL:COMPILE-FILE)(DEFINE-SPECIAL-FORM BREAK1 (&OPTIONAL EXP WHEN FN COMS TYPE CONDITION &ENVIRONMENT ENV)   (IF (CL:EVAL WHEN ENV)       THEN (CL:WHEN COMS (PRINTOUT T "BRKCOMS no longer supported:" COMS T))            (LET ((POS (STKNTH 0 FN)))                 (CL:UNWIND-PROTECT (DEBUGGER :FORM EXP :ENVIRONMENT ENV :STACK-POSITION POS                                            :CONDITION (OR CONDITION (MAKE-CONDITION 'SI::BREAKPOINT                                                                            :FUNCTION FN)))                        (RELSTK POS)))     ELSE (CL:EVAL EXP ENV)))(DECLARE\: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDTOVAR NLAMA UNBREAK UNTRACE TRACE BREAK)(ADDTOVAR NLAML BREAK1)(ADDTOVAR LAMA ))(PUTPROPS TRACE COPYRIGHT ("Xerox Corporation" 1986 1987))(DECLARE\: DONTCOPY  (FILEMAP (NIL (6246 17462 (BREAK 6256 . 6456) (BREAK0 6458 . 7376) (BREAK1 7378 . 8197) (BROKEN-DEFINITION 8199 . 11608) (TRACE 11610 . 11876) (UNTRACE 11878 . 12520) (UNBREAK 12522 . 13982) (UNBREAK0 13984 . 15900) (VIRGINFN 15902 . 17460)))))STOP