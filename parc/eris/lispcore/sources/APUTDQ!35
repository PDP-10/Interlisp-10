(DEFINE-FILE-INFO §READTABLE "INTERLISP" §PACKAGE "INTERLISP")(FILECREATED "26-Oct-86 01:40:48" {ERIS}<LISPCORE>SOURCES>APUTDQ.;35 32202        previous date%: "16-Oct-86 23:41:57" {ERIS}<LISPCORE>SOURCES>APUTDQ.;34)(* "Copyright (c) 1981, 1982, 1983, 1984, 1985, 1986 by Xerox Corporation.  All rights reserved.")(PRETTYCOMPRINT APUTDQCOMS)(RPAQQ APUTDQCOMS        [(FNS GREETFILENAME FAULTEVAL FAULTAPPLY ERRORX SET-DOCUMENTATION)        (FNS SMASHFILECOMS SMASHFILECOMSLST)        (INITVARS (DEFAULTREGISTRY)               (USERGREETFILES)               (LOGINHOST/DIR '{DSK}))        (FNS RESETRESTORE RESETVARS RESETSAVE RESETVAR)        (FNS LOADUP ENDLOADUP)        (VARS LOADUPDIRECTORIES)        (ALISTS (SYSTEMINITVARS \CONNECTED.DIRECTORY DWIMFLG ADDSPELLFLG FILEPKGFLG BUILDMAPFLG                        UPDATEMAPFLG DEFAULTREGISTRY DEFAULTPRINTINGHOST DIRECTORIES USERGREETFILES                        NETWORKOSTYPES CH.NET.HINT CH.DEFAULT.DOMAIN CH.DEFAULT.ORGANIZATION                        ADVISEDFNS LISPUSERSDIRECTORIES DISPLAYFONTDIRECTORIES DISPLAYFONTEXTENSIONS                        INTERPRESSFONTDIRECTORIES))        (DECLARE%: DONTEVAL@LOAD DOCOPY (P (DUMMYDEF (ADDSTATS *)                                                  (STATINIT NILL)                                                  (LISPXWATCH NILL)                                                  (CLBUFS NILL)                                                  (FINDFILE INFILEP)                                                  (FILEMAP *)                                                  (VIRGINFN GETD)                                                  (MKSWAPP NILL))                                           (DUMMYDEF (USERNUMBER ZERO)                                                  (HOSTNUMBER ZERO)                                                  (HOSTNAME NILL)                                                  (TRAPCOUNT ZERO))                                           (DUMMYDEF (* QUOTE)                                                  (GETP GETPROP)                                                  (DECLARE QUOTE)                                                  (FRPLNODE2 RPLNODE2)                                                  (DISPLAYTERMP TRUE)                                                  (MINFS EVQ)                                                  (FRPLACA RPLACA)                                                  (FRPLACD RPLACD)                                                  (MISSPELLED? NILL)                                                  (UNDOSAVE NILL)                                                  (SETLINELENGTH ZERO)                                                  (DOBE NILL)                                                  (RELINK NILL)                                                  (PUT PUTPROP)                                                  (/PUT PUTPROP)                                                  (MKSWAP EVQ)))               (ADDVARS (SYSFILES)                      (LISPXHISTORY)                      (LINKEDFNS))               (VARS (SHALLOWFLG)                     (SPAGHETTIFLG T)                     (WIDEPAPERFLG T)                     (CLEARSTKLST T)                     (SYSHASHARRAY (HASHARRAY 50))                     (DISPLAYTERMFLG T)                     (%#UNDOSAVES)                     (NLAMA)                     (NLAML)                     (LAMS)                     (EVALQTFORMS)                     (TTYLINELENGTH 82)                     (COMPILE.EXT 'DCOM)                     (SYSOUT.EXT 'SYSOUT)                     (HOSTNAME)                     (SYSTEMTYPE (SYSTEMTYPE)))               (P (GCGAG T)))        (DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA RESETSAVE                                                                                       RESETVARS                                                                                       FAULTEVAL)                                                                             (NLAML RESETVAR)                                                                             (LAMA])(DEFINEQ(GREETFILENAME  [LAMBDA (USER)                                             (* lmm "12-Apr-85 18:11")                                                             (* Returns name of an existing                                                              greeting file, or NIL)    (DECLARE (GLOBALVARS USERGREETFILES LOGINHOST/DIR COMPILE.EXT))    (SELECTQ USER        (T (OR (INFILEP '{DSK}INIT.LISP)               (bind FILE while (SETQ FILE (PROMPTFORWORD '                   "Please enter name of system init file(e.g. {server}<directory>INIT.extension): ")) until (SETQ FILE (INFILEP (MKATOM FILE)))                  finally (RETURN FILE))))        (NIL)        (COND           ((LISTP USERGREETFILES)            (PROG [(POS (AND DEFAULTREGISTRY (STRPOS '%. (SETQ USER (U-CASE USER]                  [COND                     ((AND POS (STREQUAL (SUBSTRING USER (ADD1 POS)                                                -1)                                      (MKSTRING DEFAULTREGISTRY)))                      (SETQ USER (SUBSTRING USER 1 (SUB1 POS]                  (RETURN (for D in (COND                                       ((LISTP (CAR USERGREETFILES))                                        USERGREETFILES)                                       (T (CONS USERGREETFILES)))                             when [SETQ D (INFILEP (PACK (SUBPAIR '(USER COM) (LIST USER COMPILE.EXT)                                                                D] do (RETURN D])(FAULTEVAL  [LAMBDA (FAULTX)    (PROG (TEM TEM2)          [COND             ((LISTP FAULTX)              [COND                 ((LITATOM (SETQ TEM (CAR FAULTX)))                  (COND                     ([AND (SETQ TEM2 (GETMACROPROP TEM COMPILERMACROPROPS))                           (NOT (EQUAL FAULTX (SETQ TEM2 (MACROEXPANSION FAULTX TEM2]                      (COND                         (CLISPARRAY (PUTHASH FAULTX (OR (LISTP TEM2)                                                         (LIST 'PROGN TEM2))                                            CLISPARRAY)))                      (RETURN (\EVAL TEM2)))                     [(SETQ TEM2 (GET TEM 'MACRO-FN))                      (RETURN (\EVAL (CL:FUNCALL *MACROEXPAND-HOOK* TEM2 FAULTX NIL]                     (T (SETQ TEM (GETD (CAR FAULTX]              (COND                 ((AND (LISTP TEM)                       (FMEMB (CAR TEM)                              LAMBDASPLST))                  (RETURN (\EVALFORMASLAMBDA FAULTX]          (RETURN (COND                     ((AND DWIMFLG (GETD 'NEWFAULT1))                      (NEWFAULT1 FAULTX))                     (T (OLDFAULT1 FAULTX])(FAULTAPPLY  [LAMBDA (FAULTFN FAULTARGS)    (COND       ((CCODEP FAULTFN)                          (* ;;                           " hack to handle case where microcode doesn't know how to FUNCALL a CCODEP")        (SPREADAPPLY '\INTERPRETER-DUMMY (UNINTERRUPTABLY                                             (PUTD '\INTERPRETER-DUMMY FAULTFN T)                                             FAULTARGS)))       (T (PROG ((DEF (COND                         ((CL:SYMBOLP FAULTFN)                          (GETD FAULTFN))                         (T FAULTFN)))                 %%LEXICAL-ENVIRONMENT%%)            RETRY                (COND                   ((TYPEP DEF 'CLOSURE)                     (* ; "an interpreted closure ")                    (SETQ %%LEXICAL-ENVIRONMENT%% (CLOSURE-ENVIRONMENT DEF))                    (SETQ DEF (CLOSURE-FUNCTION DEF))                    (GO RETRY)))                (RETURN (PROG (TRAN TRANFN)                              (OR (AND (LISTP DEF)                                       (FMEMB (CAR DEF)                                              LAMBDASPLST))                                  (GO OUT))                              (COND                                 ((OR (SETQ TRAN (GETHASH DEF CLISPARRAY))                                      (AND [SETQ TRANFN (CAR (CDR (ASSOC (CAR DEF)                                                                         LAMBDATRANFNS]                                           (LISTP (SETQ TRAN (CL:FUNCALL TRANFN DEF)))                                           (PROGN (AND CLISPARRAY (PUTHASH DEF TRAN CLISPARRAY))                                                  T)))                                                  (* ;;                                                   "either in CLISPARRAY or translated by lambda-tran")                                  (SETQ DEF TRAN))                                 (%%LEXICAL-ENVIRONMENT%%    (* ;; "found the environment"))                                 (T (GO OUT)))                              (RETURN (APPLY DEF FAULTARGS))                          OUT (CL:CERROR "Call the function again" (MAKE-CONDITION '                                                                          UNDEFINED-FUNCTION :NAME                                                                           FAULTFN))                              (RETURN (CL:APPLY FAULTFN FAULTARGS])(ERRORX  (CL:LAMBDA (&OPTIONAL ERXM (ERRORFN (FUNCTION ERROR!)))         (CL:UNLESS (CONDITION-TYPEP ERXM 'CONDITION)                (SETQ ERXM (ERRM-TO-CONDITION (CAR ERXM)                                  (CADR ERXM)))                (RAISE-SIGNAL ERXM))         (SETQ *LAST-CONDITION* ERXM)         (LET ((PRINTMSG T))              (DECLARE (CL:SPECIAL PRINTMSG))              (COND                 ((NULL (ENTER-DEBUGGER-P HELPDEPTH))        (* ;; " says not to enter debugger")                  (COND                     (PRINTMSG                        (* ; "print message if no break is to occur.")                            (REPORT-CONDITION ERXM T)))                  (ERROR!)))              (DEBUGGER-LOOP ERRORFN NIL NIL ERXM NIL))))(SET-DOCUMENTATION  (CL:LAMBDA (NAME DOC-TYPE NEW-STRING)         (CL:BLOCK SET-DOCUMENTATION (CL:IF LISPXHIST (UNDOABLY-SETF (GETHASH NAME (                                                                              HASH-TABLE-FOR-DOC-TYPE                                                                                    DOC-TYPE))                                                             NEW-STRING))                (CL:SETF (GETHASH NAME (HASH-TABLE-FOR-DOC-TYPE DOC-TYPE))                       NEW-STRING)))))(DEFINEQ(SMASHFILECOMS  [LAMBDA (FILE)                                             (* JonL " 8-Jun-84 10:43")                                                             (* dummy definition for APUTDQ)    (PROG [(FILECOMS (PACK (LIST FILE 'COMS]          (COND             ((BOUNDP FILECOMS)                    (* Already loaded, but may want to clobber its FNS, VARS, and BLOCKS E.G.          MISC, BASIC.)              (SMASHFILECOMSLST (GETATOMVAL FILECOMS))              (SET FILECOMS 'NOBIND])(SMASHFILECOMSLST  [LAMBDA (COMS)                                             (* lmm "11-MAR-83 13:17")    (MAPC COMS (FUNCTION (LAMBDA (COM)                           (PROG (NAME)                                 (AND (EQ (CADR COM)                                          '*)                                      (LITATOM (CADDR COM))                                      (SETQ NAME (CADDR COM)))                                 (SELECTQ (CAR COM)                                     (COMS [SMASHFILECOMSLST (COND                                                                (NAME (GETATOMVAL NAME))                                                                (T (CDR COM])                                     (FILEVARS [SETQ NAME (COND                                                             ((EQ (CADR COM)                                                                  '*)                    (* if caddr is a litatom, name was set to it above.          if caddr is not, dangerous to evaluate the form, so punt)                                                              (GETATOMVAL NAME))                                                             (T (CDR COM])                                     ((PROP IFPROP)                                           [COND                                             ((AND (EQ (CADDR COM)                                                       '*)                                                   (LITATOM (CADDDR COM)))                                              (SETQ NAME (CADDDR COM])                                     NIL)                                 (COND                                    ((AND NAME (LITATOM NAME))                                     (SET NAME 'NOBIND]))(RPAQ? DEFAULTREGISTRY )(RPAQ? USERGREETFILES )(RPAQ? LOGINHOST/DIR '{DSK})(DEFINEQ(RESETRESTORE  [LAMBDA (RESETVARSLST0 RESETSTATE)                         (* wt%: "15-MAR-78 14:25")                    (* Goes down RESETVARSLST doing restoration until it gets to NIL or           RESETVARSLST0. RESETSTATE is either NIL, ERROR, or RESET, depending on whether           restoration is at normal (successful) completion of a RESETLST, following an           error or control-E, or following a control-D)    (PROG (RESETZ OLDVALUE)      LP  (COND             ((AND RESETVARSLST (NOT (TAILP RESETVARSLST RESETVARSLST0)))              (SETQ RESETZ (CAR RESETVARSLST))              (SETQ RESETVARSLST (CDR RESETVARSLST))              [COND                 ((LISTP (CAR RESETZ))                  [SETQ OLDVALUE (COND                                    ((CDR RESETZ)                    (* occurs for RESETSAVE's when second aagument is specified.          In this case, (CADR RESETZ) is the value of the saving form, i.e.          the first argument to RESETSAVE.)                                     (CADR RESETZ))                                    (T (CADAR RESETZ]                  (APPLY (CAAR RESETZ)                         (CDAR RESETZ)))                 (T (SETTOPVAL (CAR RESETZ)                           (CDR RESETZ]              (GO LP])(RESETVARS  [NLAMBDA RESETX                                            (* wt%: "14-JAN-80 23:29")    (PROG ([RESETW (SETQ RESETVARSLST (PROG ((RESETZ RESETVARSLST))                                            [MAPC (CAR RESETX)                                                  (FUNCTION (LAMBDA (RESETY)                                                              (SETQ RESETZ                                                               (CONS [COND                                                                        [(LISTP RESETY)                                                                         (CONS (CAR RESETY)                                                                               (GETTOPVAL                                                                                (CAR RESETY]                                                                        (T (CONS RESETY (GETTOPVAL                                                                                         RESETY]                                                                     RESETZ]                                            (RETURN RESETZ]           RESETY)          (SETQ RESETY RESETVARSLST)          (RETURN (CAR (OR [PROG1 (XNLSETQ (PROGN [MAPC (CAR RESETX)                                                        (FUNCTION (LAMBDA (RESETY)                                                                    (COND                                                                       [(LISTP RESETY)                                                                        (SETTOPVAL                                                                         (CAR RESETY)                                                                         (APPLY 'PROG1 (CDR RESETY)                                                                                'INTERNAL]                                                                       (T (SETTOPVAL RESETY]                                                  (APPLY 'PROG (CONS NIL (CDR RESETX))                                                         'INTERNAL))                                         INTERNAL)                                  [MAPC (CAR RESETX)                                        (FUNCTION (LAMBDA (Z)                                                    (SETTOPVAL (CAAR RESETW)                                                           (CDAR RESETW))                                                    (SETQ RESETW (CDR RESETW]                                  (COND                                     ((EQ RESETY RESETVARSLST)                                      (SETQ RESETVARSLST RESETW))                                     ((NOT (TAILP RESETVARSLST RESETY))                    (* some resetsaves may hae been performed inside of the resetvars.          these should NOT be ndone until the corresonding resetlst is exited          (they wouldnt be in shallow system since restvarsis simply a prog) therefore           the section of resetvarlst corresponding to the variable rebindings must be           spliced out)                    (* the reason for the TAILP is that if resetvarslst has for some reason already           been stripped back earlier than resety, dont want to do the nleft/rplacd.          (in fact nleft would generate an error)%.          one can think of this as analaogical to the code in resetrestore, where           resetvarslst is walked down until it is a tail of resetvarslst0.)                    (* reason for TAILP is to parallel the code in resetrestore, where resetvarslst           is processed until it is a tail of resetvarlst0.          we are trying to avoid the situation where resetvarslst has for some reason           been stripped back to before resety. note that if for some reason resetvarslst           is not a tail of resety, but resety is not a tail of resetvarslst, then nleft           will generate an error. this should not happen since things are supposed to be           taken off only in the order they were put on.          if this turns out to be a problem, we can undo things on resetvarslst by           smashing them and leaving them alone.)                                      (RPLACD (NLEFT RESETVARSLST 1 RESETY)                                             RESETW]                           (ERROR!])(RESETSAVE  [NLAMBDA RESETX                                            (* wt%: "23-JUL-79 21:08")                    (* for use under a RESETLST. If RESETX is atmic, like RESETVAR, otherwise like           RESETFORM, i.e. performs the resetting and saving associated with these           functions. The restoration aad errorset protectionis done by RESETLST.          Note that its value is not any particularly useful quanitty.          When used a la RESETFORM, can take a second argument whose value          (computed before firt argument) is restoration form, e.g.          (RESETSAVE (SETSEPR --) (LIST (QUOTE SETSEPR)          (GETSEPR))) (RESETSAVE NIL form) means just add value of form to RESETVARLST>)    (SETQ RESETVARSLST (CONS [COND                                [(AND (CAR RESETX)                                      (ATOM (CAR RESETX)))                                 (PROG1 (CONS (CAR RESETX)                                              (GETTOPVAL (CAR RESETX)))                                        (SETTOPVAL (CAR RESETX)                                               (EVAL (CADR RESETX)                                                     'INTERNAL]                                [(CDR RESETX)                    (* CADR of the entry put on resetvarslst is the value of the saving form.          The variable OLDVALUE is bound to this value during restoration.          This makes it more convenient for the estoration to be conditional, e.g.          the user can perform (RESETSAVE (FOO mumble)          (QUOTE (AND pred (FIE OLDVALUE)))))                                 (LIST (EVAL (CADR RESETX))                                       (EVAL (CAR RESETX]                                (T (LIST (LIST (COND                                                  ((EQ (CAAR RESETX)                                                       'SETQ)                                                   (CAR (CADDAR RESETX)))                                                  (T (CAAR RESETX)))                                               (EVAL (CAR RESETX]                             RESETVARSLST])(RESETVAR  [NLAMBDA (RESETX RESETY RESETZ)                            (* wt%: "23-JUL-79 21:09")    (PROG (MACROX MACROY)                    (* Permits evaluation of a form while resetting a top level variable, and           provides for the variable to be automatcally restored after valuation.          In this way, the user pays when he wants to %'rebind' a globalvariable, but           does not have to pay for the possiblity, as would be the case if variables such           as DFNFLG, LISPXHISTORY, etc. were not global, i.e.          were looked up. In the event of a control-D, or control-C reenter, the variabes           will still be restored by EVALQT. Note that STKEVALs will not do the right t on           variables reset by RESETVAR.)          (SETQ MACROX (SETQ RESETVARSLST (CONS (CONS RESETX (GETTOPVAL RESETX))                                                RESETVARSLST)))          (SETQ MACROY (ERRORSET (LIST 'PROGN (LIST 'SETTOPVAL (LIST 'QUOTE RESETX)                                                    RESETY)                                       RESETZ)                              'INTERNAL))          (SETTOPVAL (CAAR MACROX)                 (CDAR MACROX))          (SETQ RESETVARSLST (CDR MACROX))          [COND             (MACROY (RETURN (CAR MACROY]          (ERROR!]))(DEFINEQ(LOADUP  [LAMBDA (OPTION/FILES)                                     (* jds "13-Mar-86 12:58")    (SELECTQ OPTION/FILES        ((NIL HUGE)              (SETQQ COMPILE.EXT DCOM)             (while BOOTLOADEDFILES do (pushnew SYSFILES (pop BOOTLOADEDFILES)))             (LOADUP '(ACODE MACHINEINDEPENDENT POSTLOADUP))             (LOADUP '(BSP DPUPFTP))                    (* Load these now to speed up the rest of the loading)             (LOADUP '(AFONT))             (LOADUP '(EDIT WEDIT PRETTY DSPRINTDEF NEWPRINTDEF COMMENT ADVISE LOADFNS DMISC DFILE))                                                             (* DMISC needs to come before DFILE)             (LOADUP '(COMPATIBILITY BREAK FILEPKG RESOURCE))             (LOADUP '(MACROS DLAP BYTECOMPILER COMPILE))             (LOADUP '(HIST UNDO SPELL DWIM WTFIX CLISP DWIMIFY CLISPIFY RECORD ASSIST HELPDL))             (LOADUP '(COMMON))             (LOADUP '(HPRINT MACROAUX ADDARITH))             (LOADUP '(MSANALYZE MSPARSE MASTERSCOPE))             (DWIM 'C)             (COMPILEMODE 'D)             (LOADUP '(AARITH))             (LOADUP '(ADISPLAY HLDISPLAY MENU WINDOW ATTACHEDWINDOW WBREAK XXGEOM XXFILL))             (LOADUP '(DEXEC INSPECT))             (LOADUP '(DEDIT TTYIN))             (LOADUP '(DISKDLION DOVEINPUTOUTPUT DOVEDISK DOVEDISPLAY DOVEMISC DOVEETHER DOVEFLOPPY                              LOCALFILE DSKDISPLAY))             (LOADUP '(10MBDRIVER LLNS TRSERVER))             (LOADUP '(BRKDWN MATCH))             (LOADUP '(LLFCOMPILE))             (LOADUP '(SPP COURIER NSPRINT CLEARINGHOUSE NSFILING HARDCOPY PRESS PUPPRINT INTERPRESS                            FLOPPY))             (LOADUP '(IDLER)))        (COND           ((LISTP OPTION/FILES)                    (* RESETVAR just in case some sub-loading wants to "reach out" to other files)            (for X in OPTION/FILES               do [OR (FMEMB X SYSFILES)                      (RESETVAR DIRECTORIES LOADUPDIRECTORIES                       (DOFILESLOAD (LIST '(SYSLOAD FROM VALUEOF LOADUPDIRECTORIES) X]                  (SMASHFILECOMS X)))           (T (HELP "BAD LOADUP OPTION" OPTION/FILES])(ENDLOADUP  [LAMBDA NIL                                                (* lmm "29-Nov-84 16:39")                    (* set up for NONET configuration; sites with ethernet can load in init from           other places)                    (* * All records existing at this point in time have been loaded as part of the           system.)    [MAPC USERRECLST (FUNCTION (LAMBDA (R)                                 (RECORDPRIORITY R 'SYSTEM]    (MAPC SYSTEMINITVARS (FUNCTION (LAMBDA (X)                                     (SETTOPVAL (CAR X)                                            (COPY (CDR X]))(RPAQQ LOADUPDIRECTORIES ({ERIS}<LISPCORE>SOURCES> {ERIS}<LISPCORE>LIBRARY> {ERIS}<LISPUSERS>))(ADDTOVAR SYSTEMINITVARS (\CONNECTED.DIRECTORY . {DSK})                         (DWIMFLG . T)                         (ADDSPELLFLG . T)                         (FILEPKGFLG . T)                         (BUILDMAPFLG . T)                         (UPDATEMAPFLG . T)                         (DEFAULTREGISTRY)                         (DEFAULTPRINTINGHOST)                         (DIRECTORIES)                         (USERGREETFILES)                         (NETWORKOSTYPES)                         (CH.NET.HINT)                         (CH.DEFAULT.DOMAIN)                         (CH.DEFAULT.ORGANIZATION)                         (ADVISEDFNS)                         (LISPUSERSDIRECTORIES {DSK})                         (DISPLAYFONTDIRECTORIES {DSK})                         (DISPLAYFONTEXTENSIONS DISPLAYFONT)                         (INTERPRESSFONTDIRECTORIES {DSK}))(DECLARE%: DONTEVAL@LOAD DOCOPY (DUMMYDEF (ADDSTATS *)       (STATINIT NILL)       (LISPXWATCH NILL)       (CLBUFS NILL)       (FINDFILE INFILEP)       (FILEMAP *)       (VIRGINFN GETD)       (MKSWAPP NILL))(DUMMYDEF (USERNUMBER ZERO)       (HOSTNUMBER ZERO)       (HOSTNAME NILL)       (TRAPCOUNT ZERO))(DUMMYDEF (* QUOTE)       (GETP GETPROP)       (DECLARE QUOTE)       (FRPLNODE2 RPLNODE2)       (DISPLAYTERMP TRUE)       (MINFS EVQ)       (FRPLACA RPLACA)       (FRPLACD RPLACD)       (MISSPELLED? NILL)       (UNDOSAVE NILL)       (SETLINELENGTH ZERO)       (DOBE NILL)       (RELINK NILL)       (PUT PUTPROP)       (/PUT PUTPROP)       (MKSWAP EVQ))(ADDTOVAR SYSFILES )(ADDTOVAR LISPXHISTORY )(ADDTOVAR LINKEDFNS )(RPAQQ SHALLOWFLG NIL)(RPAQQ SPAGHETTIFLG T)(RPAQQ WIDEPAPERFLG T)(RPAQQ CLEARSTKLST T)(RPAQ SYSHASHARRAY (HASHARRAY 50))(RPAQQ DISPLAYTERMFLG T)(RPAQQ %#UNDOSAVES NIL)(RPAQQ NLAMA NIL)(RPAQQ NLAML NIL)(RPAQQ LAMS NIL)(RPAQQ EVALQTFORMS NIL)(RPAQQ TTYLINELENGTH 82)(RPAQQ COMPILE.EXT DCOM)(RPAQQ SYSOUT.EXT SYSOUT)(RPAQQ HOSTNAME NIL)(RPAQ SYSTEMTYPE (SYSTEMTYPE))(GCGAG T))(DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDTOVAR NLAMA RESETSAVE RESETVARS FAULTEVAL)(ADDTOVAR NLAML RESETVAR)(ADDTOVAR LAMA ))(PRETTYCOMPRINT APUTDQCOMS)(RPAQQ APUTDQCOMS        [(FNS GREETFILENAME FAULTEVAL FAULTAPPLY ERRORX SET-DOCUMENTATION)        (FNS SMASHFILECOMS SMASHFILECOMSLST)        (INITVARS (DEFAULTREGISTRY)               (USERGREETFILES)               (LOGINHOST/DIR '{DSK}))        (FNS RESETRESTORE RESETVARS RESETSAVE RESETVAR)        (FNS LOADUP ENDLOADUP)        (VARS LOADUPDIRECTORIES)        (ALISTS (SYSTEMINITVARS \CONNECTED.DIRECTORY DWIMFLG ADDSPELLFLG FILEPKGFLG BUILDMAPFLG                        UPDATEMAPFLG DEFAULTREGISTRY DEFAULTPRINTINGHOST DIRECTORIES USERGREETFILES                        NETWORKOSTYPES CH.NET.HINT CH.DEFAULT.DOMAIN CH.DEFAULT.ORGANIZATION                        ADVISEDFNS LISPUSERSDIRECTORIES DISPLAYFONTDIRECTORIES DISPLAYFONTEXTENSIONS                        INTERPRESSFONTDIRECTORIES))        (DECLARE%: DONTEVAL@LOAD DOCOPY (P (DUMMYDEF (ADDSTATS *)                                                  (STATINIT NILL)                                                  (LISPXWATCH NILL)                                                  (CLBUFS NILL)                                                  (FINDFILE INFILEP)                                                  (FILEMAP *)                                                  (VIRGINFN GETD)                                                  (MKSWAPP NILL))                                           (DUMMYDEF (USERNUMBER ZERO)                                                  (HOSTNUMBER ZERO)                                                  (HOSTNAME NILL)                                                  (TRAPCOUNT ZERO))                                           (DUMMYDEF (* QUOTE)                                                  (GETP GETPROP)                                                  (DECLARE QUOTE)                                                  (FRPLNODE2 RPLNODE2)                                                  (DISPLAYTERMP TRUE)                                                  (MINFS EVQ)                                                  (FRPLACA RPLACA)                                                  (FRPLACD RPLACD)                                                  (MISSPELLED? NILL)                                                  (UNDOSAVE NILL)                                                  (SETLINELENGTH ZERO)                                                  (DOBE NILL)                                                  (RELINK NILL)                                                  (PUT PUTPROP)                                                  (/PUT PUTPROP)                                                  (MKSWAP EVQ)))               (ADDVARS (SYSFILES)                      (LISPXHISTORY)                      (LINKEDFNS))               (VARS (SHALLOWFLG)                     (SPAGHETTIFLG T)                     (WIDEPAPERFLG T)                     (CLEARSTKLST T)                     (SYSHASHARRAY (HASHARRAY 50))                     (DISPLAYTERMFLG T)                     (%#UNDOSAVES)                     (NLAMA)                     (NLAML)                     (LAMS)                     (EVALQTFORMS)                     (TTYLINELENGTH 82)                     (COMPILE.EXT 'DCOM)                     (SYSOUT.EXT 'SYSOUT)                     (HOSTNAME)                     (SYSTEMTYPE (SYSTEMTYPE)))               (P (GCGAG T)))        (DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA RESETSAVE                                                                                       RESETVARS)                                                                             (NLAML RESETVAR)                                                                             (LAMA SET-DOCUMENTATION                                                                                    ERRORX])(DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDTOVAR NLAMA RESETSAVE RESETVARS)(ADDTOVAR NLAML RESETVAR)(ADDTOVAR LAMA SET-DOCUMENTATION ERRORX))(PUTPROPS APUTDQ COPYRIGHT ("Xerox Corporation" 1981 1982 1983 1984 1985 1986))(DECLARE%: DONTCOPY  (FILEMAP (NIL (4231 10768 (GREETFILENAME 4241 . 5786) (FAULTEVAL 5788 . 6972) (FAULTAPPLY 6974 . 9447) (ERRORX 9449 . 10233) (SET-DOCUMENTATION 10235 . 10766)) (10769 13110 (SMASHFILECOMS 10779 . 11308) (SMASHFILECOMSLST 11310 . 13108)) (13204 22625 (RESETRESTORE 13214 . 14542) (RESETVARS 14544 . 19032) (RESETSAVE 19034 . 21248) (RESETVAR 21250 . 22623)) (22626 25599 (LOADUP 22636 . 24960) (ENDLOADUP 24962 . 25597)))))STOP