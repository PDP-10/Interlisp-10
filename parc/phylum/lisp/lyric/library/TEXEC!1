(DEFINE-FILE-INFO §READTABLE "XCL" §PACKAGE "INTERLISP")(FILECREATED "30-Mar-87 09:45:19" {ERIS}<LISPCORE>LIBRARY>TEXEC.\;23 156382       |changes| |to:|  (FNS TEXEC.FILLBUFFER)      |previous| |date:| " 6-Nov-86 12:29:42" {ERIS}<LISPCORE>LIBRARY>TEXEC.\;22); Copyright (c) 1985, 1900, 1986, 1987 by Xerox Corporation.  All rights reserved.(PRETTYCOMPRINT TEXECCOMS)(RPAQQ TEXECCOMS        ((COMS                                                (* \;                                                              "To support development and compilation")              (DECLARE\: DONTCOPY (FILES (LOADCOMP)                                         ATERM)))        (COMS                                                (* \; "THE FILLBUFFER REPLACEMENT CODE")              (FNS TEXEC.OPENTEXTSTREAM TEXEC.DEFAULT.MENUFN TEXEC.CREATEMENU TEXEC.GET TEXEC.INCLUDE                    TEXEC.FIND.FORWARD TEXEC.FIND.BACKWARD TEDIT.FIND.BACKWARD                    TEDIT.BASICFIND.BACKWARD TEXEC.MENU.WHENHELDFN TEXEC.SHRINK.ICONCREATE                    TEXEC.FILLBUFFER TEXEC.FILLBUFFER.TCLASS TEXEC.CHSELPENDING                    TEXEC.FILLBUFFER.CHARDELETE TEXEC.FILLBUFFER.WORDDELETE                    TEXEC.FILLBUFFER.LINEDELETE TEXEC.PARENCOUNT TEXEC.PARENMATCH TEXEC.FLASHCARET                    TEXEC.TEXTSTREAM.TO.LINEBUF TEXEC.FIX TEXEC.NTHBUFCHARBACK TEXEC.NTHBACKCHNUM                    TEXEC.EOTP TEXEC.GETKEY TEXEC.INSERTCHAR TEXEC.DELETE TEXEC.\\CHDEL1 TEXEC.?EQUAL                    TEDIT.SCROLL? TEXEC.DISPLAYTEXT \\TEXEC.TEXTBOUT \\TEXEC.TEXTBOUT1                    \\TEXEC.TEXTBOUT2 \\TEXEC.TEXTBOUT3 \\TEXEC.TEXTBOUT4 \\TEXEC.SELFN                    TEXEC.PROCENTRYFN TEXEC.PROCEXITFN))        (COMS                                                (* \;                                                             "Code to support a TEXEC lisp 'listener'")              (FNS TEXEC TTEXEC)              (APPENDVARS (|BackgroundMenuCommands| (TEXEC '(TEXEC) "Starts TEXEC in a new window."))                     ))        (HORRIBLEVARS TEXEC.ICON TEXEC.ICON.MASK TEXEC.TITLED.ICON.TEMPLATE)        (VARS (TEXEC.ICON.TITLE.REGION (CREATE REGION BOTTOM _ 55 LEFT _ 6 WIDTH _ 77 HEIGHT _ 16))              (TEXEC.ICON.FONT (FONTCREATE 'HELVETICA 8 'BOLD))              (TEXEC.DEFAULT.MENU (TEXEC.CREATEMENU '((|Put| '|Put| NIL (SUBITEMS |Plain-Text|                                                                                |Old-Format|))                                                      (|Get| '|Get| NIL (SUBITEMS |Unformatted Get|))                                                      (|Include| '|Include|)                                                      ("Forward Find" '|ForwardFind|)                                                      ("Backward Find" '|BackwardFind|)                                                      (|Limit| '|Limit|))))              (|BackgroundMenu| NIL))        (INITVARS (TEXEC.BUFFERLIMIT 10000))))(* \; "To support development and compilation")(DECLARE\: DONTCOPY (FILESLOAD (LOADCOMP)       ATERM))(* \; "THE FILLBUFFER REPLACEMENT CODE")(DEFINEQ(TEXEC.OPENTEXTSTREAM  (LAMBDA (WINDOW MENUFN)                                    (* AJB " 4-Feb-86 13:41")                                                             (* |Initialize| |and| |return| TEDIT                                                              TEXTSTREAM)    (PROG* ((TEXSTREAM (OPENTEXTSTREAM NIL WINDOW NIL NIL (LIST 'TERMTABLE \\PRIMTERMTABLE                                                                'PROMPTWINDOW                                                                'DON\'T)))            (TEXOBJ (TEXTOBJ TEXSTREAM))            (TEXLEN (|fetch| TEXTLEN TEXOBJ)))                    (* |force| |shift| |select| |typein| |to| |be| |put| |in| |keyboard| |buffer|)           (TEXTPROP TEXSTREAM 'STARTINGEOF TEXLEN)           (TEXTPROP TEXSTREAM 'COPYBYBKSYSBUF T)            (* |forces| COPY-SELECT |to| |unread|                                                              |chars| |into| TTY |buffer|)           (TEXTPROP TEXSTREAM 'SELFN (FUNCTION \\TEXEC.SELFN))                                                             (* |Limits| |selection| |to| |current|                                                              |input|)           (|replace| STRMBOUTFN |of| TEXSTREAM |with| '\\TEXEC.TEXTBOUT)           (|replace| SET |of| (|fetch| SEL |of| TEXOBJ) |with| T)           (|replace| L1 |of| (|fetch| SEL |of| TEXOBJ) |with| (LIST (|fetch| DESC                                                                        |of| (|fetch| THISLINE                                                                                |of| TEXOBJ))))                                                             (* |hookup| |middle| |button| |menu|                                                              |instead| |of| TEDIT |menu|)           (WINDOWPROP WINDOW 'TEDIT.TITLEMENUFN MENUFN)           (CHANGEFONT (|fetch| CLFONT |of| (|fetch| CARETLOOKS |of| TEXOBJ))                  TEXSTREAM)           (RETURN TEXSTREAM))))(TEXEC.DEFAULT.MENUFN  (LAMBDA (W)                                                (* AJB "30-Jan-86 13:06")                    (* |Default| |User| F\n |for| TEXEC |windows--displays| \a |menu| |of| |items|           & |acts| |on| |the| |commands| |received.|)    (PROG ((TEXTOBJ (WINDOWPROP W 'TEXTOBJ))           (WMENU (WINDOWPROP W 'TEDIT.MENU))           THISMENU CH OFILE OCURSOR PCTB LINES SEL ITEM)          (COND             ((EQ (|fetch| EDITOPACTIVE |of| TEXTOBJ)                  T)                    (* |We're| |busy| |doing| |something,| |but| |not| |sure| |what.|          |Give| \a |general| "please wait" |msg|)              (TEDIT.PROMPTPRINT TEXTOBJ "Edit operation in progress; please wait." T)              (RETURN))             ((|fetch| EDITOPACTIVE |of| TEXTOBJ)            (* W\e |know| |specifically| |what's|                                                              |happening.| |Tell| |him|)              (TEDIT.PROMPTPRINT TEXTOBJ (CONCAT (|fetch| EDITOPACTIVE |of| TEXTOBJ)                                                " in progress; please wait.")                     T)              (RETURN)))          (SETQ PCTB (|fetch| PCTB |of| TEXTOBJ))          (SETQ THISMENU (COND                            (WMENU)                            ((SETQ WMENU (WINDOWPROP W 'TEDIT.MENU.COMMANDS))                             (PROG1 (SETQ WMENU (TEXEC.CREATEMENU WMENU))                                    (WINDOWPROP W 'TEDIT.MENU WMENU)))                            (TEXEC.DEFAULT.MENU)))          (SETQ ITEM (MENU THISMENU))          (ERSETQ (RESETLST (RESETSAVE (\\TEDIT.MARKACTIVE TEXTOBJ)                                   '(AND (\\TEDIT.MARKINACTIVE OLDVALUE)))                         (|replace| EDITOPACTIVE |of| TEXTOBJ |with| (OR (CAR ITEM)                                                                         T))                    (* S\o |we| |ca| |ntell| |the| |guy| WHAT |op| |is| |active.|)                         (SELECTQ (CAR ITEM)                             (|Put| (TEDIT.PUT TEXTOBJ NIL NIL (TEXTPROP TEXTOBJ 'CLEARPUT)))                             (|Plain-Text| (TEDIT.PUT TEXTOBJ NIL NIL T))                             (|Old-Format|                   (* |Write| |out| |the| |file| |in|                                                              |the| OLD |TEdit| |format.|)                                           (TEDIT.PUT TEXTOBJ NIL NIL NIL T))                             (|Get|                          (* |Get| \a |new| |file|                                                             (|overwriting| |the| |one| |being|                                                              |edited.|))                                    (TEXEC.GET TEXTOBJ NIL (TEXTPROP TEXTOBJ 'CLEARGET)))                             (|Unformatted Get|                                   (TEXEC.GET TEXTOBJ NIL T))                             (|Include|                      (* |Insert| \a |file| |where| |the|                                                              |caret| |is|)                                        (TEXEC.INCLUDE TEXTOBJ))                             (|ForwardFind|                  (* |Normal| |forward| |search| |Find|)                                            (TEXEC.FIND.FORWARD TEXTOBJ))                             (|BackwardFind|                 (* |Backward| |search| |Find|)                                  (TEXEC.FIND.BACKWARD TEXTOBJ))                             (|Limit| (SETQ TEXEC.BUFFERLIMIT (RNUMBER)))                             (COND                                ((CAR ITEM)                    (* |This| |is| \a |user-supplied| |entry.|          |Get| |the| |function,| |and| |apply| |it| |to| |the| TEXTSTREAM |for| |him|)                                 (APPLY* (CAR ITEM)                                        (|fetch| STREAMHINT |of| TEXTOBJ))))))))))(TEXEC.CREATEMENU  (LAMBDA (ITEMS)                                            (* AJB " 2-Jan-86 15:23")                    (* |Create| \a |TEdit| |command| |menu,| |given| \a |list| |of| |menu| |items.|)    (|create| MENU           ITEMS _ ITEMS           CENTERFLG _ T           MENUFONT _ (FONTCREATE 'HELVETICA 10 'BOLD)           WHENHELDFN _ 'TEXEC.MENU.WHENHELDFN           WHENSELECTEDFN _ '\\TEDIT.MENU.WHENSELECTEDFN)))(TEXEC.GET  (LAMBDA (TEXTOBJ FILE UNFORMATTED?)                        (* AJB " 3-Jan-86 10:33")                                                             (* |Get| \a |file| (|overwriting|                                                              |the| |current| |textstream| |data|))    (PROG (OFILE OCURSOR LINES USER.CMFILE RESP TITLE FILENAME MENUSTREAM (GETFN (TEXTPROP                                                                                  TEXTOBJ                                                                                  'GETFN))                 (SEL (|fetch| SEL |of| TEXTOBJ))                 (PCTB (|fetch| PCTB |of| TEXTOBJ))                 (TEDIT.GET.FINISHEDFORMS NIL))          (COND             ((AND (|fetch| \\DIRTY |of| TEXTOBJ)                   (PROGN (AND (|fetch| PROMPTWINDOW |of| TEXTOBJ)                               (FRESHLINE (|fetch| PROMPTWINDOW |of| TEXTOBJ)))                          (NOT (MOUSECONFIRM "Not saved yet; LEFT go Get anyway." T                                      (|fetch| PROMPTWINDOW |of| TEXTOBJ)))))                    (* |Only| |do| |the| GET |if| |he| |knows| |he'll| |zorch| |himself.|)              (RETURN)))          (SETQ OFILE (OR FILE (\\TEDIT.MAKEFILENAME (TEDIT.GETINPUT TEXTOBJ "File to GET:  "))))          (COND             ((AND OFILE (INFILEP OFILE))                    (* |Only| |if| |there's| \a |file| |to| |load| |and| |the| |file| |exists.|)              (COND                 ((AND GETFN (EQ (APPLY* GETFN (|fetch| STREAMHINT |of| TEXTOBJ)                                        (FULLNAME OFILE)                                        'BEFORE)                                 'DON\'T))                   (* H\e |doesn't| |want| |this|                                                              |document| |put.| |Bail| |out.|)                  (RETURN)))              (RESETLST (RESETSAVE (TTYDISPLAYSTREAM (OR (|fetch| PROMPTWINDOW |of| TEXTOBJ)                                                         PROMPTWINDOW)))                     (RESETSAVE (CURSOR WAITINGCURSOR))                     (\\SHOWSEL (|fetch| SEL |of| TEXTOBJ)                            NIL NIL)                     (\\TEXTCLOSEF (|fetch| STREAMHINT |of| TEXTOBJ))                                                             (* CLOSE |the| |old| |files|)                     (SETQ OFILE (OPENSTREAM OFILE 'INPUT))  (* |And| |open| |the| |new| |one.|)                     (SETQ PCTB (|replace| PCTB |of| TEXTOBJ |with| (TEDIT.BUILD.PCTB OFILE TEXTOBJ                                                                            NIL NIL                                                                           (|fetch| DEFAULTCHARLOOKS                                                                              |of| TEXTOBJ)                                                                           (|fetch| FMTSPEC                                                                              |of| TEXTOBJ)                                                                           UNFORMATTED?)))                     (|for| FORM |in| TEDIT.GET.FINISHEDFORMS |do| (EVAL FORM))                                                             (* D\o |any| |necessary| |cleanup|                                                              |for| |outside| |packages|)                     (SETQ LINES (|fetch| LINES |of| TEXTOBJ))                     (|replace| \\DIRTY |of| TEXTOBJ |with| NIL)                     (|for| FIRSTLINE |inside| LINES |do| (|replace| NEXTLINE |of| FIRSTLINE                                                             |with| NIL))                     (|replace| \\INSERTPCVALID |of| TEXTOBJ |with| NIL)                    (* |The| |old| |cached| |piece| |is| |no| |longer| |valid--keep| |people|           |from| |stepping| |on| |it,| |to| |prevent| |lost| |type-in| |and| |smashing|           |other| |docuemnts| |to| |which| |it| |has| |been| |moved...|)                     (TEXTPROP TEXTOBJ 'STARTINGEOF (|replace| TEXTLEN |of| TEXTOBJ                                                       |with| (SUB1 (\\EDITELT PCTB                                                                           (SUB1 (\\EDITELT PCTB                                                                               |\\PCTBLastPieceOffset|                                                                                        ))))))                     (|replace| CH# |of| SEL |with| (|replace| CHLIM |of| SEL |with| TEXTLEN))                     (|replace| DCH |of| SEL |with| 0)                     (|replace| POINT |of| SEL |with| 'LEFT)                     (|replace| SET |of| SEL |with| T)                     (|replace| SET |of| (|fetch| SCRATCHSEL |of| TEXTOBJ) |with| NIL)                     (|replace| SET |of| (|fetch| SHIFTEDSEL |of| TEXTOBJ) |with| NIL)                     (|replace| SET |of| (|fetch| MOVESEL |of| TEXTOBJ) |with| NIL)                     (|replace| SET |of| TEDIT.SELECTION |with| NIL)                     (|replace| SET |of| TEDIT.SHIFTEDSELECTION |with| NIL)                     (|replace| CARETLOOKS |of| TEXTOBJ |with| (\\TEDIT.GET.INSERT.CHARLOOKS TEXTOBJ                                                                       SEL))                     (|for| WINDOW |inside| (|fetch| \\WINDOW |of| TEXTOBJ) |as| LINE |inside| LINES                        |do|                                 (* |Fill| |the| |edit| |window|                                                             (\s) |with| |the| |new| |text|)                             (\\FILLWINDOW (|fetch| YBOT |of| LINE)                                    LINE TEXTOBJ NIL WINDOW))                     (\\FIXSEL SEL TEXTOBJ)                     (\\SHOWSEL SEL NIL T)                     (SETQ TITLE (TEXTSTREAM.TITLE TEXTOBJ)) (* |find| |and| |set| |the| |title|)                     (\\TEDIT.WINDOW.TITLE TEXTOBJ (\\TEDIT.ORIGINAL.WINDOW.TITLE TITLE NIL))                     (SETQ MENUSTREAM (TEDITMENU.STREAM TEXTOBJ))                     (COND                        ((AND MENUSTREAM (|type?| LITATOM TITLE))                    (* |if| |we| |have| \a |filename| |then| |put| |it| |in| |the| GET |and| PUT           |fields| |of| |the| |menu|)                         (SETQ FILENAME (PACKFILENAME 'VERSION NIL 'BODY TITLE))                         (MBUTTON.SET.FIELD MENUSTREAM '|Get| FILENAME)                         (MBUTTON.SET.FIELD MENUSTREAM '|Put| FILENAME)))                     (\\TEDIT.SET.WINDOW.EXTENT TEXTOBJ (\\TEDIT.PRIMARYW TEXTOBJ))                     (\\TEDIT.HISTORYADD TEXTOBJ (|create| TEDITHISTORYEVENT                                                        THACTION _ '|Get|)))              (AND GETFN (APPLY* GETFN (|fetch| STREAMHINT |of| TEXTOBJ)                                (FULLNAME (|fetch| TXTFILE |of| TEXTOBJ))                                'AFTER)))             (OFILE (TEDIT.PROMPTPRINT TEXTOBJ "[File not found.]"))             (T (TEDIT.PROMPTPRINT TEXTOBJ "[Get aborted.]" T))))))(TEXEC.INCLUDE  (LAMBDA (STREAM FILE START END)                            (* AJB " 3-Jan-86 11:25")                    (* |Obtain| \a |file| |name,| |and| |include| |that| |file's| |contents| |at|           |the| |place| |where| |the| |caret| |is.|)                    (* |Returns| T |if| |the| |insertion| |happened,| NIL |if| |there| |was| |no|           |place| |to| |put| |it.|)    (SETQ STREAM (TEXTOBJ STREAM))    (PROG ((SEL (|fetch| SEL |of| STREAM))           PCTB TEXTLEN NFILE NNFILE INSERTCH# INSPC LEN INSPC# PCLST NPC WASOPEN PCCOUNT NSTREAM)          (COND             ((|fetch| SET |of| SEL)                         (* |There| |is| \a |place| |to| |do|                                                              |the| |include.|)              (SETQ NFILE (OR FILE (\\TEDIT.MAKEFILENAME (TEDIT.GETINPUT STREAM                                                                 "Name of the file to load:  "))))              (COND                 ((NOT NFILE)                                (* I\f |no| |file| |was| |given,|                                                              |don't| |bother| |INCLUDEing.|)                  (TEDIT.PROMPTPRINT STREAM "[Include aborted.]" T)                  (RETURN))                 ((STREAMP NFILE))                 ((NOT (INFILEP NFILE))                      (* |Can't| |find| |the| |file.|                                                             |Put| |out| \a |message.|)                  (TEDIT.PROMPTPRINT STREAM "[File not found.]")                  (RETURN)))              (SETQ NNFILE (OPENSTREAM '{NODIRCORE} 'OUTPUT 'NEW))                                                             (* |Create| |the| |holding| |file|)              (SETQ NFILE (COND                             ((OPENP NFILE)                              (SETQ WASOPEN T)                              NFILE)                             (T                              (* |Wasn't| |open| --                                                             |need| |to| |open| |it| |for|                                                              |input...|)                                (OPENFILE NFILE 'INPUT))))   (* |And| |copy| |the| |file-section|                                                              |into| |it.|)              (COPYBYTES NFILE NNFILE (OR START 0)                     (OR END (GETEOFPTR NFILE)))                    (* |Have| |to| |explicitly| |fill| |in| 0 |and| EOFPTR\, |because| |if| |the|           |file| |was| |open| |already,| NIL\s |would| |only| |copy| |from| |current|           |fileptr| |to| EOF.)              (OR WASOPEN (CLOSEF NFILE))                    (* I\f |the| |file| |didn't| |come| |to| |use| |open,| |close| |it.|)              (CLOSEF NNFILE)              (SETQ NFILE NNFILE)              (SETQ START (SETQ END NIL))                    (* |Then| |pretend| |nothing|                                                              |happened.|)              (TEDIT.DO.BLUEPENDINGDELETE SEL STREAM)        (* |Delete| |any| |text,| |if| |need|                                                              |be|)              (SETQ TEXTLEN (|fetch| TEXTLEN |of| STREAM))                    (* W\e |need| |the| |POST-deletion| |text| |length| |for| |later,| |so| |this|           |must| |come| |after| |the| |b-p-d.|)              (\\SHOWSEL SEL NIL NIL)                        (* |Turn| |off| SEL\s |before| |we|                                                              |go| |any| |further|)              (SETQ NFILE (TEXTOBJ (SETQ NSTREAM (OPENTEXTSTREAM (OPENSTREAM NFILE 'INPUT)                                                        NIL NIL NIL (LIST 'FONT (                                                                         \\TEDIT.GET.INSERT.CHARLOOKS                                                                                 STREAM SEL)                                                                          'PARALOOKS                                                                          (|fetch| FMTSPEC                                                                             |of| STREAM))))))                    (* |Get| \a |textobj| |to| |describe| |the| |include| |source| |file|          (|need| NSTREAM |so| |that| |if| |we| |have| |to| |convert| |it| |to|           |formatted,| |we| |won't| |have| |lost| |the| |textstream--and| |thus| |smash|           |the| |free| |list.|))              (COND                 ((AND (|fetch| FORMATTEDP |of| NFILE)                       (NOT (|fetch| FORMATTEDP |of| STREAM)))                    (* I\f |the| |includED| |text| |is| |formatted| |but| |this| |file| |isn't,|           |let's| |format| |it!|)                  (\\TEDIT.CONVERT.TO.FORMATTED STREAM))                 ((AND (|fetch| FORMATTEDP |of| STREAM)                       (NOT (|fetch| FORMATTEDP |of| NFILE)))                    (* |The| TARGET |document| |is| |formatted,| |but| |the| INCLUDE\d |text|           |isn't.| |Better| |format| |it| |before| |completing| |the| |include.|)                  (\\TEDIT.CONVERT.TO.FORMATTED NFILE)))              (SETQ PCTB (|fetch| PCTB |of| STREAM))                    (* HERE\, |because| |the| |conversion| |to| |formatted| |will| |lengthen| |the|           |pctb|)              (SETQ INSERTCH# (COND                                 ((EQ (|fetch| POINT |of| SEL)                                      'LEFT)                                  (|fetch| CH# |of| SEL))                                 (T (|fetch| CHLIM |of| SEL))))                                                             (* |Find| |the| |place| |to| |make|                                                              |the| |insertion.|)              (SETQ INSPC# (OR (\\CHTOPCNO INSERTCH# PCTB)                               (\\EDITELT PCTB |\\PCTBLastPieceOffset|)))                                                             (* |Likewise,| |this| |is| |affected|                                                              |by| |the| |convert-to-formatted|)              (SETQ INSPC (\\EDITELT (|fetch| PCTB |of| STREAM)                                 (ADD1 INSPC#)))             (* |The| |piece| |to| |make| |the|                                                              |insertion| |in|)              (COND                 ((NEQ INSPC 'LASTPIECE)                  (COND                     ((IGREATERP INSERTCH# (\\EDITELT PCTB INSPC#))                                                             (* |Must| |split| |the| |piece.|)                      (SETQ INSPC (\\SPLITPIECE INSPC INSERTCH# STREAM INSPC#))                      (|add| INSPC# |\\EltsPerPiece|)                      (SETQ PCTB (|fetch| PCTB |of| STREAM)) (* |Refresh| |the| PCTB |in| |case|                                                              |it| |grew.|)                      ))))              (SETQ PCLST (|fetch| PCTB |of| NFILE))                    (* A |temporary| |pctb,| |holding| |the| |pieces| |which| |describe| |the|           INCLUDE\d |text|)              (SETQ LEN (SUB1 (\\EDITELT PCLST (SUB1 (\\EDITELT PCLST |\\PCTBLastPieceOffset|)))))              (SETQ PCCOUNT (IDIFFERENCE (SUB1 (\\EDITELT PCLST |\\PCTBLastPieceOffset|))                                   |\\FirstPieceOffset|))                    (* |Remember| |how| |many| |slots| |in| |the| PCTB |we| |took| |up|          (|i.e.| 2 \x \# |of| |pieces|))              (\\TEDIT.INSERT.PIECES STREAM INSERTCH# (SETQ PCLST (\\EDITELT PCLST (ADD1                                                                                  |\\FirstPieceOffset|                                                                                         )))                     LEN INSPC INSPC# NIL)              (COND                 ((AND (|fetch| FORMATTEDP |of| STREAM)                       (NOT (|fetch| FORMATTEDP |of| NFILE)))                    (* I\f |the| |includED| |text| |is| |formatted| |but| |this| |file| |isn't,|           |let's| |format| |it!|)                  (\\TEDIT.CONVERT.TO.FORMATTED STREAM INSERTCH# (IPLUS INSERTCH# LEN))))              (\\TEDIT.HISTORYADD STREAM (|create| TEDITHISTORYEVENT                                                THACTION _ '|Include|                                                THCH# _ INSERTCH#                                                THLEN _ LEN                                                THFIRSTPIECE _ PCLST))                    (* |Remember| |that| |we| |did| |this,| |so| |it| |can| |be| |undone.|)              (|replace| TEXTLEN |of| STREAM |with| (IPLUS TEXTLEN LEN))                    (* |Inserting| |the| |pieces| |didn't| |fix| |up| |things| |like| |the|           |length| |of| |the| |document,| |so| |do| |it| |now.|)              (AND (|fetch| \\WINDOW |of| STREAM)                   (\\FIXILINES STREAM SEL INSERTCH# LEN TEXTLEN))                                                             (* |Mark| |any| |changed| |lines|                                                              |dirty.|)              (|replace| CHLIM |of| SEL |with| (|replace| CH# |of| SEL |with| (IPLUS INSERTCH# LEN)))                    (* |Now| |fix| |up| |the| |selection| |to| |be| |at| |the| |end| |of| |the|           |included| |text,| |point_left,| |character| |selection| |grain.|)              (|replace| DCH |of| SEL |with| 0)              (|replace| (SELECTION DX) |of| SEL |with| 0)              (|replace| POINT |of| SEL |with| 'LEFT)                    (* S\o |that| |several| |things| INCLUDED |in| |sequence| |fall| |in|           |sequence.|)              (|replace| SELKIND |of| SEL |with| 'CHAR)              (|replace| SELOBJ |of| SEL |with| NIL)              (COND                 ((|fetch| \\WINDOW |of| STREAM)                    (* |We're| |displaying;| |update| |the| |display| |and| |the| |selection's|           |line| |references|)                  (TEDIT.UPDATE.SCREEN STREAM)                  (\\FIXSEL SEL STREAM)                  (\\SHOWSEL SEL NIL T)))              (|replace| \\DIRTY |of| STREAM |with| T)       (* |Mark| |the| |document| |changed|)              (\\SETUPGETCH (|create| EDITMARK                                   PC _ INSPC                                   PCOFF _ 0                                   PCNO _ (IPLUS INSPC# PCCOUNT))                     STREAM)                                 (* |Set| |the| |fileptr| |to| |the|                                                              |end| |of| |the| |insertion.|)              (TEDIT.SCROLL? STREAM)                         (* |Scroll| |the| |end| |into| |view|                                                              |if| |necessary|)              T)             (T (TEDIT.PROMPTPRINT STREAM "Please choose the place for the INCLUDE first." T))))))(TEXEC.FIND.FORWARD  (LAMBDA (TEXTOBJ)                                          (* AJB "30-Jan-86 15:03")                                                             (* |Case| |sensitive| |search,| |with|                                                              * |and| \# |wildcards|)    (PROG* (FTEXT CHL (SEL (|fetch| SCRATCHSEL |of| TEXTOBJ))                  (SHIFTEDSELWASON (|fetch| ONFLG |of| (|fetch| SHIFTEDSEL |of| TEXTOBJ)))                  (MOVESELWASON (|fetch| ONFLG |of| (|fetch| MOVESEL |of| TEXTOBJ)))                  (DELETESELWASON (|fetch| ONFLG |of| (|fetch| DELETESEL |of| TEXTOBJ)))                  (W (|fetch| SELWINDOW |of| TEXTOBJ))                  (LINES (WINDOWPROP W 'LINES))                  (LINE (|fetch| NEXTLINE |of| LINES))                  (WREG (DSPCLIPPINGREGION NIL W))                  (WHEIGHT (|fetch| HEIGHT |of| WREG))                  (WWIDTH (|fetch| WIDTH |of| WREG)))           (SETQ FTEXT (TEDIT.GETINPUT TEXTOBJ "Text to find: " (WINDOWPROP W 'TEDIT.LAST.FIND.STRING                                                                       )                              (CHARCODE (EOL LF ESC))))           (COND              (FTEXT (TEDIT.PROMPTPRINT TEXTOBJ "Searching..." T)                    (* I\f |the| |selection| |is| |at| |the| |caret,| |then| |always| |start|           |there.| |Otherwise| |check| |if| \a |previous| |find| |is| |in| |view,| |and|           |if| |not| |just| |start| |at| |the| |caret|)                     (SETQ CHL (TEDIT.FIND TEXTOBJ (MKSTRING FTEXT)                                      (COND                                         ((|fetch| SET |of| (|fetch| SEL |of| TEXTOBJ))                                          1)                                         ((WINDOWPROP W 'TEDIT.LAST.FIND.POSITION)                                          (IPLUS (WINDOWPROP W 'TEDIT.LAST.FIND.POSITION)                                                 2))                                         (T 1))                                      NIL T))                     (COND                        (CHL                                 (* W\e |found| |the| |target| |text.|)                             (TEDIT.PROMPTPRINT TEXTOBJ "Done.")                             (COND                                ((|fetch| SET |of| SEL)      (* |Turn| |any| |selections| |off|)                                 (\\SHOWSEL SEL NIL NIL)))                             (|replace| SET |of| SEL |with| T)                             (|for| CARET |inside| (|fetch| CARET |of| TEXTOBJ)                                |do| (\\EDIT.UPCARET CARET)) (* |Remove| |any| |visible| |carets|)                             (\\SHOWSEL (|fetch| SEL |of| TEXTOBJ)                                    NIL NIL)                             (|replace| CH# |of| SEL |with| (CAR CHL))                                                             (* |Set| |up| SELECTION |to| |be|                                                              |the| |found| |text|)                             (|replace| CHLIM |of| SEL |with| (ADD1 (CADR CHL)))                             (|replace| DCH |of| SEL |with| (ADD1 (IDIFFERENCE (CADR CHL)                                                                         (CAR CHL))))                             (|replace| POINT |of| SEL |with| 'RIGHT)                             (|replace| SET |of| (|fetch| SEL |of| TEXTOBJ) |with| NIL)                             (|replace| SELKIND |of| SEL |with| 'CHAR)                             (|replace| \\TEXTOBJ |of| SEL |with| TEXTOBJ)                             (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)                                                             (* |And| |never| |pending| \a                                                              |deletion.|)                             (|for| LINE |inside| (|fetch| L1 |of| (|fetch| SEL |of| TEXTOBJ))                                |when| LINE |do| (|replace| YBOT |of| LINE                                                    |with| (SUB1 (|fetch| BOTTOM |of| WREG))))                    (* |Make| |sure| |it| |thinks| |the| |old| |selection| |is| |off-screen| |for|           |now|)                             (|for| LINE |inside| (|fetch| LN |of| (|fetch| SEL |of| TEXTOBJ))                                |when| LINE |do| (|replace| YBOT |of| LINE                                                    |with| (SUB1 (|fetch| BOTTOM |of| WREG))))                             (BITBLT NIL 0 0 W 0 (|fetch| BOTTOM |of| WREG)                                    WWIDTH                                    (IDIFFERENCE WHEIGHT (|fetch| BOTTOM |of| WREG))                                    'TEXTURE                                    'REPLACE WHITESHADE)                             (SETQ LINE (\\TEDIT.FIND.FIRST.LINE TEXTOBJ WHEIGHT (CAR CHL)                                               W))           (* |Find| |the| |first| |line| |to|                                                              |go| |in| |the| |window|)                             (|replace| YBOT |of| LINE |with| (IDIFFERENCE WHEIGHT                                                                     (|fetch| LHEIGHT |of| LINE)))                             (|replace| YBASE |of| LINE |with| (IPLUS (|fetch| YBOT |of| LINE)                                                                      (|fetch| DESCENT |of| LINE)))                             (\\DISPLAYLINE TEXTOBJ LINE W)                             (\\FILLWINDOW (|fetch| YBOT |of| LINE)                                    LINE TEXTOBJ NIL W)                             (|replace| HASCARET |of| (|fetch| SEL |of| TEXTOBJ) |with| NIL)                             (|replace| HASCARET |of| SEL |with| NIL)                                                             (* |Make| |sure| |selection| |has|                                                              |no| |caret|)                             (|replace| HOWHEIGHT |of| SEL |with| 16384)                                                             (* |Full| |height| |for|                                                              |highlighting|)                             (COND                                ((|fetch| SET |of| SEL)                                 (\\FIXSEL SEL TEXTOBJ)                                 (\\SHOWSEL SEL NIL T)))                             (COND                                ((|fetch| SET |of| (|fetch| SHIFTEDSEL |of| TEXTOBJ))                                 (\\FIXSEL (|fetch| SHIFTEDSEL |of| TEXTOBJ)                                        TEXTOBJ)                                 (AND SHIFTEDSELWASON (\\SHOWSEL (|fetch| SHIFTEDSEL |of| TEXTOBJ)                                                             NIL T))))                             (COND                                ((|fetch| SET |of| (|fetch| MOVESEL |of| TEXTOBJ))                                 (\\FIXSEL (|fetch| MOVESEL |of| TEXTOBJ)                                        TEXTOBJ)                                 (AND MOVESELWASON (\\SHOWSEL (|fetch| MOVESEL |of| TEXTOBJ)                                                          NIL T))))                             (COND                                ((|fetch| SET |of| (|fetch| DELETESEL |of| TEXTOBJ))                                 (\\FIXSEL (|fetch| DELETESEL |of| TEXTOBJ)                                        TEXTOBJ)                                 (AND DELETESELWASON (\\SHOWSEL (|fetch| DELETESEL |of| TEXTOBJ)                                                            NIL T))))                             (\\TEDIT.SET.WINDOW.EXTENT TEXTOBJ W)                             (WINDOWPROP W 'TEDIT.LAST.FIND.STRING FTEXT)                                                             (* |And| |get| |it| |into| |the|                                                              |window|)                             (WINDOWPROP W 'TEDIT.LAST.FIND.POSITION (CAR CHL))                                                             (* |Store| |last| |found| |position|)                             )                        (T (TEDIT.PROMPTPRINT TEXTOBJ "(not found)")                           (WINDOWPROP W 'TEDIT.LAST.FIND.POSITION NIL)                                                             (* |reset| |last| |position| |found|)                           (\\SHOWSEL (|fetch| SEL |of| TEXTOBJ)                                  NIL T))))))))(TEXEC.FIND.BACKWARD  (LAMBDA (TEXTOBJ)                                          (* AJB "28-Jan-86 15:06")                                                             (* |Case| |sensitive| |search,| |with|                                                              * |and| \# |wildcards|)    (PROG* (FTEXT CHL (SEL (|fetch| SCRATCHSEL |of| TEXTOBJ))                  (SHIFTEDSELWASON (|fetch| ONFLG |of| (|fetch| SHIFTEDSEL |of| TEXTOBJ)))                  (MOVESELWASON (|fetch| ONFLG |of| (|fetch| MOVESEL |of| TEXTOBJ)))                  (DELETESELWASON (|fetch| ONFLG |of| (|fetch| DELETESEL |of| TEXTOBJ)))                  (W (|fetch| SELWINDOW |of| TEXTOBJ))                  (LINES (WINDOWPROP W 'LINES))                  (LINE (|fetch| NEXTLINE |of| LINES))                  (WREG (DSPCLIPPINGREGION NIL W))                  (WHEIGHT (|fetch| HEIGHT |of| WREG))                  (WWIDTH (|fetch| WIDTH |of| WREG)))           (SETQ FTEXT (TEDIT.GETINPUT TEXTOBJ "Text to find: " (WINDOWPROP W 'TEDIT.LAST.FIND.STRING                                                                       )                              (CHARCODE (EOL LF ESC))))           (COND              (FTEXT (TEDIT.PROMPTPRINT TEXTOBJ "Searching..." T)                    (* I\f |the| |selection| |is| |at| |the| |caret,| |then| |always| |start|           |there.| |Otherwise| |check| |if| \a |previous| |find| |is| |in| |view,| |and|           |if| |not| |just| |start| |at| |the| |caret|)                     (SETQ CHL (TEDIT.FIND.BACKWARD TEXTOBJ (MKSTRING FTEXT)                                      (COND                                         ((|fetch| SET |of| (|fetch| SEL |of| TEXTOBJ))                                          (|fetch| CH# |of| (|fetch| SEL |of| TEXTOBJ)))                                         (T (OR (AND (|fetch| SET |of| SEL)                                                     (WINDOWPROP W 'TEDIT.LAST.FIND.POSITION))                                                (|fetch| CH# |of| (|fetch| SEL |of| TEXTOBJ)))))                                      1 T))                     (COND                        (CHL                                 (* W\e |found| |the| |target| |text.|)                             (TEDIT.PROMPTPRINT TEXTOBJ "Done.")                             (COND                                ((|fetch| SET |of| SEL)      (* |Turn| |any| |selections| |off|)                                 (\\SHOWSEL SEL NIL NIL)))                             (|replace| SET |of| SEL |with| T)                             (|for| CARET |inside| (|fetch| CARET |of| TEXTOBJ)                                |do| (\\EDIT.UPCARET CARET)) (* |Remove| |any| |visible| |carets|)                             (\\SHOWSEL (|fetch| SEL |of| TEXTOBJ)                                    NIL NIL)                             (|replace| CH# |of| SEL |with| (SUB1 (IDIFFERENCE (CAR CHL)                                                                         (IDIFFERENCE (CADR CHL)                                                                                (CAR CHL)))))                                                             (* |Set| |up| SELECTION |to| |be|                                                              |the| |found| |text|)                             (|replace| CHLIM |of| SEL |with| (CAR CHL))                             (|replace| DCH |of| SEL |with| (ADD1 (IDIFFERENCE (CADR CHL)                                                                         (CAR CHL))))                             (|replace| POINT |of| SEL |with| 'LEFT)                             (|replace| SET |of| (|fetch| SEL |of| TEXTOBJ) |with| NIL)                             (|replace| SELKIND |of| SEL |with| 'CHAR)                             (|replace| \\TEXTOBJ |of| SEL |with| TEXTOBJ)                             (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)                                                             (* |And| |never| |pending| \a                                                              |deletion.|)                             (|for| LINE |inside| (|fetch| L1 |of| (|fetch| SEL |of| TEXTOBJ))                                |when| LINE |do| (|replace| YBOT |of| LINE                                                    |with| (SUB1 (|fetch| BOTTOM |of| WREG))))                    (* |Make| |sure| |it| |thinks| |the| |old| |selection| |is| |off-screen| |for|           |now|)                             (|for| LINE |inside| (|fetch| LN |of| (|fetch| SEL |of| TEXTOBJ))                                |when| LINE |do| (|replace| YBOT |of| LINE                                                    |with| (SUB1 (|fetch| BOTTOM |of| WREG))))                             (BITBLT NIL 0 0 W 0 (|fetch| BOTTOM |of| WREG)                                    WWIDTH                                    (IDIFFERENCE WHEIGHT (|fetch| BOTTOM |of| WREG))                                    'TEXTURE                                    'REPLACE WHITESHADE)                             (SETQ LINE (\\TEDIT.FIND.FIRST.LINE TEXTOBJ WHEIGHT (CAR CHL)                                               W))           (* |Find| |the| |first| |line| |to|                                                              |go| |in| |the| |window|)                             (|replace| YBOT |of| LINE |with| (IDIFFERENCE WHEIGHT                                                                     (|fetch| LHEIGHT |of| LINE)))                             (|replace| YBASE |of| LINE |with| (IPLUS (|fetch| YBOT |of| LINE)                                                                      (|fetch| DESCENT |of| LINE)))                             (\\DISPLAYLINE TEXTOBJ LINE W)                             (\\FILLWINDOW (|fetch| YBOT |of| LINE)                                    LINE TEXTOBJ NIL W)                             (|replace| HASCARET |of| (|fetch| SEL |of| TEXTOBJ) |with| NIL)                             (|replace| HASCARET |of| SEL |with| NIL)                                                             (* |Make| |sure| |selection| |has|                                                              |no| |caret|)                             (|replace| HOWHEIGHT |of| SEL |with| 16384)                                                             (* |Full| |height| |for|                                                              |highlighting|)                             (COND                                ((|fetch| SET |of| SEL)                                 (\\FIXSEL SEL TEXTOBJ)                                 (\\SHOWSEL SEL NIL T)))                             (COND                                ((|fetch| SET |of| (|fetch| SHIFTEDSEL |of| TEXTOBJ))                                 (\\FIXSEL (|fetch| SHIFTEDSEL |of| TEXTOBJ)                                        TEXTOBJ)                                 (AND SHIFTEDSELWASON (\\SHOWSEL (|fetch| SHIFTEDSEL |of| TEXTOBJ)                                                             NIL T))))                             (COND                                ((|fetch| SET |of| (|fetch| MOVESEL |of| TEXTOBJ))                                 (\\FIXSEL (|fetch| MOVESEL |of| TEXTOBJ)                                        TEXTOBJ)                                 (AND MOVESELWASON (\\SHOWSEL (|fetch| MOVESEL |of| TEXTOBJ)                                                          NIL T))))                             (COND                                ((|fetch| SET |of| (|fetch| DELETESEL |of| TEXTOBJ))                                 (\\FIXSEL (|fetch| DELETESEL |of| TEXTOBJ)                                        TEXTOBJ)                                 (AND DELETESELWASON (\\SHOWSEL (|fetch| DELETESEL |of| TEXTOBJ)                                                            NIL T))))                             (\\TEDIT.SET.WINDOW.EXTENT TEXTOBJ W)                             (WINDOWPROP W 'TEDIT.LAST.FIND.STRING FTEXT)                                                             (* |And| |get| |it| |into| |the|                                                              |window|)                             (WINDOWPROP W 'TEDIT.LAST.FIND.POSITION (CAR CHL))                                                             (* |Store| |last| |found| |position|)                             )                        (T (TEDIT.PROMPTPRINT TEXTOBJ "(not found)")                           (WINDOWPROP W 'TEDIT.LAST.FIND.POSITION NIL)                                                             (* |reset| |last| |position| |found|)                           (\\SHOWSEL (|fetch| SEL |of| TEXTOBJ)                                  NIL T))))))))(TEDIT.FIND.BACKWARD  (LAMBDA (TEXTOBJ TARGETSTRING START# END# WILDCARDS?)      (* AJB "30-Jan-86 12:59")                    (* I\f WILDCARDS? |is| NIL |then| TEDIT.FIND.BACKWARD |is| |the| |old|           TEDIT.FIND. |Else,| |it| |returns| \a |list| |of|          (SEL.START# SEL.END#) |which| |is| |the| |start| |and| |end| |char| |positions|           |of| |the| |selection|)    (PROG ((TEDIT.WILDCARD.CHARACTERS '("#" "*")))          (AND TARGETSTRING (NOT (STRINGP TARGETSTRING))               (SETQ TARGETSTRING (MKSTRING TARGETSTRING)))          (SETQ TEXTOBJ (TEXTOBJ TEXTOBJ))          (\\TEDIT.HISTORYADD TEXTOBJ (|create| TEDITHISTORYEVENT                                             THACTION _ '|Find|                                             THAUXINFO _ TARGETSTRING))          (|replace| \\INSERTPCVALID |of| TEXTOBJ |with| NIL)(* |Any| FIND |invalidates| |the|                                                              |type-in| |cache.|)          (RETURN           (COND              (WILDCARDS?                    (* |will| |return| \a |list| |of| |start| |and| |end| |of| |selection| |or|           |nil| |if| |not| |found|)               (PROG (TARGETLIST SEL RESULT RESULT1)                     (RETURN (COND                                ((OR START# (AND (|fetch| SET |of| (SETQ SEL (|fetch| SEL                                                                                |of| TEXTOBJ)))                                                 (LEQ (SETQ START#                                                       (SELECTQ (|fetch| POINT |of| SEL)                                                           (LEFT (|fetch| CH# |of| SEL))                                                           (RIGHT (|fetch| CHLIM |of| SEL))                                                           NIL))                                                      (OR END# (SETQ END# 1)))))                                                             (* |Backwards| |search|)                                 (COND                                    ((AND (|for| X                                             |in| (SETQ TARGETLIST                                                   (\\TEDIT.PARSE.SEARCHSTRING                                                    (|for| X |in| (UNPACK (MKATOM TARGETSTRING))                                                       |collect| (MKSTRING X)))) |collect| X                                             |when| (LITATOM X))                                          (SETQ RESULT1 (\\TEDIT.SUBST.FN1 TEXTOBJ TARGETLIST END#                                                                START#)))                                                             (* I\f |there| |are| |atoms,| |they|                                                              |are| |tedit| |wildcard| |chars|)                                     (\\TEDIT.FIND.WC TEXTOBJ TARGETLIST RESULT1 START#))                                    (T                       (* |no| |wildcards| |but| |bounded|                                                              |search|)                                       (COND                                          ((SETQ RESULT (TEDIT.FIND.BACKWARD TEXTOBJ (CAR TARGETLIST)                                                               START# END# NIL))                                           (LIST RESULT (SUB1 (IPLUS RESULT (NCHARS (CAR TARGETLIST))                                                                     ))))))))))))              (T                     (* |will| |return| |just| |the| |number| |of| |the| |start| |char| |or| |nil|           |if| |not| |found|)                 (PROG (RESULT)                       (SETQ RESULT (TEDIT.BASICFIND.BACKWARD TEXTOBJ TARGETSTRING START# 1))                       (RETURN (COND                                  ((NULL END#)                                   RESULT)                                  ((OR (NULL RESULT))                                   NIL)                                  (T RESULT))))))))))(TEDIT.BASICFIND.BACKWARD  (LAMBDA (TEXTOBJ STRING CH# CHLIM)                         (* AJB "24-Jan-86 10:19")                    (* |Search| |thru| TEXTOBJ\, |starting| |where| |the| |caret| |is,| |for| |the|           |string| STRING\, |exact| |match| |only| |for| |now.|          (|Optionally,| |start| |the| |search| |at| |character| |ch#.|))    (PROG ((SEL (|fetch| SEL |of| TEXTOBJ))           (TEXTLEN (|fetch| TEXTLEN |of| TEXTOBJ))           (TEXTLIM (OR CHLIM (ADD1 (IDIFFERENCE (|fetch| TEXTLEN |of| TEXTOBJ)                                           (NCHARS STRING)))))           (TEXTSTREAM (|fetch| STREAMHINT |of| TEXTOBJ))           (FOUND NIL)           CH1 CH CH#1 (RSTRING "")           (TSTRING (CONCAT STRING))           ANCHOR PCH# OANCHOR CH)                           (* |Reverse| |the| |string|)          (|while| (SETQ CH (GLC TSTRING)) |do| (SETQ RSTRING (CONCAT RSTRING (MKSTRING CH))))          (SETQ CH#1 (NTHCHARCODE RSTRING 1))          (|replace| \\INSERTPCVALID |of| TEXTOBJ |with| NIL)                    (* |2/12/85| JDS\: I |don't| |understand| WHY |this| |is| |here,| |but| |I'll|           |assume| |it's| |right| |for| |now.|)                                                             (* |Prohibit| |future| |insertions|                                                              |in| |the| |current| |piece.|)          (COND             ((OR CH# (|fetch| SET |of| SEL))                (* |There| |must| |be| \a                                                              |well-defined| |starting| |point.|)              (RETURN (PROG NIL                            (SETQ CH1 (SUB1 (OR CH# (SELECTQ (|fetch| POINT |of| SEL)                                                        (LEFT (|fetch| CH# |of| SEL))                                                        (RIGHT (|fetch| CHLIM |of| SEL))                                                        NIL))))                                                             (* |Find| |the| |starting| |point|                                                              |for| |the| |search|)                                                             (* DO THE SEARCH)                            (COND                               ((ILESSP CH1 2)                    (* |Starting| |the| |search| |past| |the| |last| |possible| |starting| |point.|          |Just| |punt.|)                                (RETURN NIL)))                        RETRY                            (SETQ ANCHOR CH1)                            (\\SETUPGETCH ANCHOR TEXTOBJ)                            (|for| |old| ANCHOR |from| CH1 |by| -1 |to| 2                               |do| (SETQ CH (\\BACKBIN TEXTSTREAM))                                    (COND                                       ((EQ CH CH#1)                                        (RETURN))))                            (COND                               ((ILEQ ANCHOR 2)                                (RETURN NIL)))               (* N\o |starting| |character| |found|                                                              |before| |end| |of| |string|)                            (SETQ OANCHOR ANCHOR)                            (SETQ FOUND T)                            (|for| |old| CH1 |from| (SUB1 ANCHOR) |to| 2 |by| -1 |as| PCH#                               |from| 2 |to| (NCHARS STRING) |do| (SETQ CH (\\BACKBIN TEXTSTREAM))                                                                  (COND                                                                     ((NEQ CH (NTHCHARCODE RSTRING                                                                                      PCH#))                                                                      (SETQ FOUND NIL)                                                                      (RETURN))))                            (COND                               (FOUND (RETURN ANCHOR))                               (T (GO RETRY))))))))))(TEXEC.MENU.WHENHELDFN  (LAMBDA (ITEM MENU BUTTON)                                 (* AJB "30-Jan-86 13:09")    (PROMPTPRINT (SELECTQ (CAR ITEM)                     (|Put| "Sends the document to a file")                     (|Get| "Gets a new file as the document to edit.")                     (|Include| "Includes a file at the cursor")                     (|ForwardFind| "Searches forward for a string of text")                     (|BackwardFind|                           "Searches backward for a string of text")                     (|Limit| "Limits the number of characters in the textstream in memory")                     ""))))(TEXEC.SHRINK.ICONCREATE  (LAMBDA (W ICON ICONW)                                     (* AJB " 7-Jan-86 16:37")                                                             (* |Create| |the| |icon| |that|                                                              |represents| |this| |window.|)    (PROG ((ICON (WINDOWPROP W 'ICON))           (ICONTITLE (WINDOWPROP W 'TEDIT.ICON.TITLE))           (SHRINKFN (WINDOWPROP W 'SHRINKFN)))          (COND             ((NOT (WINDOWPROP W 'TEXTOBJ))                    (* |This| |isn't| |really| \a |TEdit| |window| |any| |more.|          |Don't| |do| |anything|)              NIL)             ((WINDOWPROP W 'TEDITMENU)                      (* |This| |is| \a |text| |menu,| |and|                                                              |shrinks| |without| |trace.|)              NIL)             ((OR (IGREATERP (FLENGTH SHRINKFN)                         3)                  (AND (NOT (FMEMB 'SHRINKATTACHEDWINDOWS SHRINKFN))                       (IGREATERP (FLENGTH SHRINKFN)                              2)))                    (* |There| |are| |other| |functions| |that| |expect| |to| |handle| |this.|          |Don't| |bother.|)              NIL)             ((OR (AND ICONTITLE (EQUAL ICONTITLE (PROCESSPROP (WINDOWPROP W 'PROCESS)                                                         'NAME)))                  (AND (NOT ICONTITLE)                       ICON))                    (* |we| |built| |this| |and| |the| |title| |is| |the| |same,| |or| |he| |has|           |already| |put| |an| |icon| |on| |this.|          D\o |nothing|)              NIL)             (ICON                     (* |There's| |an| |existing| |icon| |window;|          |change| |the| |title| |in| |it|)                   (WINDOWPROP W 'TEDIT.ICON.TITLE (SETQ ICONTITLE (PROCESSPROP (WINDOWPROP                                                                                 W                                                                                 'PROCESS)                                                                          'NAME)))                   (ICONTITLE ICONTITLE NIL NIL ICON))             (T                                              (* |install| \a |new| |icon|)                (WINDOWPROP W 'TEDIT.ICON.TITLE (SETQ ICONTITLE (PROCESSPROP (WINDOWPROP W                                                                                    'PROCESS)                                                                       'NAME)))                (WINDOWPROP W 'ICON (TITLEDICONW TEXEC.TITLED.ICON.TEMPLATE ICONTITLE TEXEC.ICON.FONT                                            NIL T '(BOTTOM LEFT))))))    (WINDOWPROP W 'ICON)))(TEXEC.FILLBUFFER  (LAMBDA (FILLTYPE)                                         (* \; "Edited 30-Mar-87 09:44 by jds")(* |;;;| "While filling the line, the current file pointer is the end of the line.  When the line is closed, this is made the eof.  --- #CURRENTRDTBL# is used for syntactic delimiters and paren counting on READ and RATOM calls but isn't referenced (or bound) for READC")    (DECLARE (USEDFREE \#CURRENTRDTBL# \\PRIMTERMTABLE *READ-NEWLINE-SUPPRESS* \\TERM.OFD)           (SPECVARS RSNX TCLASS RTBLSA RAISEDCHAR FILLTYPE RAISEDCHAR PEEKEDECHOED C))    (\\RESETLINE)(* |;;;| "If ERROR or RESET, move STARTINGEOF to end of text (TEXTLEN)")    (RESETLST (RESETSAVE NIL (LIST (FUNCTION (LAMBDA NIL                                               (COND                                                  (RESETSTATE                                                              (* \;                                      "Point to end of text and clearout linebuffer on RESET or ERROR")                                                         (PROG* ((TEXOBJ (|fetch| (TEXTSTREAM TEXTOBJ                                                                                         )                                                                            |of| \\TERM.OFD))                                                                 (SEL (|fetch| SEL |of| TEXOBJ)))                                                                (TEXTPROP TEXOBJ 'STARTINGEOF                                                                       (|fetch| TEXTLEN |of| TEXOBJ))                                                                (|replace| (STREAM REVALIDATEFLG)                                                                   |of| \\LINEBUF.OFD)                                                                (\\RESETTERMINAL)                                                                (\\SHOWSEL SEL)                                                                (|replace| CH# |of| SEL                                                                   |with| (ADD1 (|fetch| TEXTLEN                                                                                   |of| TEXOBJ)))                                                                (|replace| CHLIM |of| SEL                                                                   |with| (ADD1 (|fetch| TEXTLEN                                                                                   |of| TEXOBJ)))                                                                (|replace| POINT |of| SEL                                                                   |with| 'LEFT)                                                                (|replace| DCH |of| SEL |with| 0)                                                                (|replace| SET |of| SEL |with| T)                                                                (\\FIXSEL SEL TEXOBJ))))))))           (PROG* ((RTBLSA (AND (NEQ FILLTYPE READC.FT)                                (|fetch| READSA |of| \#CURRENTRDTBL#)))                   (CONTROLTON (|fetch| CONTROLFLG |of| \\PRIMTERMTABLE))                   (TEXOBJ (|fetch| (TEXTSTREAM TEXTOBJ) |of| \\TERM.OFD))                   (SEL (|fetch| SEL |of| TEXOBJ))                   (WINDOW (|fetch| \\WINDOW |of| TEXOBJ))                   (LINES (|fetch| LINES |of| TEXOBJ))                   RSNX TCLASS C RAISEDCHAR PEEKEDECHOED TTYWINDOW FN TCH INSCH# CHNO ADDEDEOL)(* |;;;| "STARTINGEOF is the beginning of the current text being entered which gets returned to READ so that \\TEXEC.TEXTBOUT knows where to output any text including ^T")(* |;;;| "TCLASS is terminal syntax class, RSNX is read-table code")                  (TEXTPROP TEXOBJ 'STARTINGEOF (|fetch| TEXTLEN |of| TEXOBJ))                                                             (* \; "Keep STARTINGEOF in sync")                  (COND                     ((SETQ C (|fetch| (LINEBUFFER PEEKEDCHAR) |of| \\LINEBUF.OFD))                                                             (* \; "Account for peeked character")                      (SETQ C (IABS C))                      (* \;           "The peeked char may be negative because it was BIN'ed earlier.  Make sure it is positive.")                      (|replace| (LINEBUFFER PEEKEDCHAR) |of| \\LINEBUF.OFD |with| NIL)                      (SETQ PEEKEDECHOED T)                      (SETQ RAISEDCHAR (\\RAISECHAR C))                      (COND                         ((EQ FILLTYPE READ.FT)                          (TEXTPROP TEXOBJ 'STARTINGEOF (SUB1 (TEXTPROP TEXOBJ 'STARTINGEOF)))))                                                             (* \;  "Backup one in textstream to start the input before the peeked and echoed character if doing a READ")                      ))                  (COND                     ((AND CONTROLTON (EQ FILLTYPE READC.FT))                      (TEXEC.INSERTCHAR TEXOBJ C)            (* \;                                                              "Read single char and check for echoing")                      (GO EXIT)))                            (* \;                                                      "If in CONTROL T mode and reading a single char")                  (COND                     (C                     (* |;;| "Working on the previously-peeked char, so skip the keyboard read.  Since the peeked char  has been inserted in the TEdit buffer already, back up the starting-eof counter to include it.")                        (TEXTPROP TEXOBJ 'STARTINGEOF (SUB1 (TEXTPROP TEXOBJ 'STARTINGEOF)))                    (* |;;| "Then go skip the kbd read.")                        (GO NEXTTCLASS)))                    (* |;;| "- - -")                    (* |;;| "Top of the next-character loop")                    (* |;;| "- - -")                  NEXT                  (SETQ C (TEXEC.GETKEY TEXOBJ))             (* \;                                                              "read next character from keyboard")                  NEXTTCLASS                  (SETQ TCLASS (|fetch| TERMCLASS |of| (\\SYNCODE \\PRIMTERMSA (SETQ RAISEDCHAR                                                                                (\\RAISECHAR C)))))                  REDO(* |;;;| "Handle Terminal Class characters")                  (SELECTQ (TEXEC.FILLBUFFER.TCLASS TEXOBJ SEL)                      (NEXT (GO NEXT))                      (EXIT (GO EXIT))                      NIL)(* |;;;| "Here if it isn't a terminal class.")                  (COND                     (PEEKEDECHOED (SETQ PEEKEDECHOED NIL))                     (T (TEXEC.INSERTCHAR TEXOBJ C)))                  (AND (EQ FILLTYPE READC.FT)                       (GO NEXT))                  (COND                     ((EQ ESCAPE.RC (SETQ RSNX (\\SYNCODE RTBLSA RAISEDCHAR)))                      (COND                         ((EQ CTRLV.TC (SETQ TCLASS (|fetch| TERMCLASS |of| (\\SYNCODE \\PRIMTERMSA                                                                                   (SETQ RAISEDCHAR                                                                                    (TEXEC.INSERTCHAR                                                                                     TEXOBJ))))))                          (GO REDO)))                      (GO NEXT)))                  (SELECTC FILLTYPE                      (RATOM/RSTRING.FT                            (COND                              ((AND CONTROLTON (|fetch| STOPATOM |of| RSNX))                               (GO EXIT))))                      (READ.FT (SELECTC RSNX                                   ((LIST RIGHTPAREN.RC RIGHTBRACKET.RC LEFTPAREN.RC LEFTBRACKET.RC                                           STRINGDELIM.RC)                                         (COND                                           ((NOT (TEXEC.EOTP TEXOBJ))                                            (|replace| (STREAM REVALIDATEFLG) |of| \\LINEBUF.OFD                                               |with| T)     (* \;                "Inserting a paren/bracket in the middle of the input, invalidate paren/bracket count")                                            ))                                        (SELECTC RSNX                                            ((LIST RIGHTPAREN.RC RIGHTBRACKET.RC)                                                  (TEXEC.FLASHCARET TEXOBJ (TEXEC.PARENMATCH TEXOBJ                                                                                  RSNX)))                                            NIL))                                   NIL)                               (COND                                  ((AND CONTROLTON (ZEROP (|fetch| (LINEBUFFER LBRKCOUNT)                                                             |of| \\LINEBUF.OFD))                                        (ZEROP (|fetch| (LINEBUFFER LPARCOUNT) |of| \\LINEBUF.OFD))                                        (|fetch| STOPATOM |of| RSNX)                                        (SELECTC RSNX                                            ((LIST LEFTPAREN.RC LEFTBRACKET.RC RIGHTBRACKET.RC                                                    RIGHTPAREN.RC)                                                  NIL)                                            (STRINGDELIM.RC                                                  (COND                                                    ((|fetch| (LINEBUFFER INSTRINGP) |of|                                                                                         \\LINEBUF.OFD                                                            )                                                     (|replace| (LINEBUFFER INSTRINGP) |of|                                                                                         \\LINEBUF.OFD                                                        |with| NIL)                                                     T)))                                            (NOT (|fetch| (LINEBUFFER INSTRINGP) |of| \\LINEBUF.OFD))                                         ))                    (* |;;| "READ is reading an atom.  Return when atom ends, but also obey bracket/paren exception noted on page 14.33 of manual.")                                   (GO EXIT)))                               (COND                                  ((TEXEC.EOTP TEXOBJ)                                   (COND                                      ((|fetch| (STREAM REVALIDATEFLG) |of| \\LINEBUF.OFD)                                       (TEXEC.PARENCOUNT TEXOBJ)                                                             (* \;                                                              "text needs recount of parens/brackets")                                       ))                                   (COND                                      ((\\INCPARENCOUNT RSNX)                                       (COND                                          ((STREAMPROP \\TERM.OFD 'FIXFLG)                                           (STREAMPROP \\TERM.OFD 'FIXFLG NIL)                                                             (* \;                               "Expression is being FIXed by user, reset FIXFLG and go for more input")                                           (GO NEXT)))                    (* |;;| "Parens balance--throw the carriage if the closing paren or bracket character was not a CR, and if FLG argument of READ is NIL.  (We know we are under a READ call because of FILLTYPE)")                                                             (* \;                                              "copy the chars from the textstream into the linebuffer")                                       (TEXEC.TEXTSTREAM.TO.LINEBUF TEXOBJ (TEXTPROP TEXOBJ                                                                                  'STARTINGEOF)                                              \\LINEBUF.OFD FILLTYPE)                                                             (* \;                              "AND (EQ FILLTYPE READ.FT) (TEXEC.FIX?  TEXOBJ \\LINEBUF.OFD) (GO NEXT)")                                                             (* \;                                             "If it was a PA FIX command handle it, and allow editing")                                                             (* \;                                       "now reset the new STARTINGEOF to start at the end of the text")                                       (TEXTPROP TEXOBJ 'STARTINGEOF (|fetch| TEXTLEN |of| TEXOBJ))                                       (\\CLOSELINE)                                       (AND (NEQ RAISEDCHAR (CHARCODE EOL))                                            (NOT *READ-NEWLINE-SUPPRESS*)                                            (\\OUTCHAR \\TERM.OFD (CHARCODE EOL)))                                                             (* \;                                                     "\\CLOSELINE first so dribble happens before EOL")                                       (RETURN))                                      ((EQ IMMEDIATE.RMW (|fetch| WAKEUP |of| RSNX))                                                             (* \; "Immediate read-macro")                                       (RETURN))))))                      (SHOULDNT))                  (GO NEXT)                  EXIT                  (COND                     ((STREAMPROP \\TERM.OFD 'FIXFLG)                      (STREAMPROP \\TERM.OFD 'FIXFLG NIL)                      (COND                         ((NEQ RAISEDCHAR (CHARCODE EOL))    (* \;                               "Expression is being FIXed by user, reset FIXFLG and go for more input")                          (GO NEXT)))))                  (COND                     ((AND (EQ FILLTYPE READ.FT)                           (EQ RAISEDCHAR (CHARCODE EOL))                           (EQ (SUB1 (|fetch| TEXTLEN |of| TEXOBJ))                               (TEXTPROP TEXOBJ 'STARTINGEOF)))                      (\\LINEBUFBOUT \\LINEBUF.OFD (CAR (GETSYNTAX 'RIGHTBRACKET \#CURRENTRDTBL#)))                    (* |;;| "If doing a READ, force a lone CR to terminate the READ by handing back a RIGHTBRACKET into the LINEBUFFER")                      )                     (T (TEXEC.TEXTSTREAM.TO.LINEBUF TEXOBJ (TEXTPROP TEXOBJ 'STARTINGEOF)                               \\LINEBUF.OFD FILLTYPE)))                  (TEXTPROP TEXOBJ 'STARTINGEOF (|fetch| TEXTLEN |of| TEXOBJ))                                                             (* \;                              "AND (EQ FILLTYPE READ.FT) (TEXEC.FIX?  TEXOBJ \\LINEBUF.OFD) (GO NEXT)")                                                             (* \;                                             "If it was a PA FIX command handle it, and allow editing")                  (\\CLOSELINE)                  (AND (NEQ RAISEDCHAR (CHARCODE EOL))                       (NOT CONTROLTON)                       (NOT *READ-NEWLINE-SUPPRESS*)                       (\\OUTCHAR \\TERM.OFD (CHARCODE EOL)))))))(TEXEC.FILLBUFFER.TCLASS  (LAMBDA (TEXOBJ SEL)                                       (* AJB " 7-Feb-86 10:54")                    (* * |Handle| |special| |terminal| |class| |characters|)    (DECLARE (USEDFREE \\LINEBUF.OFD PEEKEDECHOED C FILLTYPE TCLASS))    (PROG NIL          (SELECTC TCLASS              (RETYPE.TC (RETURN 'NEXT)                      (* |Ignore| ^R |since| |the| |user|                                                              |can| |rescroll| |the| |line|)                         )              (CHARDELETE.TC (TEXEC.FILLBUFFER.CHARDELETE TEXOBJ)                             (RETURN 'NEXT))              (WORDDELETE.TC (TEXEC.FILLBUFFER.WORDDELETE TEXOBJ)                             (RETURN 'NEXT))              (LINEDELETE.TC (TEXEC.FILLBUFFER.LINEDELETE TEXOBJ)                             (RETURN 'NEXT))              (CTRLV.TC (COND                           (PEEKEDECHOED (SETQ PEEKEDECHOED NIL)))                        (TEXEC.INSERTCHAR TEXOBJ C)                        (COND                           ((NEQ FILLTYPE READC.FT)                            (SETQ C (TEXEC.GETKEY TEXOBJ))))                        (SETQQ TCLASS NONE.TC))              (EOL.TC (AND (EQ FILLTYPE READ.FT)                           (TEXEC.?EQUAL TEXOBJ)                           (TRUE (TEXEC.INSERTCHAR TEXOBJ (CHARCODE EOL)))                           (RETURN 'EXIT)                    (* |Let| READ |handle| ? |and| ?=)                           )                      (TEXEC.INSERTCHAR TEXOBJ C)                      (COND                         ((EQ FILLTYPE READ.FT)              (* I\f |we| |are| |doing| \a "READ")                    (* I\f |we| |are| |at| |the| |end| |of| |the| |input| |now,| |update|           |parencount| |if| |invalid,| |and| |test| |for| |matching| |paren/bracket|           |count|)                          (AND (TEXEC.EOTP TEXOBJ)                               (COND                                  ((|fetch| (STREAM REVALIDATEFLG) |of| \\LINEBUF.OFD)                                   (TEXEC.PARENCOUNT TEXOBJ))                                  (T T))                               (ZEROP (|fetch| (LINEBUFFER LBRKCOUNT) |of| \\LINEBUF.OFD))                               (ZEROP (|fetch| (LINEBUFFER LPARCOUNT) |of| \\LINEBUF.OFD))                               (NOT (|fetch| (LINEBUFFER INSTRINGP) |of| \\LINEBUF.OFD))                               (RETURN 'EXIT)                (* |Proper| |termination| |of| READ)                               )                          (RETURN 'NEXT)                     (* |Else| |go| |for| |more| |input|)                          )                         (T (RETURN 'EXIT)                   (* |Exit| |always| |if| |not| |in|                                                              "READ" |mode|)                            )))              NIL)          (COND             ((EQ C 127)                                     (* DELETE)              (COND                 ((AND (|fetch| BLUEPENDINGDELETE |of| TEXOBJ)                       (IGREATERP (|fetch| CH# |of| SEL)                              (TEXTPROP TEXOBJ 'STARTINGEOF)))                    (* |Only| |allow| |deletion| |of| |selection| |if| |left| |side| |of|           |selection| |is| |after| |start| |of| |current| |input|)                  (\\TEDIT.DELETE SEL TEXOBJ)                (* |Erase| |characters| |from| |the|                                                              |screen|)                  (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)    (* |Make| |it| \a |normal| |selection|                                                              |again.|)                  (|replace| (STREAM REVALIDATEFLG) |of| \\LINEBUF.OFD |with| T)))                                                             (* |invalidate| |paren/bracket|                                                              |count|)              (RETURN 'NEXT)))          (COND             ((FMEMB C (LIST (CHARCODE ^U)                             (CHARCODE ^Q)))                 (* |Delete| \a |line|)              (TEXEC.FILLBUFFER.LINEDELETE TEXOBJ)              (RETURN 'NEXT)))          (COND             ((EQ C (CHARCODE ^X))                           (* ^X |positions| |to| |end| |of|                                                              |text|)              (\\SETUPGETCH (|fetch| TEXTLEN |of| TEXOBJ)                     TEXOBJ)              (|replace| CH# |of| SEL |with| (ADD1 (|fetch| TEXTLEN |of| TEXOBJ)))              (|replace| CHLIM |of| SEL |with| (|fetch| CH# |of| SEL))              (|replace| POINT |of| SEL |with| 'LEFT)              (|replace| DCH |of| SEL |with| 0)              (|replace| SET |of| SEL |with| T)              (|replace| HASCARET |of| SEL |with| T)              (UNINTERRUPTABLY                  (\\CHECKCARET)                  (|for| CARET |inside| (|fetch| CARET |of| TEXOBJ) |as| WIN                     |inside| (|fetch| (TEXTOBJ \\WINDOW) |of| TEXOBJ)                     |do| (\\FIXSEL SEL TEXOBJ WIN)                          (MOVETO (|fetch| X0 |of| SEL)                                 (|fetch| Y0 |of| SEL)                                 WIN)                          (|replace| TCCARETX |of| CARET |with| (|fetch| X0 |of| SEL))                          (|replace| TCCARETY |of| CARET |with| (|fetch| Y0 |of| SEL))))              (RETURN 'NEXT))))))(TEXEC.CHSELPENDING  (LAMBDA (TEXOBJ)                                           (* AJB "20-Feb-86 13:12")    (ERSETQ (PROGN (|replace| EDITOPACTIVE |of| TEXOBJ |with| T)                    (* |Before| |starting| |to| |work,| |note| |that| |we| |are| |doing|           |something|)                   (COND                      (TEDIT.COPY.PENDING                    (* |Have| |to| |copy| |the| |shifted|                                                              SEL |to| |caret.|)                             (SETQ TEDIT.COPY.PENDING NIL)                             (\\COPYSEL TEDIT.SHIFTEDSELECTION (|fetch| SHIFTEDSEL |of| TEXOBJ))                             (TEDIT.COPY (|fetch| SHIFTEDSEL |of| TEXOBJ)                                    (|fetch| SEL |of| TEXOBJ))                             (|replace| SET |of| TEDIT.SHIFTEDSELECTION |with| NIL)                             (|replace| L1 |of| TEDIT.SHIFTEDSELECTION |with| NIL)                             (|replace| LN |of| TEDIT.SHIFTEDSELECTION |with| NIL)                             (\\COPYSEL TEDIT.SHIFTEDSELECTION (|fetch| SHIFTEDSEL |of| TEXOBJ)))                      (TEDIT.COPYLOOKS.PENDING               (* |Have| |to| |copy| |the| |shifted|                                                              SEL |to| |caret.|)                             (SETQ TEDIT.COPYLOOKS.PENDING NIL)                             (\\COPYSEL TEDIT.COPYLOOKSSELECTION (|fetch| SHIFTEDSEL |of| TEXOBJ))                             (COND                                ((EQ 'PARA (|fetch| SELKIND |of| (|fetch| SHIFTEDSEL |of| TEXOBJ)))                    (* |copy| |the| |paragraph| |looks,| |since| |the| |source| |selection| |type|           |was| |paragraph|)                                 (TEDIT.COPY.PARALOOKS TEXOBJ (|fetch| SHIFTEDSEL |of| TEXOBJ)                                        (|fetch| SEL |of| TEXOBJ)))                                (T                           (* |copy| |the| |character| |looks|)                                   (TEDIT.COPY.LOOKS TEXOBJ (|fetch| SHIFTEDSEL |of| TEXOBJ)                                          (|fetch| SEL |of| TEXOBJ))))                             (\\SHOWSEL (|fetch| SHIFTEDSEL |of| TEXOBJ)                                    NIL NIL)                             (|replace| SET |of| TEDIT.COPYLOOKSSELECTION |with| NIL)                             (|replace| L1 |of| TEDIT.COPYLOOKSSELECTION |with| NIL)                             (|replace| LN |of| TEDIT.COPYLOOKSSELECTION |with| NIL)                             (\\COPYSEL TEDIT.COPYLOOKSSELECTION (|fetch| SHIFTEDSEL |of| TEXOBJ)))                      (TEDIT.MOVE.PENDING                    (* |Have| |to| |move| |the|                                                              |ctrl-shift| SEL |to| |caret.|)                             (SETQ TEDIT.MOVE.PENDING NIL)                             (\\COPYSEL TEDIT.MOVESELECTION (|fetch| MOVESEL |of| TEXOBJ))                             (TEDIT.DO.BLUEPENDINGDELETE SEL TEXOBJ)                             (TEDIT.MOVE (|fetch| MOVESEL |of| TEXOBJ)                                    (|fetch| SEL |of| TEXOBJ))                             (|replace| SET |of| TEDIT.MOVESELECTION |with| NIL)                             (|replace| L1 |of| TEDIT.MOVESELECTION |with| NIL)                             (|replace| LN |of| TEDIT.MOVESELECTION |with| NIL)                             (\\COPYSEL TEDIT.MOVESELECTION (|fetch| MOVESEL |of| TEXOBJ)))                      (TEDIT.DEL.PENDING                     (* |Delete| |the| |current|                                                              |selection.|)                             (SETQ TEDIT.DEL.PENDING NIL)    (* |Above| |all,| |reset| |the|                                                              |demand| |flag| |first|)                             (COND                                ((|fetch| SET |of| TEDIT.DELETESELECTION)                    (* |Only| |try| |the| |deletion| |if| |he| |really| |set| |the| |selection.|)                                 (\\SHOWSEL (|fetch| DELETESEL |of| TEXOBJ)                                        NIL NIL)             (* |Turn| |off| |the| |selection|                                                              |highlights|)                                 (\\SHOWSEL (|fetch| SEL |of| TEXOBJ)                                        NIL NIL)                                 (|replace| SET |of| (|fetch| DELETESEL |of| TEXOBJ) |with| NIL)                                 (\\COPYSEL TEDIT.DELETESELECTION (|fetch| SEL |of| TEXOBJ))                                 (\\TEDIT.SET.SEL.LOOKS (|fetch| SEL |of| TEXOBJ)                                        'NORMAL)             (* |Grab| |the| |selection| |we're|                                                              |to| |use|)                                 (\\TEDIT.DELETE (|fetch| SEL |of| TEXOBJ)                                        (|fetch| \\TEXTOBJ |of| (|fetch| SEL |of| TEXOBJ))                                        NIL)                                 (|replace| L1 |of| TEDIT.DELETESELECTION |with| NIL)                                 (|replace| LN |of| TEDIT.DELETESELECTION |with| NIL)))))                   (|replace| EDITOPACTIVE |of| TEXOBJ |with| NIL)))))(TEXEC.FILLBUFFER.CHARDELETE  (LAMBDA (TEXOBJ)                                           (* AJB " 7-Jan-86 15:03")    (DECLARE (USEDFREE FILLTYPE RSNX TCLASS RTBLSA RAISEDCHAR \#CURRENTRDTBL#))    (PROG (C)          (COND             ((NULL (SETQ C (TEXEC.\\CHDEL1 TEXOBJ)))                    (* |Try| |deleting| \a |character| (|put| |the| |deleted| |char| |in| C |and|           RETURN C)\. I\f |there| |was| |no| |character| |to| |delete|          (|ie,| |we're| |at| |start| |of| |line|)\,          (RETURN NIL))              (FLASHWINDOW)              (RETURN)))          (PROG (C1 (ESCAPE? (AND (NEQ FILLTYPE READC.FT)                                  (|fetch| ESCAPEFLG |of| \#CURRENTRDTBL#)                                  ESCAPE.RC)))                (COND                   ((NEQ FILLTYPE READC.FT)                  (* |Don't| |process| |escapes| |if|                                                              READC)                    (SETQ RSNX (\\SYNCODE RTBLSA C))                    (COND                       ((SETQ C1 (TEXEC.NTHBUFCHARBACK TEXOBJ 0))                                                             (* |Check| |preceding| |char| C1 |for|                                                              |escape|)                        (COND                           ((EQ ESCAPE? (\\SYNCODE RTBLSA C1))                            (SETQ RSNX OTHER.RC)                            (SETQ C (TEXEC.\\CHDEL1 TEXOBJ)) (* |Delete| |the| ESCAPE |char| |also|)                            ))))                    (COND                       ((NULL (|fetch| (STREAM REVALIDATEFLG) |of| \\LINEBUF.OFD))                        (\\DECPARENCOUNT RSNX)                    (* |no| |need| |to| |update| |parencount| |if| |deleting| |chars| |in| |the|           |middle| |of| |the| |text|)                        )))))          (RETURN C)                                         (* |Successful| |delete|)      )))(TEXEC.FILLBUFFER.WORDDELETE  (LAMBDA (TEXOBJ)                                           (* AJB "22-Jan-86 14:37")                    (* |Delete| |chars| |until| |first| |non-sepr/non-other,| |or| |first|           |non-other| |after| |sepr| |string| |and| |other| |string.|          |Note| |that| \a |terminal| |wordsepr| |is| |treated| |as| |if| |it| |were| \a           |read-sepr|)    (DECLARE (USEDFREE RSNX RTBLSA \\PRIMTERMSA TCLASS FILLTYPE \#CURRENTRDTBL# \\LINEBUF.OFD))    (PROG* (C (STARTINGEOF (TEXTPROP TEXOBJ 'STARTINGEOF))              (SEL (|fetch| SEL |of| TEXOBJ))              (ENDCH# (SUB1 (SELECTQ (|fetch| POINT |of| SEL)                                (LEFT (COND                                         ((ZEROP (|fetch| DCH |of| SEL))                                          (|fetch| CHLIM |of| SEL))                                         (T (SUB1 (|fetch| CHLIM |of| SEL)))))                                (RIGHT (|fetch| CHLIM |of| SEL))                                NIL)))              (CH# ENDCH#))           (COND              ((ILEQ CH# (TEXTPROP (CAR (|fetch| \\WINDOW |of| TEXOBJ))                                'STARTINGEOF))               (FLASHWINDOW)               (RETURN)))           AGAIN           (COND              ((SETQ C (PROGN (\\SETUPGETCH CH# TEXOBJ)                              (\\BIN (|fetch| STREAMHINT |of| TEXOBJ))))               (SETQ RSNX (\\SYNCODE RTBLSA C))               (SELECTC RSNX                   (SEPRCHAR.RC (|add| CH# -1)                                (GO AGAIN)                   (* |cont| |until| |first| |non-sepr|)                                )                   (OTHER.RC (COND                                ((EQ WORDSEPR.TC (\\SYNCODE \\PRIMTERMSA C))                                 (|add| CH# -1)                                 (GO AGAIN)                  (* |cont| |until| |first| |non-sepr|)                                 ))                             (PROG (C1 (ESCAPE? (AND (NEQ FILLTYPE READC.FT)                                                     (|fetch| ESCAPEFLG |of| \#CURRENTRDTBL#)                                                     ESCAPE.RC)))                                                             (* |The| |first| OTHER)                               TRY (COND                                      ((SETQ C (PROGN (\\SETUPGETCH CH# TEXOBJ)                                                      (\\BIN (|fetch| STREAMHINT |of| TEXOBJ))))                                                             (* |look| |at| |previous| |char|)                                       (SETQ RSNX (\\SYNCODE RTBLSA C))                                       (SETQ TCLASS (\\SYNCODE \\PRIMTERMSA C))                                       (COND                                          ((SETQ C1 (PROGN (\\SETUPGETCH (SUB1 CH#)                                                                  TEXOBJ)                                                           (\\BIN (|fetch| STREAMHINT |of| TEXOBJ))))                                           (COND                                              ((EQ ESCAPE? (\\SYNCODE RTBLSA C1))                                               (SETQ RSNX OTHER.RC)                                               (SETQ TCLASS NONE.TC)))))                                       (COND                                          ((AND (NEQ TCLASS WORDSEPR.TC)                                                (EQ OTHER.RC RSNX))                                           (|add| CH# -1)    (* |Erase| |it|)                                           (GO TRY)))))))                   (PROGN (|add| CH# -1)                          (COND                             ((EQ FILLTYPE READ.FT)                    (* |For| READ |filltype| |only,| |Fix| |up| |paren| |count| |if| |we| |still|           |have| \a |valid| |paren| |count| |since| |this| |can| |be| \a |paren| |or|           |bracket| |or| |stringdelimiter|)                              (COND                                 ((NOT (|fetch| (STREAM REVALIDATEFLG) |of| \\LINEBUF.OFD))                                  (\\DECPARENCOUNT RSNX)))))))))           (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)           (* |Make| |it| \a |normal| |selection|                                                              |again.|)           (|replace| CH# |of| SEL |with| (ADD1 CH#))           (|replace| CHLIM |of| SEL |with| (ADD1 ENDCH#))           (|replace| DCH |of| SEL |with| (ADD1 (IDIFFERENCE ENDCH# CH#)))           (\\TEDIT.DELETE SEL TEXOBJ)                       (* |Now| |delete| |the| |characters|)           )))(TEXEC.FILLBUFFER.LINEDELETE  (LAMBDA (TEXOBJ)                                           (* AJB "20-Feb-86 13:16")                                                             (* |Delete| |last| |line| |entered|                                                              |by| |user| (^U\, ^Q))    (DECLARE (USEDFREE RSNX RTBLSA \\PRIMTERMSA TCLASS FILLTYPE \#CURRENTRDTBL# \\LINEBUF.OFD))    (PROG* (C (STARTINGEOF (TEXTPROP TEXOBJ 'STARTINGEOF))              (SEL (|fetch| SEL |of| TEXOBJ))              (ENDCH# (SUB1 (SELECTQ (|fetch| POINT |of| SEL)                                (LEFT (COND                                         ((ZEROP (|fetch| DCH |of| SEL))                                          (|fetch| CHLIM |of| SEL))                                         (T (SUB1 (|fetch| CHLIM |of| SEL)))))                                (RIGHT (|fetch| CHLIM |of| SEL))                                NIL)))              (CH# ENDCH#))           (COND              ((ILEQ CH# (TEXTPROP (CAR (|fetch| \\WINDOW |of| TEXOBJ))                                'STARTINGEOF))               (FLASHWINDOW)               (RETURN)))           (|while| (AND (SETQ C (PROGN (\\SETUPGETCH CH# TEXOBJ)                                        (\\BIN (|fetch| STREAMHINT |of| TEXOBJ))))                         (NEQ C (CHARCODE EOL))                         (IGREATERP CH# (TEXTPROP (CAR (|fetch| \\WINDOW |of| TEXOBJ))                                               'STARTINGEOF)))              |do| (SETQ RSNX (\\SYNCODE RTBLSA C))                   (|add| CH# -1)                   (COND                      ((EQ FILLTYPE READ.FT)                 (* |Invalidate| |paren| |count| |to|                                                              |force| |recalculation|)                       (|replace| (STREAM REVALIDATEFLG) |of| \\LINEBUF.OFD |with| T))))           (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)           (* |Make| |it| \a |normal| |selection|                                                              |again.|)           (|replace| CH# |of| SEL |with| (ADD1 CH#))           (|replace| CHLIM |of| SEL |with| (ADD1 ENDCH#))           (|replace| DCH |of| SEL |with| (ADD1 (IDIFFERENCE ENDCH# CH#)))           (\\TEDIT.DELETE SEL TEXOBJ)                       (* |Now| |delete| |the| |characters|)           )))(TEXEC.PARENCOUNT  (LAMBDA (TEXOBJ)                                           (* AJB "10-Jan-86 16:21")    (DECLARE (USEDFREE \\LINEBUF.OFD))    (PROG ((STREAM (|fetch| STREAMHINT |of| TEXOBJ)))          (|replace| (LINEBUFFER LPARCOUNT) |of| \\LINEBUF.OFD |with| 0)          (|replace| (LINEBUFFER LBRKCOUNT) |of| \\LINEBUF.OFD |with| 0)          (|replace| (LINEBUFFER LPARCOUNT) |of| \\LINEBUF.OFD |with| 0)          (|replace| (LINEBUFFER INSTRINGP) |of| \\LINEBUF.OFD |with| NIL)          (\\SETUPGETCH (TEXTPROP TEXOBJ 'STARTINGEOF)                 TEXOBJ)                    (* |Don't| |include| |last| |character| |otherwise| |it| |will| |get| |counted|           |twice|)          (|for| I |from| (TEXTPROP TEXOBJ 'STARTINGEOF) |to| (SUB1 (|fetch| TEXTLEN |of| TEXOBJ))             |do| (\\INCPARENCOUNT (\\SYNCODE RTBLSA (\\BIN STREAM))))          (|replace| (STREAM REVALIDATEFLG) |of| \\LINEBUF.OFD |with| NIL)                    (* |Last| |thing| |is| |to| |reset| |the| |validation| |flag,| |and| |always|           RETURN T |for| |AND's| |to| |work|)          (RETURN T))))(TEXEC.PARENMATCH  (LAMBDA (TEXOBJ RSNX)                                      (* AJB "10-Jan-86 17:44")                    (* * |Returns| CH# |if| |matching| |left| |paren/bracket| |is| |found,| |else|           NIL)    (DECLARE (USEDFREE \#CURRENTRDTBL# \\TERM.OFD))    (PROG (MATCH? N CH CH1 CH2 (PCOUNT 0))          (SELECTC RSNX              (RIGHTPAREN.RC (SETQ CH (CAR (GETSYNTAX 'LEFTPAREN \#CURRENTRDTBL#)))                             (SETQ CH1 (CAR (GETSYNTAX 'RIGHTPAREN \#CURRENTRDTBL#))))              (RIGHTBRACKET.RC                    (SETQ CH (CAR (GETSYNTAX 'LEFTBRACKET \#CURRENTRDTBL#)))                   (SETQ CH1 (CAR (GETSYNTAX 'RIGHTBRACKET \#CURRENTRDTBL#))))              0)          (|for| I |from| 0 |to| (IDIFFERENCE (|fetch| TEXTLEN |of| TEXOBJ)                                        (TEXTPROP TEXOBJ 'STARTINGEOF))             |do| (SETQ CH2 (TEXEC.NTHBUFCHARBACK TEXOBJ I))                  (COND                     ((EQ CH2 CH1)                      (SETQ PCOUNT (ADD1 PCOUNT)))                     ((EQ CH2 CH)                      (SETQ PCOUNT (SUB1 PCOUNT)))) |repeatuntil| (SETQ MATCH? (EQ PCOUNT 0))             |finally| (COND                          (MATCH?                            (* \\CARET.DOWN \\TERM.OFD)                                 (SETQ N (TEXEC.NTHBACKCHNUM TEXOBJ I)))))          (RETURN N))))(TEXEC.FLASHCARET  (LAMBDA (TEXOBJ N)                                         (* AJB "11-Sep-85 14:56")                    (* * |Flashes| |caret| |at| |char#| N\, |used| |for| |flashing| |caret| |at|           |matching| |paren/bracket| I\f N |is| NIL\, |simply| |returns|)    (PROG (TSEL (WINDOW (|fetch| (TEXTOBJ \\WINDOW) |of| TEXOBJ)))          (COND             ((NOT N)              (RETURN)))          (SETQ TSEL (|create| SELECTION                        |using| (|fetch| SEL |of| TEXOBJ)                              CH# _ N CHLIM _ N DCH _ 0 POINT _ 'LEFT \\TEXTOBJ _ TEXOBJ SET _ T))          (UNINTERRUPTABLY              (|bind| (FIRSTTIME _ T) |for| CARET |inside| (|fetch| CARET |of| TEXOBJ) |as| WIN                 |inside| WINDOW |as| L1 |inside| (|fetch| L1 |of| TSEL)                 |do| (COND                         (L1 (\\EDIT.UPCARET CARET)                             (\\FIXSEL TSEL TEXOBJ WIN)                             (COND                                (FIRSTTIME (SETQ FIRSTTIME NIL)                                       (\\CARET.FLASH? (|fetch| TCCARETDS |of| CARET)                                              (|fetch| TCCARET |of| CARET)                                              NIL NIL (|fetch| X0 |of| TSEL)                                              (|fetch| Y0 |of| TSEL)))                                (T (\\CARET.FLASH.AGAIN (|fetch| TCCARET |of| CARET)                                          (|fetch| TCCARETDS |of| CARET)                                          (|fetch| X0 |of| TSEL)                                          (|fetch| Y0 |of| TSEL)))))))              (DISMISS 500)              (|for| WIN |inside| WINDOW |as| CARET |inside| (|fetch| CARET |of| TEXOBJ)                 |do| (\\EDIT.DOWNCARET CARET)               (* |Display| |the| |caret| |at| |the|                                                              |typein| |point|))))))(TEXEC.TEXTSTREAM.TO.LINEBUF  (LAMBDA (TEXOBJ STARTINGEOF LINEBUF FILLTYPE)              (* |jds| " 5-Nov-86 18:03")                                                  (* |;;|    "Copy the contents of the current edit line into the line buffer, for transmission to the system.")    (\\SETUPGETCH (IMIN (|fetch| TEXTLEN |of| TEXOBJ)                        (ADD1 STARTINGEOF))           TEXOBJ)                                (* \;                                     "Move to where the user's typed input starts in the edit buffer,")    (SETFILEPTR LINEBUF 0)                                   (* \; "and clear out the line buffer.")    (\\SETEOFPTR LINEBUF 0)    (LET* ((TEXTSTREAM (|fetch| STREAMHINT |of| TEXOBJ))           (DRIBBLE (STREAMPROP TEXTSTREAM 'DRIBBLESTREAM)))          (|while| (NOT (EOFP TEXTSTREAM))             |do| (\\LINEBUFBOUT LINEBUF (PROG ((C (\\BIN TEXTSTREAM)))                                               (COND                                                  ((AND (NEQ FILLTYPE READC.FT)                                                        (EQ (CHARCODE ^V)                                                            C))                                                           (* \; "convert ^Vx to real CONTROL char")                                                   (SETQ C (COND                                                              ((OR (AND (IGEQ (SETQ C (\\BIN                                                                                            TEXTSTREAM                                                                                             ))                                                                              (CHARCODE A))                                                                        (ILEQ C (CHARCODE Z)))                                                                   (AND (IGEQ C (CHARCODE \a))                                                                        (ILEQ C (CHARCODE \z))))                                                             (* \; "CONVERT TO CONTROL CHAR")                                                               (LOGAND C 31))                                                              (T C)))))                                               (COND                                                  (DRIBBLE   (* \; "Dribble output")                                                         (\\OUTCHAR DRIBBLE C)))                                               (RETURN C)))))    T))(TEXEC.FIX  (LAMBDA (STREAM LISPY TAIL)                                (* AJB "14-Jan-86 17:09")                    (* * |Inserts| |the| |text| |into| |the| |textstream| |and| |then| |positions|           |to| |the| |end| |for| |user| |editing|)    (DECLARE (USEDFREE \#CURRENTRDTBL#))    (PROG ((TEXOBJ (TEXTOBJ STREAM))           (RDTBL (COPYREADTABLE \#CURRENTRDTBL#))           APPLYFLG           (NCHARS 1))          (SETSYNTAX (CHARCODE \")                 'OTHER RDTBL)          (SETQ LISPY (REMOVE HISTSTR0 LISPY))               (* |Remove| "<c.r.>")          (COND             (LISPY (TEXTPROP TEXOBJ 'STARTINGEOF (|fetch| TEXTLEN |of| TEXOBJ))                    (* |Set| |the| |new| STARTINGEOF |to| |the| |beginning| |of| |the| |text| |to|           |insert|)                    (SETQ LISPY (CHCON (COND                                          ((LISTP (CAR LISPY))                                                             (* EVAL |format|)                                           (CAR LISPY))                                          (T                 (* APPLY |format|)                                             (SETQ APPLYFLG LISPY)                                             LISPY))                                       T RDTBL))                    (COND                       (APPLYFLG (SETQ LISPY (REVERSE (CDR (REVERSE (CDR LISPY)))))                                                             (* |Remove| |surrounding|                                                              |parens/brackets|)                              ))                    (|for| CH |inside| LISPY                       |do| (|add| NCHARS 1)                            (COND                               ((AND APPLYFLG (EQ CH (CHARCODE \ ))                                     (OR (EQ (CAR (NTH LISPY NCHARS))                                             (CHARCODE \())                                         (EQ (CHARCODE [)                                             (CAR (NTH LISPY NCHARS)))))                                (SETQ APPLYFLG NIL)                    (* |Remove| |space| |before| \a |left| |paren/bracket| |to| |put| |back| |in|           APPLY |mode|)                                )                               (T (BKSYSBUF (CHARACTER CH)))))                                                             (* |Unread| |the| |characters| |back|                                                              |into| |the| |main| |keyboard|                                                              |buffer|)                    (STREAMPROP STREAM 'FIXFLG T)            (* |Indicate| |to| TEXEC.FILLBUFFER                                                              |we| |are| |in| |fix| |mode|)                    (RETURN))))))(TEXEC.NTHBUFCHARBACK  (LAMBDA (TEXOBJ N)                                         (* AJB "11-Sep-85 15:13")                    (* |Return| |the| |Nth| |character| |back| |from| |the| |current| |end| |of|           |text.| |Puts| |the| |pointer| |back| |at| |the| |end| |of| |the| |buffer|)    (PROG ((CHPOS (TEXEC.NTHBACKCHNUM TEXOBJ N)))            (* CHPOS |is| |the| |actual| |char|                                                              |position| |in| |the| |text.|)          (COND             ((OR (ILEQ CHPOS (TEXTPROP TEXOBJ 'STARTINGEOF))                  (ILEQ CHPOS 1))                    (* |returns| NIL |if| |there| |is| |no| |char| |at| |that| |position|)              (RETURN)))          (\\SETUPGETCH CHPOS TEXOBJ)                        (* |Setup| |position| |to| BIN                                                              |character|)          (RETURN (\\BIN (|fetch| STREAMHINT |of| TEXOBJ))))))(TEXEC.NTHBACKCHNUM  (LAMBDA (TEXOBJ N)                                         (* AJB "10-Jan-86 17:55")                    (* |Converts| N |chars| |back| |from| |the| |end| |of| |the| |selection| |to|           \a CH#)    (IDIFFERENCE (IMIN (|fetch| TEXTLEN |of| TEXOBJ)                       (SELECTQ (|fetch| POINT |of| (|fetch| SEL |of| TEXOBJ))                           (LEFT (SUB1 (|fetch| CH# |of| (|fetch| SEL |of| TEXOBJ))))                           (RIGHT (|fetch| CHLIM |of| (|fetch| SEL |of| TEXOBJ)))                           NIL))           N)))(TEXEC.EOTP  (LAMBDA (TEXOBJ)                                           (* AJB "11-Sep-85 15:14")                    (* |Test| |if| |the| |caret| |is| |at| |the| |end| |of| |the| |text|)    (PROG ((SEL (|fetch| SEL |of| TEXOBJ)))          (RETURN (ILESSP (|fetch| TEXTLEN |of| TEXOBJ)                         (SELECTQ (|fetch| POINT |of| SEL)                             (LEFT (|fetch| CH# |of| SEL))                             (RIGHT (|fetch| CHLIM |of| SEL))                             NIL))))))(TEXEC.GETKEY  (LAMBDA (TEXOBJ)                                           (* AJB " 5-Feb-86 11:53")                    (* * |Return| \a |character| |from| |the| |keyboard| |without| |echoing.|          I\f |no| |key| |has| |been| |typed,| |update| |the| |screen| |if| |prior|           |input-output| |didn't| |want| |to| |do| |it,| |flash| |the| |caret| |in| |all|           |of| |the| |attached| |windows| |if| |the| |keyboard| |is| |attached| |to|           |this| |process,| |ie,| |is| |the| TTYDISPLAYSTREAM.          |Blocks| |until| \a |key| |is| |typed| |with| |the| |keyboard| |attached| |to|           |this| |process|)    (PROG ((SEL (|fetch| SEL |of| TEXOBJ)))          (|until| (\\WAITFORSYSBUFP 100)             |do| (OR (|fetch| EDITFINISHEDFLG |of| TEXOBJ)                      (|while| (OR TEDIT.SELPENDING (|fetch| EDITOPACTIVE |of| TEXOBJ))                         |do|                     (* |Don't| |anything| |while| |he's| |selecting| |or| |one| |of| |the|           |lock-out| |ops| |is| |active.|)                              (AND (OR (EQ TEDIT.SELPENDING TEXOBJ))                                   (TEDIT.FLASHCARET (|fetch| CARET |of| TEXOBJ)))                              (BLOCK)))                     (* |Flash| |carets| |in| |all| |windows| |until| \a |key| |is| |entered|           |unless| |process| |is| |being| |terminated|)                  (OR (|fetch| EDITFINISHEDFLG |of| TEXOBJ)                      (COND                         ((|fetch| TXTNEEDSUPDATE |of| TEXOBJ)                                                             (* |Screen| |needs| |updating|)                          (\\SHOWSEL SEL NIL NIL)                          (TEDIT.UPDATE.SCREEN TEXOBJ)       (* |Turn| |highlighting| |off| |of|                                                              |selection|)                          (\\FIXSEL SEL TEXOBJ)              (* |Fix| |up| |the| |selection|                                                              |fields|)                          (TEDIT.SCROLL? TEXOBJ)             (* |Scroll| |windows| |if| |necessary|)                          (\\SHOWSEL SEL NIL T)              (* |Turn| |any| |selection| |back|                                                              |on|)                          )))                  (OR (|fetch| EDITFINISHEDFLG |of| TEXOBJ)                      (PROGN (TEDIT.FLASHCARET (|fetch| CARET |of| TEXOBJ))                                                             (* |Check| |for| SHIFT/COPY/MOVE                                                              |active|)                             (TEXEC.CHSELPENDING TEXOBJ))))          (RETURN (AND (NOT (|fetch| EDITFINISHEDFLG |of| TEXOBJ))                       (\\GETKEY))))))(TEXEC.INSERTCHAR  (LAMBDA (TEXOBJ C)                                         (* AJB "17-Sep-85 13:51")                    (* * |Inserts| \a |character| |into| |the| |textstream.|          I\f |the| |character| |is| |being| |inserted| |prior| |to| |the| |current|           |input| |then| |the| |start| |of| |the| |current| |input| |pointer,|           STARTINGEOF |is| |incremented.| I\f |echoing| |is| |off,| |then| |the|           |character| |is| |inserted| |as| "invisible")    (DECLARE (USEDFREE \\PRIMTERMTABLE \\TERM.OFD))    (PROG ((SEL (|fetch| SEL |of| TEXOBJ)))          (COND             ((ILEQ (SELECTQ (|fetch| POINT |of| SEL)                        (LEFT (|fetch| CH# |of| SEL))                        (RIGHT (|fetch| CHLIM |of| SEL))                        NIL)                    (TEXTPROP TEXOBJ 'STARTINGEOF))              (TEXTPROP TEXOBJ 'STARTINGEOF (ADD1 (TEXTPROP TEXOBJ 'STARTINGEOF)))                    (* I\f |inserting| |text| |prior| |to| |current| |input| |move| |the| |start|           |of| |input| |down| 1 |to| |compensate|)              )             (T (AND (IGREATERP (IMIN (|fetch| CH# |of| SEL)                                      (|fetch| CHLIM |of| SEL))                            (TEXTPROP TEXOBJ 'STARTINGEOF))                     (TEDIT.DO.BLUEPENDINGDELETE SEL TEXOBJ))))                    (* |Only| |allow| |deletion| |of| |seletected| |text| |if| |after| |start| |of|           |current| |input|)          (COND             ((|fetch| ECHOFLG |of| \\PRIMTERMTABLE)              (TEDIT.\\INSERT (OR C (SETQ C (TEXEC.GETKEY TEXOBJ)))                     SEL \\TERM.OFD))             (T (TEDIT.CARETLOOKS TEXOBJ '(INVISIBLE ON))                (TEDIT.\\INSERT (OR C (SETQ C (TEXEC.GETKEY TEXOBJ)))                       SEL \\TERM.OFD)                (TEDIT.CARETLOOKS TEXOBJ '(INVISIBLE OFF))))          (RETURN C)                                         (* |Return| |character| |inserted|)      )))(TEXEC.DELETE  (LAMBDA (TEXOBJ START END)                                 (* AJB " 7-Jan-86 14:26")                    (* |Deletes| |the| |chars| |in| |the| |textstream| |from| START |to| END)    (LET ((TSEL (|create| SELECTION |using| (|fetch| SEL |of| TEXOBJ)                                          CH# _ START CHLIM _ (ADD1 END)                                          POINT _ 'LEFT DCH _ (ADD1 (IDIFFERENCE END START))))          (STREAM (|fetch| STREAMHINT |of| TEXOBJ)))         (\\TEDIT.DELETE TSEL STREAM T))))(TEXEC.\\CHDEL1  (LAMBDA (TEXOBJ)                                           (* AJB "11-Sep-85 15:25")                    (* |Delete| |the| |last| |character| |in| |the| |text| |stream,| |and| |return|           |it,| |so| |we| |can| |decide| |what| |to| |do| |with| |it.|)    (DECLARE (USEDFREE \\LINEBUF.OFD))    (LET* ((SEL (|fetch| SEL |of| TEXOBJ))           (TEXTLEN (|fetch| TEXTLEN |of| TEXOBJ))           (CH (COND                  ((SELECTQ (|fetch| POINT |of| SEL)                       (LEFT (IDIFFERENCE (|fetch| CH# |of| SEL)                                    1))                       (RIGHT (|fetch| CH# |of| SEL))                       NIL)))))                              (* CH = |character| |position| |at|                                                              |current| |location| |of| |caret|)          (COND             ((NEQ CH (TEXTPROP TEXOBJ 'STARTINGEOF))                    (* |don't| |allow| |deletion| |of| |text| |if| |at| |beginning| |of| |current|           |input|)              (COND                 ((ILEQ (SELECTQ (|fetch| POINT |of| (|fetch| SEL |of| TEXOBJ))                            (LEFT (|fetch| CH# |of| (|fetch| SEL |of| TEXOBJ)))                            (RIGHT (SUB1 (|fetch| CHLIM |of| (|fetch| SEL |of| TEXOBJ))))                            NIL)                        (TEXTPROP TEXOBJ 'STARTINGEOF))                  (TEXTPROP TEXOBJ 'STARTINGEOF (SUB1 (TEXTPROP TEXOBJ 'STARTINGEOF)))                    (* I\f |deleting| |text| |prior| |to| |current| |input| |move| |the| |start|           |of| |input| |up| 1 |to| |compensate|)                  ))              (COND                 ((TEXEC.EOTP TEXOBJ))                 (T (|replace| (STREAM REVALIDATEFLG) |of| \\LINEBUF.OFD |with| T)                    (* |Invalidate| |paren/bracket| |count| |since| |we| |are| |no| |longer| |at|           |the| |end| |of| |the| |text|)                    ))              (PROG1 (PROGN (\\SETUPGETCH CH TEXOBJ)                            (\\BIN (|fetch| STREAMHINT |of| TEXOBJ)))                     (\\TEDIT.CHARDELETE TEXOBJ "" (|fetch| SEL |of| TEXOBJ))))))))(TEXEC.?EQUAL  (LAMBDA (TEXOBJ)                                           (* AJB "13-Jan-86 18:02")                    (* * |Test| |for| ? |or| ?= |and| |if| |so| RETURN T |else| RETURN NIL)    (DECLARE (USEDFREE \#CURRENTRDTBL#))    (PROG ((CH# 0)           CH FLG (TS (|fetch| STREAMHINT |of| TEXOBJ))           LST PTR FNAME TAIL TEMPFILE (STARTINGEOF (TEXTPROP TEXOBJ 'STARTINGEOF)))          (COND             ((OR (AND (EQ (TEXEC.NTHBUFCHARBACK TEXOBJ 0)                           (CHARCODE =))                       (EQ (TEXEC.NTHBUFCHARBACK TEXOBJ 1)                           (CHARCODE ?))                       (FMEMB (TEXEC.NTHBUFCHARBACK TEXOBJ 2)                              (CHCON '| '(| '[)))                  (AND (EQ (TEXEC.NTHBUFCHARBACK TEXOBJ 0)                           (CHARCODE ?))                       (FMEMB (TEXEC.NTHBUFCHARBACK TEXOBJ 1)                              (CHCON '| '(| '[))))              (RETURN T))             (T (RETURN))))))(TEDIT.SCROLL?  (LAMBDA (TEXOBJ)                                           (* AJB " 1-Oct-85 14:18")                    (* * |This| |function| |scrolls| |all| |of| |the| |windows| |if| |the| |caret|           |is| |off-window| |in| |the| |selection| |window|)    (PROG ((SEL (|fetch| SEL |of| TEXOBJ))           SELINE)          (|for| WIN |inside| (|fetch| \\WINDOW |of| TEXOBJ) |as| L1             |on| (|fetch| L1 |of| SEL) |as| LN |on| (|fetch| LN |of| SEL)             |do| (COND                     ((AND (EQ WIN (|fetch| SELWINDOW |of| TEXOBJ))                           (OR (NOT (SELECTQ (|fetch| POINT |of| SEL)                                        (LEFT (CAR L1))                                        (RIGHT (CAR LN))                                        NIL))                               (ILEQ (SELECTQ (|fetch| POINT |of| SEL)                                         (LEFT (|fetch| YBOT |of| (CAR L1)))                                         (RIGHT (|fetch| YBOT |of| (CAR LN)))                                         0)                                     (|fetch| BOTTOM |of| (DSPCLIPPINGREGION NIL WIN)))))                    (* |The| |caret| |is| |off-window| |in| |the| |selection| |window.|          |Need| |to| |scroll| |it| |up| |so| |the| |caret| |is| |visible.|)                      (|while| (OR (COND                                      ((SETQ SELINE (SELECTQ (|fetch| POINT |of| SEL)                                                        (LEFT (CAR L1))                                                        (RIGHT (CAR LN))                                                        NIL))                                       (ILESSP (|fetch| YBOT |of| SELINE)                                              (|fetch| WBOTTOM |of| TEXOBJ)))                                      (T (ILESSP (|fetch| Y0 |of| SEL)                                                (|fetch| WBOTTOM |of| TEXOBJ))))                                   (AND (IGEQ (|fetch| Y0 |of| SEL)                                              (|fetch| WTOP |of| TEXOBJ))                                        (NULL SELINE)))                         |do|                                (* |The| |caret| |just| |went|                                                              |off-screen.| |Move| |it| |up| |some.|)                              (|replace| EDITOPACTIVE |of| TEXOBJ |with| NIL)                              (SCROLLW WIN 0 (LLSH (COND                                                      ((SELECTQ (|fetch| POINT |of| SEL)                                                           (LEFT (CAR L1))                                                           (RIGHT (CAR LN))                                                           NIL)                                                       (|fetch| LHEIGHT                                                          |of| (SELECTQ (|fetch| POINT |of| SEL)                                                                   (LEFT (CAR L1))                                                                   (RIGHT (CAR LN))                                                                   (SHOULDNT))))                                                      (T 12))                                                   1)))))))))(TEXEC.DISPLAYTEXT  (LAMBDA (TEXTOBJ CH FONT LINE XPOINT DS SEL)               (* AJB " 1-Oct-85 11:31")                    (* |This| |function| |does| |the| |actual| |displaying| |of| |typed-in| |text|           |on| |the| |edit| |window.|)    (PROG ((TERMSA (|fetch| TXTTERMSA |of| TEXTOBJ))           DY)          (DSPXPOSITION XPOINT DS)                           (* |Set| |the| |display| |stream| X                                                              |position|)          (COND             (TERMSA                                         (* |Special| |terminal| |table| |for|                                                              |controlling| |character| |display.|                                                             |Use| |it.|)                    (COND                       ((STRINGP CH)                        (|for| CHAR |instring| CH                           |do| (SELCHARQ CHAR                                     (TAB                    (* |Put| |down| |white|)                                          (BITBLT NIL 0 0 DS XPOINT (|fetch| YBOT |of| LINE)                                                 36                                                 (|fetch| LHEIGHT |of| LINE)                                                 'TEXTURE                                                 'REPLACE WHITESHADE)                                          (RELMOVETO 36 0 DS))                                     (CR (BITBLT NIL 0 0 DS XPOINT (|fetch| YBOT |of| LINE)                                                (IMAX 6 (CHARWIDTH CHAR FONT))                                                (|fetch| LHEIGHT |of| LINE)                                                'TEXTURE                                                'REPLACE WHITESHADE))                                     (\\DSPPRINTCHAR DS CHAR))))                       (T (SELCHARQ CH                               (TAB                          (* |Put| |down| |white|)                                    (BITBLT NIL 0 0 DS XPOINT (|fetch| YBOT |of| LINE)                                           36                                           (|fetch| LHEIGHT |of| LINE)                                           'TEXTURE                                           'REPLACE WHITESHADE)                                    (RELMOVETO 36 0 DS))                               (CR (BITBLT NIL 0 0 DS XPOINT (|fetch| YBOT |of| LINE)                                          (IMAX 6 (CHARWIDTH CH FONT))                                          (|fetch| LHEIGHT |of| LINE)                                          'TEXTURE                                          'REPLACE WHITESHADE))                               (\\DSPPRINTCHAR DS CH)))))             (T                                              (* N\o |special| |handling;|                                                             |just| |use| |native| |character|                                                              |codes|)                (COND                   ((STRINGP CH)                    (|for| CHAR |instring| CH                       |do| (SELCHARQ CHAR                                 (TAB                        (* |Put| |down| |white|)                                      (BITBLT NIL 0 0 DS (DSPXPOSITION NIL DS)                                             (|fetch| YBOT |of| LINE)                                             36                                             (|fetch| LHEIGHT |of| LINE)                                             'TEXTURE                                             'REPLACE WHITESHADE)                                      (RELMOVETO 36 0 DS))                                 (CR (BITBLT NIL 0 0 DS (DSPXPOSITION NIL DS)                                            (|fetch| YBOT |of| LINE)                                            (IMAX 6 (CHARWIDTH CHAR FONT))                                            (|fetch| LHEIGHT |of| LINE)                                            'TEXTURE                                            'REPLACE WHITESHADE))                                 (BLTCHAR CHAR DS))))                   (T (SELCHARQ CH                           (TAB                              (* |Put| |down| |white|)                                (BITBLT NIL 0 0 DS (DSPXPOSITION NIL DS)                                       (|fetch| YBOT |of| LINE)                                       36                                       (|fetch| LHEIGHT |of| LINE)                                       'TEXTURE                                       'REPLACE WHITESHADE)                                (RELMOVETO 36 0 DS))                           (CR                               (* |Blank| |out| |the| |CR's| |width.|)                               (BITBLT NIL 0 0 DS (DSPXPOSITION NIL DS)                                      (|fetch| YBOT |of| LINE)                                      (IMAX 6 (CHARWIDTH CH FONT))                                      (|fetch| LHEIGHT |of| LINE)                                      'TEXTURE                                      'REPLACE WHITESHADE))                           (BLTCHAR CH DS)))))))))(\\TEXEC.TEXTBOUT  (LAMBDA (STREAM BYTE)                                      (* AJB "25-Sep-85 09:18")                    (* * D\o BOUT |to| \a |text| |stream,| |which| |is| |an| |insertion| |at| |the|           |end| |of| |text| |pointer|)    (UNINTERRUPTABLY        (PROG ((TEXOBJ (|fetch| (TEXTSTREAM TEXTOBJ) |of| STREAM))               CH# WINDOW TEXTLEN SEL STARTINGEOF)              (SETQ STARTINGEOF (ADD1 (TEXTPROP TEXOBJ 'STARTINGEOF)))                    (* |Insertion| |point| |for| |output| -          |is| |actually| |the| |beginning| |of| |the| |next/current| |text| |being|           |entered| |to| |return| |to| READ)              (TEXTPROP TEXOBJ 'STARTINGEOF STARTINGEOF)                    (* |This| |adds| 1 |to| |the| |previous| |value| |on| |the| |property| |list|)              (SETQ TEXTLEN (|fetch| TEXTLEN |of| TEXOBJ))   (* |The| |length| |of| |the| |total|                                                              |text| |in| |chars|)              (SETQ WINDOW (|fetch| \\WINDOW |of| TEXOBJ))              (SETQ SEL (|fetch| SEL |of| TEXOBJ))           (* |The| |current| |selection|)                                                             (* COND ((NOT (LDIFFERENCE                                                             (|fetch| L1 |of| SEL)                                                             (QUOTE (NIL)))) (RETURN)))                    (* |Return| |if| |caret| |out| |of| |bounds,| |ie,| |user| |scrolls| |past|           |end| |of| |text|)              (SETQ CH# (OR STARTINGEOF (|fetch| CH# |of| SEL)))              (AND WINDOW (|for| L1 |in| (|fetch| L1 |of| SEL) |as| LN                             |in| (|fetch| LN |of| SEL)                             |do|                            (* |Mark| |changed| |lines| |as|                                                              DIRTY.)                                  (COND                                     (L1 (|replace| DIRTY |of| L1 |with| T))                                     (LN (|replace| DIRTY |of| LN |with| T)))))              (\\INSERTCH BYTE CH# TEXOBJ)              (|replace| TXTNEEDSUPDATE |of| TEXOBJ |with| T)              (AND WINDOW (\\TEXEC.TEXTBOUT1 TEXOBJ STREAM BYTE CH# SEL))))))(\\TEXEC.TEXTBOUT1  (LAMBDA (TEXOBJ STREAM BYTE CH# SEL)                       (* AJB "26-Sep-85 15:39")    (PROG ((THISLINE (|fetch| THISLINE |of| TEXOBJ))           PS PC OFFST)                    (* * |Update| |stream| CHARPOSITION |for| |calls| |to| POSITION |ie,| GAINSPACE)          (|add| (|fetch| CH# |of| SEL)                 1)                    (* |These| |must| |be| |here,| |since| SEL\s |are| |valid| |even| |without| \a           |window.|)          (|replace| CHLIM |of| SEL |with| (|fetch| CH# |of| SEL))          (|replace| POINT |of| SEL |with| 'LEFT)          (|replace| DCH |of| SEL |with| 0)          (|replace| SELKIND |of| SEL |with| 'CHAR)          (|for| CARET |inside| (|fetch| CARET |of| TEXOBJ) |do| (\\EDIT.UPCARET CARET))          (\\TEXEC.TEXTBOUT2 TEXOBJ STREAM BYTE CH# SEL)          (|replace| ONFLG |of| SEL |with| T)          (|replace| DESC |of| THISLINE |with| NIL)                    (* SO |that| |this| |line| |of| |text| |is| |run| |thru| |the| |formatter|           |again| |before| |anything| |interesting| |that| |depends| |on| |it| |being|           |right| (|like| |scrolling| |the| |window|))                    (* * |Fix| |up| |the| TEXTSTREAM |so| |that| |the| FILEPTR |looks| |like| |it|           |ought| |to| |after| |the| BOUT\, |even| |though| |we've| |been| |updating|           |the| |screen| (|which| |usually| |moves| |the| |fileptr....|))          (SETQ PS (|ffetch| PSTR |of| (SETQ PC (|fetch| \\INSERTPC |of| TEXOBJ))))                    (* |This| |piece| |resides| |in| \a STRING.          |Because| |it's| |newly| "typed" |material.|)          (|replace| (TEXTSTREAM PIECE) |of| STREAM |with| PC)                                                             (* |Remember| |the| |current| |piece|                                                              |for| |others.|)          (|replace| (TEXTSTREAM PCNO) |of| STREAM |with| (|fetch| \\INSERTPCNO |of| TEXOBJ))                                                             (* |And| |which| |number| |piece|                                                              |this| |is.|)          (|freplace| CPPTR |of| STREAM |with| (ADDBASE (|ffetch| (STRINGP BASE) |of| PS)                                                      (LRSH (SETQ OFFST (|ffetch| (STRINGP OFFST)                                                                           |of| PS))                                                            1)))                                                             (* |Pointer| |to| |the| |actual|                                                              |characters| |in| |the| |string|                                                             (|allowing| |for| |substrings.|))          (|freplace| CPAGE |of| STREAM |with| 0)          (|freplace| COFFSET |of| STREAM |with| (IPLUS (|freplace| (TEXTSTREAM PCSTARTCH)                                                           |of| STREAM |with| (LOGAND 1 OFFST))                                                        (|fetch| \\INSERTLEN |of| TEXOBJ)))          (|freplace| (TEXTSTREAM PCSTARTPG) |of| STREAM |with| 0)                                                             (* |Page| \# |within| |the| "file"                                                              |where| |this| |piece| |starts|)          (|freplace| CBUFSIZE |of| STREAM |with| (|fetch| COFFSET |of| STREAM))          (|freplace| EPAGE |of| STREAM |with| 1)          (|freplace| (TEXTSTREAM CHARSLEFT) |of| STREAM |with| 0)                                                             (* |We're,| |perforce,| |at| |the|                                                              |end| |of| |the| |piece.|)          (|freplace| (TEXTSTREAM REALFILE) |of| STREAM |with| NIL)                                                             (* |We're| |not| |on| \a |file....|)      )))(\\TEXEC.TEXTBOUT2  (LAMBDA (TEXOBJ STREAM BYTE CH# SEL)                       (* AJB " 1-Oct-85 15:48")    (PROG (YFLG)          (|for| WIN |in| (|fetch| \\WINDOW |of| TEXOBJ) |as| L1 |on| (|fetch| L1 |of| SEL)             |as| LN |on| (|fetch| LN |of| SEL) |do| (COND                                                        ((CAR L1)                                                         (|add| (|fetch| CHARLIM |of| (CAR L1))                                                                1)                                                         (|add| (|fetch| CHARTOP |of| (CAR L1))                                                                1)                                                         (COND                                                            ((EQ WIN (|fetch| SELWINDOW |of| TEXOBJ))                                                             (SETQ YFLG (ILESSP (|fetch| YBASE                                                                                   |of| (CAR L1))                                                                               0)))))))          (COND             ((OR (IGREATERP (PLUS (|fetch| X0 |of| SEL)                                   (CHARWIDTH BYTE (|fetch| CLFONT |of| (|fetch| CARETLOOKS                                                                           |of| TEXOBJ))))                         (IDIFFERENCE (|fetch| WRIGHT |of| TEXOBJ)                                16))                  (IEQP BYTE (CHARCODE EOL))                  (IEQP BYTE (CHARCODE CR))                  (ILESSP CH# (|fetch| TEXTLEN |of| TEXOBJ))                  YFLG)                    (* |gone| |off| |the| |edge| |of| |the| |line,| O\r |not| |at| |end| |of|           |text| |reformat| |and| |add| |new| |line|)              (\\TEXEC.TEXTBOUT3 TEXOBJ STREAM BYTE CH# SEL))             (T                                              (* |Display| |text| |on| |same| |line|                                                              |without| |updating| |entire| |screen|)                (\\TEXEC.TEXTBOUT4 TEXOBJ STREAM BYTE CH# SEL))))))(\\TEXEC.TEXTBOUT3  (LAMBDA (TEXOBJ STREAM BYTE CH# SEL)                       (* AJB "14-Jan-86 18:45")                    (* * |Updates| |the| |screen| |if| |necessary| |and| |checks| |for| |exceeding|           |bufferlimit| |size|)    (PROG (OCHLIM)          (COND             ((IGEQ CH# (|fetch| TEXTLEN |of| TEXOBJ))              (\\SHOWSEL SEL NIL NIL)              (TEDIT.UPDATE.SCREEN TEXOBJ)                   (* |Only| |update| |screen| |if| |at|                                                              |end| |of| |text|)              (\\FIXSEL SEL TEXOBJ NIL)              (TEDIT.SCROLL? TEXOBJ)              (\\SHOWSEL SEL NIL T)              (COND                 ((AND (NEQ TEXEC.BUFFERLIMIT 0)                       (IGREATERP (SETQ OCHLIM (IDIFFERENCE (GETEOFPTR STREAM)                                                      TEXEC.BUFFERLIMIT))                              0))                  (|replace| \\INSERTPCVALID |of| TEXOBJ |with| NIL)                  (TEXEC.DELETE TEXOBJ 1 (IMAX OCHLIM (LRSH TEXEC.BUFFERLIMIT 3)))                    (* |Remove| |the| |top| |1/8| |or| |at| |least| |the| |number| |of| |chars|           |exceeding| TEXEC.BUFFERLIMIT. I\f TEXEC.BUFFERLIMIT |is| 0\, |allow|           |infinite| |size|)                  (\\FIXSEL SEL TEXOBJ))))))))(\\TEXEC.TEXTBOUT4  (LAMBDA (TEXOBJ STREAM BYTE CH# SEL)                       (* AJB " 1-Oct-85 14:51")                    (* * |Display| |character| |on| |same| |line| |with| |no| |reformatting|           |screen|)    (COND       ((IGEQ CH# (|fetch| TEXTLEN |of| TEXOBJ))                    (* |Don't| |display| |character| |unless| |the| |output| |is| |at| |the| |end,|           \\TEXEC.GETKEY |will| |update| |the| |screen| |when| |the| |next| |input| |is|           |called| |for.|)        (|for| WIN |in| (|fetch| \\WINDOW |of| TEXOBJ) |as| L1 |on| (|fetch| L1 |of| SEL)           |as| LN |on| (|fetch| LN |of| SEL) |do| (COND                                                      ((AND (CAR L1)                                                            (IGEQ (|fetch| YBASE |of| (CAR L1))                                                                  0))                                                       (TEXEC.DISPLAYTEXT TEXOBJ BYTE                                                              (|fetch| CLFONT                                                                 |of| (|fetch| CARETLOOKS                                                                         |of| TEXOBJ))                                                              (CAR L1)                                                              (DSPXPOSITION NIL WIN)                                                              (WINDOWPROP WIN 'DSP)                                                              SEL)                                                             (* |Print| |out| |the| |character|                                                              |on| |the| |screen|)                                                       (|replace| X0 |of| SEL |with| (DSPXPOSITION                                                                                      NIL WIN))                                                       (|replace| XLIM |of| SEL                                                          |with| (DSPXPOSITION NIL WIN)))))))))(\\TEXEC.SELFN  (LAMBDA (TEXOBJ SEL SELMODE CONTROL)                       (* AJB "20-Feb-86 13:23")                    (* * |This| |function| |gets| |called| |via| |the| SELFN |property| |on| |the|           TEXTOBJ\, |and| |restricts| |the| |selection| |to| |the| |current| |input|)    (PROG NIL                                                (* |Make| |sure| |there| |is| |really|                                                              \a |selection|)          (COND             ((AND (FMEMB SELMODE '(NORMAL PENDINGDEL MOVE DELETE))                   (|fetch| SET |of| SEL)                   (ILESSP (SELECTQ (|fetch| POINT |of| SEL)                               (LEFT (|fetch| CH# |of| SEL))                               (RIGHT (|fetch| CHLIM |of| SEL))                               NIL)                          (ADD1 (TEXTPROP TEXOBJ 'STARTINGEOF))))              (RETURN 'DON\'T)                    (* |Don't| |allow| |selection| |if| |selecting| |text| |prior| |to| |current|           |input|)              )             (T (RETURN T)))                                 (* |else| |return| T)      )))(TEXEC.PROCENTRYFN  (LAMBDA (NEWPROCESS OLDPROCESS)                            (* AJB " 6-Feb-86 15:25")                    (* TEXEC\'S PROCESS.ENTRYFN |which| |disarms| |the| DELELTE |key| |interrupt|           |so| |it| |can| |use| |it| |as| \a |linedelete| |key|)    (COND       ((NOT (PROCESSPROP NEWPROCESS 'INTERRUPTS))        (PROCESSPROP NEWPROCESS 'INTERRUPTS (RESET.INTERRUPTS (REMOVE '(127 RUBOUT T) (LISPINTERRUPTS                                                                                       ))                                                   T))))))(TEXEC.PROCEXITFN  (LAMBDA (THISP NEWP)                                       (* AJB " 6-Feb-86 15:25")                                                             (* |Re-arm| DELETE |key| |to|                                                              |whatever| |it| |was| |before|)    (RESET.INTERRUPTS (PROCESSPROP THISP 'INTERRUPTS))    (PROCESSPROP THISP 'INTERRUPTS NIL))))(* \; "Code to support a TEXEC lisp 'listener'")(DEFINEQ(TEXEC  (LAMBDA (|region| |Prompt| |MenuFn|)                       (* AJB "26-Aug-86 10:18")                    (* |Create| |an| |Interlisp| |executive| |window| |with| |TEdit| |as| |the|           |editor| |behind| |it.|)    (PROG (|handle| |window| |teditstream| |linebuffer|)          (SETQ |window| (CREATEW |region| "TEXEC (Version 20.1)"))                                                             (* |Create| \a |window| |for| |the|                                                              |TEdit-based| |listener|)          (SETQ |teditstream| (TEXEC.OPENTEXTSTREAM |window| (OR |MenuFn| 'TEXEC.DEFAULT.MENUFN)))                    (* |Create| \a |TEdit| |stream| |for| |the| TEXEC |and| |fill| |in| |our|           |non-standard| |fields|)          (|replace| (STREAM LINELENGTH) |of| |teditstream| |with| (|fetch| (STREAM LINELENGTH)                                                                      |of| (|fetch| (WINDOW DSP)                                                                              |of| |window|)))                    (* |set| |the| |linelength| |of| |the| |teditstream| |to| |be| |the| |same|           |as| |the| |one| |for| |the| |display| |stream|)          (STREAMPROP |teditstream| 'FIXFN (FUNCTION TEXEC.FIX))                                                             (* |This| |stream| |has| |its| |own|                                                              P.A. FIX |command|)          (SETQ |linebuffer| (\\CREATELINEBUFFER))                    (* |Create| |our| LINEBUFFER |so| |we| |can| |attach| \a READREFILL |function|           |to| |it|)          (STREAMPROP |linebuffer| 'REFILLBUFFERFN (FUNCTION TEXEC.FILLBUFFER))                                                             (* |Attach| |the| READREFILL                                                              |function| |to| |the| |newly|                                                              |created| LINEBUFFER)          (WINDOWPROP |window| '\\LINEBUF.OFD |linebuffer|)  (* |attach| |the| |linebuffer| |to|                                                              |the| |window| |for| TTYDISPLAYSTREAM)          (SETQ |handle| (ADD.PROCESS `(PROGN (TTYDISPLAYSTREAM (QUOTE \, |teditstream|))                                              (EVALQT (QUOTE \, (OR |Prompt| '\#)))) 'NAME                                'TEXEC                                'RESTARTABLE T))             (* |Create| |the| TEXEC |process|)          (|replace| PROCTTYENTRYFN |of| |handle| |with| (FUNCTION TEXEC.PROCENTRYFN))          (|replace| PROCTTYEXITFN |of| |handle| |with| (FUNCTION TEXEC.PROCEXITFN))          (WINDOWPROP |window| 'ICONFN (FUNCTION TEXEC.SHRINK.ICONCREATE))          (WINDOWPROP |window| 'TITLE (PROCESSPROP |handle| 'NAME))          (WINDOWADDPROP |window| 'CLOSEFN (FUNCTION (LAMBDA (|window|)                                                       (PROG ((|proc| (WINDOWPROP |window|                                                                             'PROCESS)))                                                             (RETURN (COND                                                                        ((EQ (THIS.PROCESS)                                                                             |proc|)                                                                         (ADD.PROCESS                                                                          (LIST 'CLOSEW (KWOTE                                                                                              |window|                                                                                               )))                                                                         'DON\'T)                                                                        ((PROCESSP |proc|)                                                                         (INTERRUPTCHAR                                                                          127                                                                          (PROCESSPROP |proc|                                                                                 'INTERRUPTS))                                                             (* |Restore| |interruptchar| 127)                                                                         (DEL.PROCESS |proc|)                                                                         NIL)))))))          (TTY.PROCESS |handle|))))(TTEXEC  (LAMBDA NIL                                                (* AJB " 6-Feb-86 15:09")                    (* * |This| |function| |replaces| |the| |Top| |Level| |Interlisp-D| |Executive|           |with| TEXEC\, |but| |only| |if| |this| |function| |is| |being| |run| |from|           |the| |Top| |Level| |Exec| |window.|)    (DECLARE\: (USEDFREE \\TERM.OFD \\LINEBUF.OFD))    (PROG ((WINDOW (WFROMDS \\TERM.OFD)))          (COND             ((EQ (|fetch| PROCNAME |of| (THIS.PROCESS))                  'EXEC)              (SETREADFN 'READ)              (TTYDISPLAYSTREAM (TEXEC.OPENTEXTSTREAM WINDOW 'TEXEC.DEFAULT.MENUFN))              (STREAMPROP \\TERM.OFD 'FIXFN (FUNCTION TEXEC.FIX))                                                             (* |Put| FIX |function| |on| |stream|)              (STREAMPROP \\LINEBUF.OFD 'REFILLBUFFERFN (FUNCTION TEXEC.FILLBUFFER))                                                             (* |Attach| |the| READREFILL                                                              |function| |to| |the| |newly|                                                              |created| LINEBUFFER)              (WHENCLOSE \\TERM.OFD 'BEFORE 'DON\'T)              (WINDOWPROP WINDOW 'CLOSEFN NIL)              (WINDOWPROP WINDOW 'ICONFN (FUNCTION TEXEC.SHRINK.ICONCREATE))              (WINDOWPROP WINDOW 'ICON NIL)              (WINDOWPROP WINDOW 'TEDIT.ICON.TITLE NIL)              (WINDOWPROP WINDOW 'ICONWINDOW NIL)              (WINDOWPROP WINDOW 'ICONPOSITION NIL)              (|replace| PROCTTYENTRYFN |of| (THIS.PROCESS) |with| (FUNCTION TEXEC.PROCENTRYFN))              (|replace| PROCTTYEXITFN |of| (THIS.PROCESS) |with| (FUNCTION TEXEC.PROCEXITFN))              (SETREADFN 'TTYINREAD))             (T (PROMPTPRINT "Switching EXEC to TEXEC must be done from EXEC window")))))))(APPENDTOVAR |BackgroundMenuCommands| (TEXEC '(TEXEC) "Starts TEXEC in a new window."))(READVAR-FROM-STRING 'TEXEC.ICON " {(READBITMAP)(64 77\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@OH@@@@@@@@@\"\"@@@@COL@@@@@@@@@\"\"@@@@CON@@@@@@@@@\"\"@@@@GHC@@@@@@@@@\"\"@@@@O@AH@@@@@@@@\"\"@@@AKBEL@@@@@@@@\"\"@@@AC@BD@@@@@@@@\"\"@@@AAHBD@@@@@@@@\"\"@@@A@LBD@@@@@@@@\"\"@@@A@NDD@@@@@@@@\"\"@@@AGOOL@@@@@@@@\"\"@@@AHFDF@@@@@@@@\"\"@@@AHBDB@@@@@@@@\"\"@@@A@BDC@@@@@@@@\"\"@@@A@AHA@@@@@@@@\"\"@@@A@AIAH@@@@@@@\"\"@@@AA@I@H@@@@@@@\"\"@@@CA@HHH@@@@@@@\"\"@@@BA@HHHC@@@@@@\"\"@@@CA@I@DB@@@@@@\"\"@@@AAH@HBF@@@@@@\"\"@@@AHF@HNL@@@@@@\"\"@@@ALC@GIL@@@@@@\"\"@@@ADNLC@H@@@@@@\"\"OOOOOHGOMOOOH@@@\"\"O@@@@HDDGH@@O@@@\"\"ON@@@GHC@F@@AN@@\"\"LOL@@@@AOOH@@CL@\"\"LAOH@@@@@@@@@@GH\"\"L@COOOOOOOOOOOOO\"\"L@@GOOOOOOOOOOOO\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"O@@CH@@@@@@@@@@C\"\"ON@CH@@@@@@@@@@C\"\"LOLCH@@@@@@@@@@C\"\"LAOKH@@@@@@@@@@C\"\"@@COOOOOOOOOOOOO\"\"@@@GH@@@@@@@@@@C\"\"@@@CH@@@@@@@@@@C\"\"@@@CH@@@@@@@@@@C\"\"@@@AH@@@@@@@@@@C\")}")(READVAR-FROM-STRING 'TEXEC.ICON.MASK " {(READBITMAP)(64 77\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"@@@@@@@@@@@@@@@@\"\"@@@@@OH@@@@@@@@@\"\"@@@@COL@@@@@@@@@\"\"@@@@CON@@@@@@@@@\"\"@@@@GOO@@@@@@@@@\"\"@@@@OOOH@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOON@@@@@@@@\"\"@@@AOOON@@@@@@@@\"\"@@@AOOOO@@@@@@@@\"\"@@@AOOOO@@@@@@@@\"\"@@@AOOOOH@@@@@@@\"\"@@@AOOOOH@@@@@@@\"\"@@@COOOOH@@@@@@@\"\"@@@COOOOHC@@@@@@\"\"@@@COOOOLB@@@@@@\"\"@@@AOOOONF@@@@@@\"\"@@@AOOOONL@@@@@@\"\"@@@AOOOOOL@@@@@@\"\"@@@AOOOOOH@@@@@@\"\"OOOOOOOOOOOOH@@@\"\"OOOOOOOOOOOOO@@@\"\"OOOOOOOOOOOOON@@\"\"OOOOOOOOOOOOOOL@\"\"OOOOOOOOOOOOOOOH\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"LOOOOOOOOOOOOOOO\"\"LAOOOOOOOOOOOOOO\"\"@@COOOOOOOOOOOOO\"\"@@@GH@@@@@@@@@@C\"\"@@@CH@@@@@@@@@@C\"\"@@@CH@@@@@@@@@@C\"\"@@@AH@@@@@@@@@@C\")}")(READVAR-FROM-STRING 'TEXEC.TITLED.ICON.TEMPLATE " ( {(READBITMAP)(64 77\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@@@@@@@@@@@@\"\"@@@@@OH@@@@@@@@@\"\"@@@@COL@@@@@@@@@\"\"@@@@CON@@@@@@@@@\"\"@@@@GHC@@@@@@@@@\"\"@@@@O@AH@@@@@@@@\"\"@@@AKBEL@@@@@@@@\"\"@@@AC@BD@@@@@@@@\"\"@@@AAHBD@@@@@@@@\"\"@@@A@LBD@@@@@@@@\"\"@@@A@NDD@@@@@@@@\"\"@@@AGOOL@@@@@@@@\"\"@@@AHFDF@@@@@@@@\"\"@@@AHBDB@@@@@@@@\"\"@@@A@BDC@@@@@@@@\"\"@@@A@AHA@@@@@@@@\"\"@@@A@AIAH@@@@@@@\"\"@@@AA@I@H@@@@@@@\"\"@@@CA@HHH@@@@@@@\"\"@@@BA@HHHC@@@@@@\"\"@@@CA@I@DB@@@@@@\"\"@@@AAH@HBF@@@@@@\"\"@@@AHF@HNL@@@@@@\"\"@@@ALC@GIL@@@@@@\"\"@@@ADNLC@H@@@@@@\"\"OOOOOHGOMOOOH@@@\"\"O@@@@HDDGH@@O@@@\"\"ON@@@GHC@F@@AN@@\"\"LOL@@@@AOOH@@CL@\"\"LAOH@@@@@@@@@@GH\"\"L@COOOOOOOOOOOOO\"\"L@@GOOOOOOOOOOOO\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"L@@CH@@@@@@@@@@C\"\"O@@CH@@@@@@@@@@C\"\"ON@CH@@@@@@@@@@C\"\"LOLCH@@@@@@@@@@C\"\"LAOKH@@@@@@@@@@C\"\"@@COOOOOOOOOOOOO\"\"@@@GH@@@@@@@@@@C\"\"@@@CH@@@@@@@@@@C\"\"@@@CH@@@@@@@@@@C\"\"@@@AH@@@@@@@@@@C\")}  {(READBITMAP)(64 77\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"@@@@@@@@@@@@@@@@\"\"@@@@@OH@@@@@@@@@\"\"@@@@COL@@@@@@@@@\"\"@@@@CON@@@@@@@@@\"\"@@@@GOO@@@@@@@@@\"\"@@@@OOOH@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOOL@@@@@@@@\"\"@@@AOOON@@@@@@@@\"\"@@@AOOON@@@@@@@@\"\"@@@AOOOO@@@@@@@@\"\"@@@AOOOO@@@@@@@@\"\"@@@AOOOOH@@@@@@@\"\"@@@AOOOOH@@@@@@@\"\"@@@COOOOH@@@@@@@\"\"@@@COOOOHC@@@@@@\"\"@@@COOOOLB@@@@@@\"\"@@@AOOOONF@@@@@@\"\"@@@AOOOONL@@@@@@\"\"@@@AOOOOOL@@@@@@\"\"@@@AOOOOOH@@@@@@\"\"OOOOOOOOOOOOH@@@\"\"OOOOOOOOOOOOO@@@\"\"OOOOOOOOOOOOON@@\"\"OOOOOOOOOOOOOOL@\"\"OOOOOOOOOOOOOOOH\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"OOOOOOOOOOOOOOOO\"\"LOOOOOOOOOOOOOOO\"\"LAOOOOOOOOOOOOOO\"\"@@COOOOOOOOOOOOO\"\"@@@GH@@@@@@@@@@C\"\"@@@CH@@@@@@@@@@C\"\"@@@CH@@@@@@@@@@C\"\"@@@AH@@@@@@@@@@C\")}  (8 30 60 60))")(RPAQ TEXEC.ICON.TITLE.REGION       (CREATE REGION BOTTOM _ 55 LEFT _ 6 WIDTH _ 77 HEIGHT _ 16))(RPAQ TEXEC.ICON.FONT (FONTCREATE 'HELVETICA 8 'BOLD))(RPAQ TEXEC.DEFAULT.MENU (TEXEC.CREATEMENU '((|Put| '|Put| NIL (SUBITEMS |Plain-Text| |Old-Format|))                                             (|Get| '|Get| NIL (SUBITEMS |Unformatted Get|))                                             (|Include| '|Include|)                                             ("Forward Find" '|ForwardFind|)                                             ("Backward Find" '|BackwardFind|)                                             (|Limit| '|Limit|))))(RPAQQ |BackgroundMenu| NIL)(RPAQ? TEXEC.BUFFERLIMIT 10000)(PUTPROPS TEXEC COPYRIGHT ("Xerox Corporation" 1985 1900 1986 1987))(DECLARE\: DONTCOPY  (FILEMAP (NIL (3199 142077 (TEXEC.OPENTEXTSTREAM 3209 . 5336) (TEXEC.DEFAULT.MENUFN 5338 . 9414) (TEXEC.CREATEMENU 9416 . 9874) (TEXEC.GET 9876 . 17464) (TEXEC.INCLUDE 17466 . 28935) (TEXEC.FIND.FORWARD 28937 . 38132) (TEXEC.FIND.BACKWARD 38134 . 47619) (TEDIT.FIND.BACKWARD 47621 . 51879) (TEDIT.BASICFIND.BACKWARD 51881 . 56112) (TEXEC.MENU.WHENHELDFN 56114 . 56773) (TEXEC.SHRINK.ICONCREATE 56775 . 59578) (TEXEC.FILLBUFFER 59580 . 75356) (TEXEC.FILLBUFFER.TCLASS 75358 . 81198) (TEXEC.CHSELPENDING 81200 . 86998) (TEXEC.FILLBUFFER.CHARDELETE 87000 . 89055) (TEXEC.FILLBUFFER.WORDDELETE 89057 . 93948) (TEXEC.FILLBUFFER.LINEDELETE 93950 . 96479) (TEXEC.PARENCOUNT 96481 . 97714) (TEXEC.PARENMATCH 97716 . 99163) (TEXEC.FLASHCARET 99165 . 101298) (TEXEC.TEXTSTREAM.TO.LINEBUF 101300 . 103932) (TEXEC.FIX 103934 . 106849) (TEXEC.NTHBUFCHARBACK 106851 . 107847) (TEXEC.NTHBACKCHNUM 107849 . 108499) (TEXEC.EOTP 108501 . 109066) (TEXEC.GETKEY 109068 . 112040) (TEXEC.INSERTCHAR 112042 . 114149) (TEXEC.DELETE 114151 . 114721) (TEXEC.\\CHDEL1 114723 . 117057) (TEXEC.?EQUAL 117059 . 118099) (TEDIT.SCROLL? 118101 . 121673) (TEXEC.DISPLAYTEXT 121675 . 127137) (\\TEXEC.TEXTBOUT 127139 . 129594) (\\TEXEC.TEXTBOUT1 129596 . 133920) (\\TEXEC.TEXTBOUT2 133922 . 136218) (\\TEXEC.TEXTBOUT3 136220 . 137613) (\\TEXEC.TEXTBOUT4 137615 . 139847) (\\TEXEC.SELFN 139849 . 141062) (TEXEC.PROCENTRYFN 141064 . 141667) (TEXEC.PROCEXITFN 141669 . 142075)) (142135 148764 (TEXEC 142145 . 146821) (TTEXEC 146823 . 148762)))))STOP