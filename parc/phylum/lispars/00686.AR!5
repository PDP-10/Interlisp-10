Number: 686Date: 13-Apr-84 12':10':52Submitter: Sannella.PASource: JonL.paSubject: fix (CAR (GETPROP ---)) (can be T) in SUBPRINTLisp Version: Description: 'Date': 11 Apr 84 20':34 PST'From': JonL.pa'Subject': Lisp': Erroneous CLISPWORD properties on OR, AND and !'To': LispSupport.pa''Lisp System Date': 11-Apr-84 00':53':49'Frequency': Always'Impact': Fatal in CAR/CDRERR mode, Minor otherwise''SUBPRINT (in files PRETTY and NEWPRINTDEF) is taking CAR of the result of (GETP x ''CLISPWORD), which will "die" for x in {OR, AND, !, or, and, !!} because these atoms have T as the property. [actual call in SUBPRINT is to SUPERPRINTGETPROP].''Can anyone explain why these atoms have T as their CLISPWORD?  The manual, page 16.22, documents the CLISPWORD property as being of the form (<keyword> . <name>)''-----''[LMM': changed subject to fix (CAR (GETPROP ---)) in SUBPRINT to (CAR (LISTP (GETPROP --] to reflect how fix should be affected. I think the CLISPWORD properties of OR AND and ! are there for some reasonably obscure reasons; I''d rather make a localized assured correct fix (fixing PRETTY) rather than one that I don''t understand the implications of. Sheil is Attn because NewPrintdef probably has same stuff.]''-----''[BAS': CLISPWORD properties of OR etc are very obscure, but adding the LISTP check wont work b/c (CAR T) is T, not NIL, and it looks as if some of SUBPRINT depends on that. Also, there are a lot of people taking CAR of something obtained from SUPERPRINTGETPROP, which has the same problem. I''ll volunteer to work over both NEWPRINTDEF and PRETTY to get rid of these (in the interests of removing CAR of atoms) but it is quite tricky.]''-----''From': MASINTER.PA'Date': 26-Apr-84 22':30':12 PST'Subject': Re': AR 686': (CAR (GETPROP...) in SUBPRINT'In-reply-to': Sheil''s message of 24 Apr 84 17':28 PST'To': Sheil'cc': jonl,masinter, lispsupport''(CAR T) is not guaranteeed to be T in Interlisp, as far as I know.''If PRETTY relies on it, we should remove that reliance.'''If PRETTY seems to assume that, it should be fixed.''I''d like to see (CAR T) be an error.''-----''Date': 27 Apr 84 20':33 PST'From': Sheil.pa'Subject': Re': AR 686': (CAR (GETPROP...) in SUBPRINT'In-reply-to': MASINTER.PA''s message of 26-Apr-84 22':30':12 PST'To': MASINTER.PA'cc': jonl.PA, lispsupport.PA''"(CAR T) is not guaranteeed to be T in Interlisp, as far as I know." Yes, but it is.''"If PRETTY relies on it, we should remove that reliance." Yes, but that takes thought (even to decide if the antecedent is true), so the simple patch proposed won''t do. As and when I can, I''ll do the job right.''I too would like to see (CAR T) be an error.''Beau'''Workaround: Test Case: Edit-By: Sannella.PAEdit-Date: 30-Apr-84 13':05':41Attn: SheilAssigned To: In/By: Disposition: System: Programming EnvironmentSubsystem: OtherMachine: Disk: Microcode Version: Memory Size: File Server: Server Software Version: Difficulty: HardFrequency: EverytimeImpact: ModeratePriority: PerhapsStatus: OpenProblem Type: Design - ImplSource Files: 