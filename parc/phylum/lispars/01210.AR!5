Number: 1210Date: 23-May-84 16':45':53Submitter: LE.PASASource: Schlumberger DollSubject: Add oldstream arg (to smash) to OPENSTRINGSTREAMAssigned To: Attn: JonL, vanMelleStatus: OpenIn/By: Problem Type: Design - ImplImpact: ModerateDifficulty: EasyFrequency: EverytimePriority: UnlikelySystem: Operating SystemSubsystem: Generic File OperationsMachine: Disk: Lisp Version:  Fugue6Source Files: Microcode Version: Memory Size: File Server: Server Software Version: Disposition: [lmm': I don''t care about this one -- do you? Attn': vanMelle, JonL, Priority_ Unlikely]Description: 'Since \MAKEBASEBYTESTREAM takes an optional old stream to smash, would it be possible to add a similar optional argument in OPENSTRINGSTREAM?''-----''Received': from SUMEX-AIM.ARPA by PARC-MAXC.ARPA; 22 MAY 84 16':36':57 PDT'Date': Tue, 22 May 84 16':36':58 PDT'From': Eric Schoen <Schoen@SUMEX-AIM.ARPA>'Subject': Re': smashing old streams'To': MASINTER.PA'In-Reply-To': Message from "MASINTER.PA@PARC-MAXC.ARPA" of Mon 21 May 84 23':52':00-PDT''I wrote a version of OPENSTRINGSTREAM in February, after visiting PARC.  I naturally assumed the OLDSTREAM argument would be available, as it was provided in \MAKEBASEBYTESTREAM.  In addidion, I knew I''d be calling the function very often, and only using the streams for a short while.  It seems reasonable to hold onto the old streams, rather than constantly allocating, releasing, and then reallocating them.  You''re telling me that storage allocation in Lisp is not seriously slower?  (I could believe that; it''s the overhead of garbage collecting the blocks in the inner loop of a function I wanted to avoid)  If so, I withdraw my request.''Eric'-------''Workaround: Test Case: Edit-By: vanMelleEdit-Date: 12-Jul-84 14':58':13