Number: 633Date: 10-Apr-84 17':03':39Submitter: Sannella.PASource: Wallace.paSubject: Want to REALLY close a file, and know that it is closedLisp Version: Description: 'Date':  9 Apr 84 00':33 PST'From': Wallace.pa'Subject': Lisp': Ensuring the closed-ness of a file'To': LispSupport.pa''Lisp System Date':  8-Apr-84 18':02':02'Machine': Dorado (Ventana)'Microcode version': 24,2'Memory size': 10000'Frequency': Always'Impact': Moderate''Is there any way to ensure the closed-ness of a file?  Apparently CLOSEF doesn''t guarentee to close the file until you log out.  That''s a screw.  I''ve been calling CLOSEALL, but I''d like to selectively close individual files (so I don''t screw other processes).''david''Date': 10 Apr 84 18':36 PST'From': Kaplan.pa'Subject': Re': AR 633': Want to REALLY close a file, and know that it is closed'In-reply-to': LispSupport.pa''s message of 10 Apr 84 17':04':15 PST (Tuesday)'To': LispSupport.pa'cc': Kaplan.pa''This should probably be passed on to Van Melle, since I don''t really have anything to do with the way that closing interacts with processes.''His request for a selective CLOSEALL could be obtained by making \OPENFILES be a process global, something that I advocated quite awhile ago in the mail and that various people objected to.  It requires making the individual lisp devices, as opposed to the logical IO system, smart about conflicting openings of particular files.'Workaround: Test Case: Edit-By: masinter.PAEdit-Date: 11-Apr-84 16':06':21Attn: vanMelleAssigned To: In/By: Disposition: [attn_vanMelle]System: Operating SystemSubsystem: Generic File OperationsMachine: Disk: Microcode Version: Memory Size: File Server: Server Software Version: Difficulty: Frequency: EverytimeImpact: ModeratePriority: PerhapsStatus: OpenProblem Type: Design - ImplSource Files: 