Number: 29Date: 16-Mar-84 23':58':38Submitter: Sannella.paSource: ROACH.PASubject: ACCESSFNS of system records not saved on SYSRECORDSAssigned To: Attn: vanM, Kapl, BurtonStatus: OpenIn/By: Problem Type: BugImpact: AnnoyingDifficulty: EasyFrequency: EverytimePriority: PerhapsSystem: Programming EnvironmentSubsystem: Record PackageMachine: Disk: Lisp Version: Source Files: Microcode Version: Memory Size: File Server: Server Software Version: Disposition: Description: 'Date': 12 MAR 84 17':38 PST'From': ROACH.PA'Subject': Missing STREAM accessfns'To':   LISPSUPPORT'cc':   ROACH''     ACCESSFNS for datatype STREAM are missing in the declaration'of STREAM found on SYSTEMRECLST.  They are also missing in EXPORTS.ALL.'     Responsible person': KAPLAN.'				Kelly''-----''Date':  7 Apr 84 15':29 PST'From': Kaplan.pa'Subject': AR 29':  Miising accessfns for STREAM'To': Lispsupport, Vanmelle''This is not a problem with STREAMs.  It seems to be a problem with all sysem datatype declarations':  The function SAVEONSYSRECLST on RECORD only includes the fields of the datatype, not the tail of the declaration, which is where the accessfns would be.''I don''t know who decided to do it this way or why, but Bill was the last editor of this function.''Not understanding the issues, I won''t work on this further.  Either it should be passed on to Bill, or marked as declined, I guess.''--Ron''-----''Date':  7 Apr 84 15':46 PST'From': vanMelle.pa'Subject': Re': AR 29':  Miising accessfns for STREAM'In-reply-to': Kaplan.pa''s message of 7 Apr 84 15':29 PST'To': Kaplan.pa'cc': Lispsupport.pa, vanMelle, Burton.pa''One of the reasons that SYSRECORDS does not save the tail of the declaration is that the inspector doesn''t use it.  I assume it was Richard''s decision that inspect of a system record included only the "real" fields, not any accessfns or other overlays; but in any case, I agree with it.  In fact, I often wish this were true for user records as well; in most cases I have seen, the additional fields are just synonyms or alternative perspectives on the main record, and I find it confusing and/or annoying to find them in the inspect window.  Once in a while, the accessfns even have undesirable side effects when accessed by the inspector.''	Bill''-----''Date':  9 APR 84 19':36 PST'From': JONL.PA'Subject': Re': AR 29':  Miising accessfns for STREAM'To':   vanMelle, Kaplan'cc':   Lispsupport, Burton, JONL''In response to the message sent   7 Apr 84 15':46 PST from vanMelle.pa''Before deleting the inspector facility that shows all "fields" (including'the ACCESSFNS ones), be sure that there is some way to get that effect'when wanted.  For example, I was inspecting some random datatype (maybe it'was the PILOTBBT?) and the basic fields where something like BASEHI and BASELO,'which when printed out just look like two random numbers; but seeing the BASE'"field" make it all clear -- BASE just did a \VAG2 of the appropriate other'fields.''-----''From': KAPLAN.pa'Date': 10-Apr-84  7':41':16 PST'Subject': Re': AR 29':  Miising accessfns for STREAM'In-reply-to': JONL''s message of 9 APR 84 19':36 PST'To': JONL'cc': vanMelle, Kaplan, Lispsupport, Burton''Actually, I also question the wisdom of suppressing accessfns in the inspector. Sometimes that''s the only way of giving a symbolic interpretatation to what would otherwise be garbage.  The ACCESS field of a stream is one example that comes to mind.''Seems to me that the accessfns ought to at last be passed thru on sysemreclst, ad perhaps then the inspector could have a flag that suppressed them or not.''--Ron'Workaround: Test Case: Edit-By: Burton.paEdit-Date: 16-May-84 11':38':40