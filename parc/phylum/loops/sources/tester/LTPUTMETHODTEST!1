(FILECREATED "20-Mar-85 11:19:46" {INDIGO}<LOOPS>SOURCES>TESTER>LTPUTMETHODTEST.;2 10964        changes to:  (INSTANCES LTFPutMethod)		   (VARS LTPutMethodTestInstances)      previous date: "18-Mar-85 12:02:04" {INDIGO}<LOOPS>SOURCES>TESTER>LTPUTMETHODTEST.;1)(* Copyright (c) 1985 by Xerox Corporation. All rights reserved.)(PRETTYCOMPRINT LTPUTMETHODTESTCOMS)(RPAQQ LTPUTMETHODTESTCOMS ((* File created by MITTAL)			    (* Database of Test Instances for Put and GetMethod tests)			    (CLASSES)			    (METHODS)			    (FNS)			    (VARS)			    (INSTANCES * LTPutMethodTestInstances)))(* File created by MITTAL)(* Database of Test Instances for Put and GetMethod tests)(DEFCLASSES)(RPAQQ LTPutMethodTestInstances (LTFGetMethod LTFPutMethod LTP49 LTP48 LTP52 LTP51 LTP73 LTP68 LTP50 					      LTP74 LTP72 LTP71 LTP70 LTP65 LTP47))[DEFINST LOOPSTestLispFunc (LTFGetMethod "OER@@E>")         (name #(LTFGetMethod NIL RememberName))	 (TestDesc "GetMethod: local selector")	 (SetUp ?)	 [TestExpr (AND (EQUAL (GetMethod ($ LOOPSTestClassL1)					  (QUOTE M1))			       (QUOTE LOOPSTestClassL1.M1))			(EQUAL (GetMethod ($ LOOPSTestClassL1)					  (QUOTE M3))			       (QUOTE LOOPSTestClassL1.M3]	 (SubTest #((LTP73 LTP69 LTP68 LTP67)		    NIL MakeBackLink) Tested? ?)	 (PreTest ? Tested? T)	 (AltTest ? Tested? ?)	 (SyntaxTest ? Tested? ?)	 (UsesObj #((LOOPSTestClassL1)		    NIL AllowRemove))	 (LispName GetMethod)][DEFINST LOOPSTestLispFunc (LTFPutMethod "OER@@E?")         (name #(LTFPutMethod NIL RememberName))	 (TestDesc "PutMethod: selector")	 (SetUp (PutMethod ($ LOOPSTestClass3)			   (QUOTE PM1)			   (QUOTE LOOPSTestClass3.PM1)))	 [TestExpr (FMEMB (QUOTE LOOPSTestClass3.PM1)			  (CalledFns (QUOTE (LOOPSTestClass3]	 (ResetExp (SEND ($ LOOPSTestClass3)			 Delete			 (QUOTE Method)			 (QUOTE PM1)))	 (SubTest #((LTP52 LTP51 LTP49 LTP48)		    NIL MakeBackLink) Tested? ?)	 (PreTest #((LTFCalledFns)		    NIL MakeBackLink) Tested? T)	 (AltTest ? Tested? ?)	 (SyntaxTest ? Tested? ?)	 (UsesObj #((LOOPSTestClass3)		    NIL AllowRemove))	 (LispName PutMethod)][DEFINST LOOPSTestPrimitive (LTP49 "OYR@@E")         (name #(LTP49 NIL RememberName))	 (TestDesc "PutMethod: prop")	 (SetUp (PutMethod ($ LOOPSTestClass3)			   (QUOTE PM1)			   (QUOTE LTP49)			   (QUOTE Prop1)))	 (TestExpr (EQUAL (GetMethod ($ LOOPSTestClass3)				     (QUOTE PM1)				     (QUOTE Prop1))			  (QUOTE LTP49)))	 (ResetExp (SEND ($ LOOPSTestClass3)			 Delete			 (QUOTE Method)			 (QUOTE PM1)			 (QUOTE Prop1)))	 (PreTest #((LTFGetMethod)		    BuildPreTest MakeBackLink) Tested? T)	 (UsesObj #((LOOPSTestClass3)		    NIL AllowRemove))	 (SubTestOf #((LTFPutMethod)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP48 "OYR@@E")         (name #(LTP48 NIL RememberName))	 (TestDesc "PutMethod: local selector over inherited")	 (SetUp (PutMethod ($ LOOPSTestClass3)			   (QUOTE PM2)			   (QUOTE LOOPSTestClass3.PM2)))	 [TestExpr (AND (EQUAL (GetMethod ($ LOOPSTestClass3)					  (QUOTE PM2))			       (QUOTE LOOPSTestClass3.PM2))			(EQUAL (GetMethod ($ LOOPSTestCases)					  (QUOTE PM2))			       (QUOTE LOOPSTestCases.PM2]	 (SubTest #((LTP50)		    NIL MakeBackLink))	 (PreTest #((LTFGetMethod)		    BuildPreTest MakeBackLink) Tested? T)	 (UsesObj #((LOOPSTestCases LOOPSTestClass3)		    NIL AllowRemove))	 (SubTestOf #((LTFPutMethod)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP52 "OYR@@E")         (name #(LTP52 NIL RememberName))	 (TestDesc "PutMethod: inherited prop, local selector")	 (SetUp (PutMethod ($ LOOPSTestClass3)			   (QUOTE PM3)			   (QUOTE LTP52)			   (QUOTE Prop1)))	 [TestExpr (AND (EQUAL (GetMethod ($ LOOPSTestClass3)					  (QUOTE PM3)					  (QUOTE Prop1))			       (QUOTE LTP52))			(EQUAL (GetMethod ($ LOOPSTestCases)					  (QUOTE PM3)					  (QUOTE Prop1))			       (QUOTE LTC]	 [ResetExp (PROGN (PutMethod ($ LOOPSTestCases)				     (QUOTE PM3)				     (QUOTE LTC)				     (QUOTE Prop1))			  (SEND ($ LOOPSTestClass3)				Delete				(QUOTE Method)				(QUOTE PM3)				(QUOTE Prop1]	 (PreTest #((LTFGetMethod)		    BuildPreTest MakeBackLink) Tested? T)	 (UsesObj #((LOOPSTestClass3 LOOPSTestCases)		    NIL AllowRemove))	 (SubTestOf #((LTFPutMethod)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP51 "OYR@@E")         (name #(LTP51 NIL RememberName))	 (TestDesc "PutMethod: inherited selector")	 (SetUp (PutMethod ($ LOOPSTestClass3)			   (QUOTE PM4)			   (QUOTE LOOPSTestClass3.PM4)))	 [TestExpr (AND (EQUAL (GetMethod ($ LOOPSTestClass3)					  (QUOTE PM4))			       (QUOTE LOOPSTestClass3.PM4))			(EQUAL (GetMethod ($ LOOPSTestCases)					  (QUOTE PM4))			       (QUOTE LOOPSTestCases.PM4]	 [ResetExp (PROGN (SEND ($ LOOPSTestClass3)				Delete				(QUOTE Method)				(QUOTE PM4))			  (PutMethod ($ LOOPSTestCases)				     (QUOTE PM4)				     (QUOTE LOOPSTestCases.PM4]	 (SubTest ? Tested? ?)	 (PreTest #((LTFGetMethod)		    BuildPreTest MakeBackLink) Tested? T)	 (AltTest ? Tested? ?)	 (SyntaxTest ? Tested? ?)	 (UsesObj #((LOOPSTestClass3 LOOPSTestCases)		    NIL AllowRemove))	 (SubTestOf #((LTFPutMethod)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP73 "O\R@@[q")         (name #(LTP73 NIL RememberName))	 (TestDesc "GetMethod: newly added selector to super class")	 (SetUp (SEND ($ LOOPSTestCases)		      Add		      (QUOTE Method)		      (QUOTE GM5)		      (QUOTE LOOPSTestCases.GM5)))	 (TestExpr (EQUAL (GetMethod ($ LOOPSTestClassL1)				     (QUOTE GM5))			  (QUOTE LOOPSTestCases.GM5)))	 (ResetExp (SEND ($ LOOPSTestCases)			 Delete			 (QUOTE Method)			 (QUOTE GM5)))	 (SubTest #((LTP74)		    NIL MakeBackLink))	 (PreTest #((LTMAdd)		    BuildPreTest MakeBackLink) Tested? T)	 (UsesObj #((LOOPSTestClassL1 LOOPSTestCases)		    NIL AllowRemove))	 (SubTestOf #((LTFGetMethod)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP68 "O\R@@[l")         (name #(LTP68 NIL RememberName))	 (TestDesc "GetMethod: prop")	 (SetUp ?)	 (TestExpr (AND (EQUAL (GetMethod ($ LOOPSTestClassL1)					  (QUOTE M1)					  (QUOTE Prop1))			       T)			(EQUAL (GetMethod ($ LOOPSTestClassL1)					  (QUOTE M1)					  (QUOTE args))			       NIL)))	 (SubTest #((LTP72 LTP71 LTP70)		    NIL MakeBackLink))	 (PreTest ? Tested? T)	 (UsesObj #((LOOPSTestClassL1)		    NIL AllowRemove))	 (SubTestOf #((LTFGetMethod)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP50 "OYR@@E")         (name #(LTP50 NIL RememberName))	 (TestDesc "PutMethod: local prop over inherited")	 (SetUp (PutMethod ($ LOOPSTestClass3)			   (QUOTE PM2)			   (QUOTE LTP50)			   (QUOTE Prop1)))	 [TestExpr (AND (EQUAL (GetMethod ($ LOOPSTestClass3)					  (QUOTE PM2)					  (QUOTE Prop1))			       (QUOTE LTP50))			(EQUAL (GetMethod ($ LOOPSTestCases)					  (QUOTE PM2)					  (QUOTE Prop1))			       (QUOTE LTC]	 (PreTest ? Tested? T)	 (UsesObj #((LOOPSTestClass3 LOOPSTestCases)		    NIL AllowRemove))	 (SubTestOf #((LTP48)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP74 "O\R@@[r")         (name #(LTP74 NIL RememberName))	 (TestDesc "GetMethod: newly added prop to super class")	 (SetUp (SEND ($ LOOPSTestCases)		      Add		      (QUOTE Method)		      (QUOTE GM5)		      (QUOTE LTC)		      (QUOTE Prop1)))	 (TestExpr (EQUAL (GetMethod ($ LOOPSTestClassL1)				     (QUOTE GM5)				     (QUOTE Prop1))			  (QUOTE LTC)))	 (ResetExp (SEND ($ LOOPSTestCases)			 Delete			 (QUOTE Method)			 (QUOTE GM5)			 (QUOTE Prop1)))	 (PreTest ? Tested? T)	 (UsesObj #((LOOPSTestClassL1 LOOPSTestCases)		    NIL AllowRemove))	 (SubTestOf #((LTP73)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP72 "O\R@@[p")         (name #(LTP72 NIL RememberName))	 (TestDesc "GetMethod: local prop over inherited")	 (SetUp ?)	 (TestExpr (EQUAL (GetMethod ($ LOOPSTestClassL1)				     (QUOTE M2)				     (QUOTE Prop2))			  T))	 (PreTest ? Tested? T)	 (UsesObj #((LOOPSTestCases LOOPSTestClassL1)		    NIL AllowRemove))	 (SubTestOf #((LTP68)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP71 "O\R@@[o")         (name #(LTP71 NIL RememberName))	 (TestDesc "GetMethod: local selector, inherited prop")	 (SetUp ?)	 (TestExpr (EQUAL (GetMethod ($ LOOPSTestClassL1)				     (QUOTE M2)				     (QUOTE Prop1))			  (QUOTE LTC)))	 (PreTest ? Tested? T)	 (UsesObj #((LOOPSTestClassL1 LOOPSTestCases)		    NIL AllowRemove))	 (SubTestOf #((LTP68)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP70 "O\R@@[n")         (name #(LTP70 NIL RememberName))	 (TestDesc "GetMethod: inherited prop")	 (SetUp ?)	 [TestExpr (AND (EQUAL (GetMethod ($ LOOPSTestClassL1)					  (QUOTE GM4)					  (QUOTE Prop1))			       (QUOTE LTC))			(EQUAL (GetMethod ($ LOOPSTestClassL1)					  (QUOTE GM4)					  (QUOTE Prop2))			       (QUOTE LTD]	 (PreTest ? Tested? T)	 (UsesObj #((LOOPSTestClassL1 LOOPSTestCases)		    NIL AllowRemove))	 (SubTestOf #((LTP68)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP65 "O\R@@[")         (name #(LTP65 NIL RememberName))	 (TestDesc "List in CLASS: Method props")	 (SetUp ?)	 [TestExpr (AND [EQUAL (QUOTE (Prop1 args doc))			       (INTERSECTION (QUOTE (Prop1 args doc))					     (SEND ($ LOOPSTestClassL1)						   List						   (QUOTE Method)						   (QUOTE M1]			(EQUAL (QUOTE (args doc))			       (INTERSECTION (QUOTE (args doc))					     (SEND ($ LOOPSTestClassL1)						   List						   (QUOTE Method)						   (QUOTE M3]	 (SubTest ? Tested? ?)	 (PreTest ? Tested? T)	 (AltTest ? Tested? ?)	 (SyntaxTest ? Tested? ?)	 (UsesObj #((LOOPSTestClassL1)		    NIL AllowRemove))	 (SubTestOf #((LTP63)		      NIL MakeBackLink))][DEFINST LOOPSTestPrimitive (LTP47 "OVR@@A")         (name #(LTP47 NIL RememberName))	 (TestDesc "Delete in CLASS: prop of method")	 [SetUp (PROGN (SEND ($ LOOPSTestClass5)			     Delete			     (QUOTE Method)			     (QUOTE DM2)			     (QUOTE Prop1))		       (SETQ LTV3 (SEND ($ LOOPSTestClass5)					List					(QUOTE Method)					(QUOTE DM2]	 (TestExpr (AND (ATEST (NOT (FMEMB (QUOTE Prop1)					   LTV3))			       "deleted property is no longer there")			(ATEST (FMEMB (QUOTE doc)				      LTV3)			       "other properties were not deleted")))	 [ResetExp (PROGN (SEND ($ LOOPSTestClass5)				Add				(QUOTE Method)				(QUOTE DM2)				NIL				(QUOTE Prop1))			  (SEND ($ LOOPSTestClass5)				Add				(QUOTE Method)				(QUOTE DM2)				(QUOTE (* used by LTP47))				(QUOTE doc]	 (SubTest ? Tested? ?)	 (PreTest ? Tested? T)	 (AltTest ? Tested? ?)	 (SyntaxTest ? Tested? ?)	 (UsesObj #((LOOPSTestClass5)		    NIL AllowRemove))	 (SubTestOf #((LTP43)		      NIL MakeBackLink))](PUTPROPS LTPUTMETHODTEST COPYRIGHT ("Xerox Corporation" 1985))(DECLARE: DONTCOPY  (FILEMAP (NIL)))STOP